var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module52, copyDefault, desc) => {
  if (module52 && typeof module52 === "object" || typeof module52 === "function") {
    for (let key of __getOwnPropNames(module52))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module52[key], enumerable: !(desc = __getOwnPropDesc(module52, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache2) => {
  return (module52, temp) => {
    return cache2 && cache2.get(module52) || (temp = __reExport(__markAsModule({}), module52, 1), cache2 && cache2.set(module52, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var __privateWrapper = (obj, member, setter, getter) => {
  return {
    set _(value) {
      __privateSet(obj, member, value, setter);
    },
    get _() {
      return __privateGet(obj, member, getter);
    }
  };
};

// node_modules/.pnpm/tsup@5.11.11_typescript@4.5.4/node_modules/tsup/assets/esm_shims.js
var init_esm_shims = __esm({
  "node_modules/.pnpm/tsup@5.11.11_typescript@4.5.4/node_modules/tsup/assets/esm_shims.js"() {
  }
});

// node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js
var iterator_exports = {};
__export(iterator_exports, {
  default: () => iterator_default
});
var exports29, module30, iterator_default;
var init_iterator = __esm({
  "node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/iterator.js"() {
    init_esm_shims();
    exports29 = {};
    module30 = {
      get exports() {
        return exports29;
      },
      set exports(value) {
        exports29 = value;
      }
    };
    module30.exports = function(Yallist3) {
      Yallist3.prototype[Symbol.iterator] = function* () {
        for (let walker = this.head; walker; walker = walker.next) {
          yield walker.value;
        }
      };
    };
    iterator_default = module30.exports;
  }
});

// src/index.ts
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/lodash.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isSymbol.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseGetTag.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_Symbol.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_root.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_freeGlobal.js
init_esm_shims();
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeGlobal_default = freeGlobal;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_root.js
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal_default || freeSelf || Function("return this")();
var root_default = root;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_Symbol.js
var Symbol2 = root_default.Symbol;
var Symbol_default = Symbol2;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getRawTag.js
init_esm_shims();
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
var nativeObjectToString = objectProto.toString;
var symToStringTag = Symbol_default ? Symbol_default.toStringTag : void 0;
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
  try {
    value[symToStringTag] = void 0;
    var unmasked = true;
  } catch (e) {
  }
  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}
var getRawTag_default = getRawTag;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_objectToString.js
init_esm_shims();
var objectProto2 = Object.prototype;
var nativeObjectToString2 = objectProto2.toString;
function objectToString(value) {
  return nativeObjectToString2.call(value);
}
var objectToString_default = objectToString;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseGetTag.js
var nullTag = "[object Null]";
var undefinedTag = "[object Undefined]";
var symToStringTag2 = Symbol_default ? Symbol_default.toStringTag : void 0;
function baseGetTag(value) {
  if (value == null) {
    return value === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag2 && symToStringTag2 in Object(value) ? getRawTag_default(value) : objectToString_default(value);
}
var baseGetTag_default = baseGetTag;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isObjectLike.js
init_esm_shims();
function isObjectLike(value) {
  return value != null && typeof value == "object";
}
var isObjectLike_default = isObjectLike;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isSymbol.js
var symbolTag = "[object Symbol]";
function isSymbol(value) {
  return typeof value == "symbol" || isObjectLike_default(value) && baseGetTag_default(value) == symbolTag;
}
var isSymbol_default = isSymbol;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseToString.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayMap.js
init_esm_shims();
function arrayMap(array, iteratee) {
  var index = -1, length = array == null ? 0 : array.length, result = Array(length);
  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}
var arrayMap_default = arrayMap;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArray.js
init_esm_shims();
var isArray = Array.isArray;
var isArray_default = isArray;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseToString.js
var INFINITY = 1 / 0;
var symbolProto = Symbol_default ? Symbol_default.prototype : void 0;
var symbolToString = symbolProto ? symbolProto.toString : void 0;
function baseToString(value) {
  if (typeof value == "string") {
    return value;
  }
  if (isArray_default(value)) {
    return arrayMap_default(value, baseToString) + "";
  }
  if (isSymbol_default(value)) {
    return symbolToString ? symbolToString.call(value) : "";
  }
  var result = value + "";
  return result == "0" && 1 / value == -INFINITY ? "-0" : result;
}
var baseToString_default = baseToString;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isObject.js
init_esm_shims();
function isObject(value) {
  var type = typeof value;
  return value != null && (type == "object" || type == "function");
}
var isObject_default = isObject;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/identity.js
init_esm_shims();
function identity(value) {
  return value;
}
var identity_default = identity;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getNative.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsNative.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isFunction.js
init_esm_shims();
var asyncTag = "[object AsyncFunction]";
var funcTag = "[object Function]";
var genTag = "[object GeneratorFunction]";
var proxyTag = "[object Proxy]";
function isFunction(value) {
  if (!isObject_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}
var isFunction_default = isFunction;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isMasked.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_coreJsData.js
init_esm_shims();
var coreJsData = root_default["__core-js_shared__"];
var coreJsData_default = coreJsData;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isMasked.js
var maskSrcKey = function() {
  var uid = /[^.]+$/.exec(coreJsData_default && coreJsData_default.keys && coreJsData_default.keys.IE_PROTO || "");
  return uid ? "Symbol(src)_1." + uid : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var isMasked_default = isMasked;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_toSource.js
init_esm_shims();
var funcProto = Function.prototype;
var funcToString = funcProto.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {
    }
    try {
      return func + "";
    } catch (e) {
    }
  }
  return "";
}
var toSource_default = toSource;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsNative.js
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto2 = Function.prototype;
var objectProto3 = Object.prototype;
var funcToString2 = funcProto2.toString;
var hasOwnProperty2 = objectProto3.hasOwnProperty;
var reIsNative = RegExp("^" + funcToString2.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function baseIsNative(value) {
  if (!isObject_default(value) || isMasked_default(value)) {
    return false;
  }
  var pattern = isFunction_default(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource_default(value));
}
var baseIsNative_default = baseIsNative;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getValue.js
init_esm_shims();
function getValue(object, key) {
  return object == null ? void 0 : object[key];
}
var getValue_default = getValue;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getNative.js
function getNative(object, key) {
  var value = getValue_default(object, key);
  return baseIsNative_default(value) ? value : void 0;
}
var getNative_default = getNative;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_apply.js
init_esm_shims();
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var apply_default = apply;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_shortOut.js
init_esm_shims();
var HOT_COUNT = 800;
var HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var shortOut_default = shortOut;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_setToString.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseSetToString.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/constant.js
init_esm_shims();
function constant(value) {
  return function() {
    return value;
  };
}
var constant_default = constant;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_defineProperty.js
init_esm_shims();
var defineProperty = function() {
  try {
    var func = getNative_default(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e) {
  }
}();
var defineProperty_default = defineProperty;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseSetToString.js
var baseSetToString = !defineProperty_default ? identity_default : function(func, string) {
  return defineProperty_default(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant_default(string),
    "writable": true
  });
};
var baseSetToString_default = baseSetToString;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_setToString.js
var setToString = shortOut_default(baseSetToString_default);
var setToString_default = setToString;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isIndex.js
init_esm_shims();
var MAX_SAFE_INTEGER = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
}
var isIndex_default = isIndex;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_assignValue.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseAssignValue.js
init_esm_shims();
function baseAssignValue(object, key, value) {
  if (key == "__proto__" && defineProperty_default) {
    defineProperty_default(object, key, {
      "configurable": true,
      "enumerable": true,
      "value": value,
      "writable": true
    });
  } else {
    object[key] = value;
  }
}
var baseAssignValue_default = baseAssignValue;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/eq.js
init_esm_shims();
function eq(value, other) {
  return value === other || value !== value && other !== other;
}
var eq_default = eq;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_assignValue.js
var objectProto4 = Object.prototype;
var hasOwnProperty3 = objectProto4.hasOwnProperty;
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty3.call(object, key) && eq_default(objValue, value)) || value === void 0 && !(key in object)) {
    baseAssignValue_default(object, key, value);
  }
}
var assignValue_default = assignValue;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_copyObject.js
init_esm_shims();
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1, length = props.length;
  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
    if (newValue === void 0) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue_default(object, key, newValue);
    } else {
      assignValue_default(object, key, newValue);
    }
  }
  return object;
}
var copyObject_default = copyObject;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createAssigner.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseRest.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_overRest.js
init_esm_shims();
var nativeMax = Math.max;
function overRest(func, start, transform) {
  start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply_default(func, this, otherArgs);
  };
}
var overRest_default = overRest;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseRest.js
function baseRest(func, start) {
  return setToString_default(overRest_default(func, start, identity_default), func + "");
}
var baseRest_default = baseRest;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isIterateeCall.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArrayLike.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isLength.js
init_esm_shims();
var MAX_SAFE_INTEGER2 = 9007199254740991;
function isLength(value) {
  return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER2;
}
var isLength_default = isLength;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArrayLike.js
function isArrayLike(value) {
  return value != null && isLength_default(value.length) && !isFunction_default(value);
}
var isArrayLike_default = isArrayLike;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isIterateeCall.js
function isIterateeCall(value, index, object) {
  if (!isObject_default(object)) {
    return false;
  }
  var type = typeof index;
  if (type == "number" ? isArrayLike_default(object) && isIndex_default(index, object.length) : type == "string" && index in object) {
    return eq_default(object[index], value);
  }
  return false;
}
var isIterateeCall_default = isIterateeCall;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createAssigner.js
function createAssigner(assigner) {
  return baseRest_default(function(object, sources) {
    var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall_default(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}
var createAssigner_default = createAssigner;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isPrototype.js
init_esm_shims();
var objectProto5 = Object.prototype;
function isPrototype(value) {
  var Ctor = value && value.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto5;
  return value === proto2;
}
var isPrototype_default = isPrototype;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/keys.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayLikeKeys.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseTimes.js
init_esm_shims();
function baseTimes(n, iteratee) {
  var index = -1, result = Array(n);
  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}
var baseTimes_default = baseTimes;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArguments.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsArguments.js
init_esm_shims();
var argsTag = "[object Arguments]";
function baseIsArguments(value) {
  return isObjectLike_default(value) && baseGetTag_default(value) == argsTag;
}
var baseIsArguments_default = baseIsArguments;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArguments.js
var objectProto6 = Object.prototype;
var hasOwnProperty4 = objectProto6.hasOwnProperty;
var propertyIsEnumerable = objectProto6.propertyIsEnumerable;
var isArguments = baseIsArguments_default(function() {
  return arguments;
}()) ? baseIsArguments_default : function(value) {
  return isObjectLike_default(value) && hasOwnProperty4.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
};
var isArguments_default = isArguments;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isBuffer.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/stubFalse.js
init_esm_shims();
function stubFalse() {
  return false;
}
var stubFalse_default = stubFalse;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isBuffer.js
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer2 = moduleExports ? root_default.Buffer : void 0;
var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse_default;
var isBuffer_default = isBuffer;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isTypedArray.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsTypedArray.js
init_esm_shims();
var argsTag2 = "[object Arguments]";
var arrayTag = "[object Array]";
var boolTag = "[object Boolean]";
var dateTag = "[object Date]";
var errorTag = "[object Error]";
var funcTag2 = "[object Function]";
var mapTag = "[object Map]";
var numberTag = "[object Number]";
var objectTag = "[object Object]";
var regexpTag = "[object RegExp]";
var setTag = "[object Set]";
var stringTag = "[object String]";
var weakMapTag = "[object WeakMap]";
var arrayBufferTag = "[object ArrayBuffer]";
var dataViewTag = "[object DataView]";
var float32Tag = "[object Float32Array]";
var float64Tag = "[object Float64Array]";
var int8Tag = "[object Int8Array]";
var int16Tag = "[object Int16Array]";
var int32Tag = "[object Int32Array]";
var uint8Tag = "[object Uint8Array]";
var uint8ClampedTag = "[object Uint8ClampedArray]";
var uint16Tag = "[object Uint16Array]";
var uint32Tag = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag2] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag2] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
function baseIsTypedArray(value) {
  return isObjectLike_default(value) && isLength_default(value.length) && !!typedArrayTags[baseGetTag_default(value)];
}
var baseIsTypedArray_default = baseIsTypedArray;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseUnary.js
init_esm_shims();
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}
var baseUnary_default = baseUnary;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_nodeUtil.js
init_esm_shims();
var freeExports2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule2 = freeExports2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
var freeProcess = moduleExports2 && freeGlobal_default.process;
var nodeUtil = function() {
  try {
    var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
    if (types) {
      return types;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e) {
  }
}();
var nodeUtil_default = nodeUtil;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isTypedArray.js
var nodeIsTypedArray = nodeUtil_default && nodeUtil_default.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary_default(nodeIsTypedArray) : baseIsTypedArray_default;
var isTypedArray_default = isTypedArray;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayLikeKeys.js
var objectProto7 = Object.prototype;
var hasOwnProperty5 = objectProto7.hasOwnProperty;
function arrayLikeKeys(value, inherited) {
  var isArr = isArray_default(value), isArg = !isArr && isArguments_default(value), isBuff = !isArr && !isArg && isBuffer_default(value), isType = !isArr && !isArg && !isBuff && isTypedArray_default(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes_default(value.length, String) : [], length = result.length;
  for (var key in value) {
    if ((inherited || hasOwnProperty5.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex_default(key, length)))) {
      result.push(key);
    }
  }
  return result;
}
var arrayLikeKeys_default = arrayLikeKeys;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeys.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_nativeKeys.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_overArg.js
init_esm_shims();
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var overArg_default = overArg;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_nativeKeys.js
var nativeKeys = overArg_default(Object.keys, Object);
var nativeKeys_default = nativeKeys;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeys.js
var objectProto8 = Object.prototype;
var hasOwnProperty6 = objectProto8.hasOwnProperty;
function baseKeys(object) {
  if (!isPrototype_default(object)) {
    return nativeKeys_default(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty6.call(object, key) && key != "constructor") {
      result.push(key);
    }
  }
  return result;
}
var baseKeys_default = baseKeys;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/keys.js
function keys(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object) : baseKeys_default(object);
}
var keys_default = keys;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/keysIn.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeysIn.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_nativeKeysIn.js
init_esm_shims();
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}
var nativeKeysIn_default = nativeKeysIn;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseKeysIn.js
var objectProto9 = Object.prototype;
var hasOwnProperty7 = objectProto9.hasOwnProperty;
function baseKeysIn(object) {
  if (!isObject_default(object)) {
    return nativeKeysIn_default(object);
  }
  var isProto = isPrototype_default(object), result = [];
  for (var key in object) {
    if (!(key == "constructor" && (isProto || !hasOwnProperty7.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}
var baseKeysIn_default = baseKeysIn;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/keysIn.js
function keysIn(object) {
  return isArrayLike_default(object) ? arrayLikeKeys_default(object, true) : baseKeysIn_default(object);
}
var keysIn_default = keysIn;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/assignInWith.js
init_esm_shims();
var assignInWith = createAssigner_default(function(object, source, srcIndex, customizer) {
  copyObject_default(source, keysIn_default(source), object, customizer);
});
var assignInWith_default = assignInWith;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/toString.js
init_esm_shims();
function toString(value) {
  return value == null ? "" : baseToString_default(value);
}
var toString_default = toString;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/attempt.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isError.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isPlainObject.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_getPrototype.js
init_esm_shims();
var getPrototype = overArg_default(Object.getPrototypeOf, Object);
var getPrototype_default = getPrototype;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isPlainObject.js
var objectTag2 = "[object Object]";
var funcProto3 = Function.prototype;
var objectProto10 = Object.prototype;
var funcToString3 = funcProto3.toString;
var hasOwnProperty8 = objectProto10.hasOwnProperty;
var objectCtorString = funcToString3.call(Object);
function isPlainObject(value) {
  if (!isObjectLike_default(value) || baseGetTag_default(value) != objectTag2) {
    return false;
  }
  var proto2 = getPrototype_default(value);
  if (proto2 === null) {
    return true;
  }
  var Ctor = hasOwnProperty8.call(proto2, "constructor") && proto2.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString3.call(Ctor) == objectCtorString;
}
var isPlainObject_default = isPlainObject;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isError.js
var domExcTag = "[object DOMException]";
var errorTag2 = "[object Error]";
function isError(value) {
  if (!isObjectLike_default(value)) {
    return false;
  }
  var tag = baseGetTag_default(value);
  return tag == errorTag2 || tag == domExcTag || typeof value.message == "string" && typeof value.name == "string" && !isPlainObject_default(value);
}
var isError_default = isError;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/attempt.js
var attempt = baseRest_default(function(func, args) {
  try {
    return apply_default(func, void 0, args);
  } catch (e) {
    return isError_default(e) ? e : new Error(e);
  }
});
var attempt_default = attempt;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_basePropertyOf.js
init_esm_shims();
function basePropertyOf(object) {
  return function(key) {
    return object == null ? void 0 : object[key];
  };
}
var basePropertyOf_default = basePropertyOf;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/escape.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_escapeHtmlChar.js
init_esm_shims();
var htmlEscapes = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var escapeHtmlChar = basePropertyOf_default(htmlEscapes);
var escapeHtmlChar_default = escapeHtmlChar;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/escape.js
var reUnescapedHtml = /[&<>"']/g;
var reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
function escape(string) {
  string = toString_default(string);
  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar_default) : string;
}
var escape_default = escape;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseValues.js
init_esm_shims();
function baseValues(object, props) {
  return arrayMap_default(props, function(key) {
    return object[key];
  });
}
var baseValues_default = baseValues;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/template.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_customDefaultsAssignIn.js
init_esm_shims();
var objectProto11 = Object.prototype;
var hasOwnProperty9 = objectProto11.hasOwnProperty;
function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === void 0 || eq_default(objValue, objectProto11[key]) && !hasOwnProperty9.call(object, key)) {
    return srcValue;
  }
  return objValue;
}
var customDefaultsAssignIn_default = customDefaultsAssignIn;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_escapeStringChar.js
init_esm_shims();
var stringEscapes = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function escapeStringChar(chr) {
  return "\\" + stringEscapes[chr];
}
var escapeStringChar_default = escapeStringChar;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_reInterpolate.js
init_esm_shims();
var reInterpolate = /<%=([\s\S]+?)%>/g;
var reInterpolate_default = reInterpolate;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/templateSettings.js
init_esm_shims();

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_reEscape.js
init_esm_shims();
var reEscape = /<%-([\s\S]+?)%>/g;
var reEscape_default = reEscape;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_reEvaluate.js
init_esm_shims();
var reEvaluate = /<%([\s\S]+?)%>/g;
var reEvaluate_default = reEvaluate;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/templateSettings.js
var templateSettings = {
  "escape": reEscape_default,
  "evaluate": reEvaluate_default,
  "interpolate": reInterpolate_default,
  "variable": "",
  "imports": {
    "_": { "escape": escape_default }
  }
};
var templateSettings_default = templateSettings;

// node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/template.js
var INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
var reEmptyStringLeading = /\b__p \+= '';/g;
var reEmptyStringMiddle = /\b(__p \+=) '' \+/g;
var reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
var reNoMatch = /($^)/;
var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
var objectProto12 = Object.prototype;
var hasOwnProperty10 = objectProto12.hasOwnProperty;
function template(string, options, guard) {
  var settings = templateSettings_default.imports._.templateSettings || templateSettings_default;
  if (guard && isIterateeCall_default(string, options, guard)) {
    options = void 0;
  }
  string = toString_default(string);
  options = assignInWith_default({}, options, settings, customDefaultsAssignIn_default);
  var imports = assignInWith_default({}, options.imports, settings.imports, customDefaultsAssignIn_default), importsKeys = keys_default(imports), importsValues = baseValues_default(imports, importsKeys);
  var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
  var reDelimiters = RegExp((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate_default ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
  var sourceURL = hasOwnProperty10.call(options, "sourceURL") ? "//# sourceURL=" + (options.sourceURL + "").replace(/\s/g, " ") + "\n" : "";
  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue);
    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar_default);
    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }
    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }
    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }
    index = offset + match.length;
    return match;
  });
  source += "';\n";
  var variable = hasOwnProperty10.call(options, "variable") && options.variable;
  if (!variable) {
    source = "with (obj) {\n" + source + "\n}\n";
  } else if (reForbiddenIdentifierChars.test(variable)) {
    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
  }
  source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
  source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
  var result = attempt_default(function() {
    return Function(importsKeys, sourceURL + "return " + source).apply(void 0, importsValues);
  });
  result.source = source;
  if (isError_default(result)) {
    throw result;
  }
  return result;
}
var template_default = template;

// src/index.ts
import path6 from "path";

// node_modules/.pnpm/read-pkg-up@9.0.0/node_modules/read-pkg-up/index.js
init_esm_shims();
import path5 from "path";

// node_modules/.pnpm/find-up@6.2.0/node_modules/find-up/index.js
init_esm_shims();
import path2 from "path";

// node_modules/.pnpm/locate-path@7.0.0/node_modules/locate-path/index.js
init_esm_shims();
import process2 from "process";
import path from "path";
import fs, { promises as fsPromises } from "fs";

// node_modules/.pnpm/p-locate@6.0.0/node_modules/p-locate/index.js
init_esm_shims();

// node_modules/.pnpm/p-limit@4.0.0/node_modules/p-limit/index.js
init_esm_shims();

// node_modules/.pnpm/yocto-queue@1.0.0/node_modules/yocto-queue/index.js
init_esm_shims();
var Node = class {
  value;
  next;
  constructor(value) {
    this.value = value;
  }
};
var _head, _tail, _size;
var Queue = class {
  constructor() {
    __privateAdd(this, _head, void 0);
    __privateAdd(this, _tail, void 0);
    __privateAdd(this, _size, void 0);
    this.clear();
  }
  enqueue(value) {
    const node = new Node(value);
    if (__privateGet(this, _head)) {
      __privateGet(this, _tail).next = node;
      __privateSet(this, _tail, node);
    } else {
      __privateSet(this, _head, node);
      __privateSet(this, _tail, node);
    }
    __privateWrapper(this, _size)._++;
  }
  dequeue() {
    const current = __privateGet(this, _head);
    if (!current) {
      return;
    }
    __privateSet(this, _head, __privateGet(this, _head).next);
    __privateWrapper(this, _size)._--;
    return current.value;
  }
  clear() {
    __privateSet(this, _head, void 0);
    __privateSet(this, _tail, void 0);
    __privateSet(this, _size, 0);
  }
  get size() {
    return __privateGet(this, _size);
  }
  *[Symbol.iterator]() {
    let current = __privateGet(this, _head);
    while (current) {
      yield current.value;
      current = current.next;
    }
  }
};
_head = new WeakMap();
_tail = new WeakMap();
_size = new WeakMap();

// node_modules/.pnpm/p-limit@4.0.0/node_modules/p-limit/index.js
function pLimit(concurrency) {
  if (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {
    throw new TypeError("Expected `concurrency` to be a number from 1 and up");
  }
  const queue = new Queue();
  let activeCount = 0;
  const next = () => {
    activeCount--;
    if (queue.size > 0) {
      queue.dequeue()();
    }
  };
  const run = async (fn, resolve, args) => {
    activeCount++;
    const result = (async () => fn(...args))();
    resolve(result);
    try {
      await result;
    } catch {
    }
    next();
  };
  const enqueue = (fn, resolve, args) => {
    queue.enqueue(run.bind(void 0, fn, resolve, args));
    (async () => {
      await Promise.resolve();
      if (activeCount < concurrency && queue.size > 0) {
        queue.dequeue()();
      }
    })();
  };
  const generator = (fn, ...args) => new Promise((resolve) => {
    enqueue(fn, resolve, args);
  });
  Object.defineProperties(generator, {
    activeCount: {
      get: () => activeCount
    },
    pendingCount: {
      get: () => queue.size
    },
    clearQueue: {
      value: () => {
        queue.clear();
      }
    }
  });
  return generator;
}

// node_modules/.pnpm/p-locate@6.0.0/node_modules/p-locate/index.js
var EndError = class extends Error {
  constructor(value) {
    super();
    this.value = value;
  }
};
var testElement = async (element, tester) => tester(await element);
var finder = async (element) => {
  const values = await Promise.all(element);
  if (values[1] === true) {
    throw new EndError(values[0]);
  }
  return false;
};
async function pLocate(iterable, tester, {
  concurrency = Number.POSITIVE_INFINITY,
  preserveOrder = true
} = {}) {
  const limit = pLimit(concurrency);
  const items = [...iterable].map((element) => [element, limit(testElement, element, tester)]);
  const checkLimit = pLimit(preserveOrder ? 1 : Number.POSITIVE_INFINITY);
  try {
    await Promise.all(items.map((element) => checkLimit(finder, element)));
  } catch (error) {
    if (error instanceof EndError) {
      return error.value;
    }
    throw error;
  }
}

// node_modules/.pnpm/locate-path@7.0.0/node_modules/locate-path/index.js
var typeMappings = {
  directory: "isDirectory",
  file: "isFile"
};
function checkType(type) {
  if (type in typeMappings) {
    return;
  }
  throw new Error(`Invalid type specified: ${type}`);
}
var matchType = (type, stat) => type === void 0 || stat[typeMappings[type]]();
async function locatePath(paths, {
  cwd = process2.cwd(),
  type = "file",
  allowSymlinks = true,
  concurrency,
  preserveOrder
} = {}) {
  checkType(type);
  const statFunction = allowSymlinks ? fsPromises.stat : fsPromises.lstat;
  return pLocate(paths, async (path_) => {
    try {
      const stat = await statFunction(path.resolve(cwd, path_));
      return matchType(type, stat);
    } catch {
      return false;
    }
  }, { concurrency, preserveOrder });
}

// node_modules/.pnpm/path-exists@5.0.0/node_modules/path-exists/index.js
init_esm_shims();

// node_modules/.pnpm/find-up@6.2.0/node_modules/find-up/index.js
var findUpStop = Symbol("findUpStop");
async function findUpMultiple(name, options = {}) {
  let directory = path2.resolve(options.cwd || "");
  const { root: root2 } = path2.parse(directory);
  const stopAt = path2.resolve(directory, options.stopAt || root2);
  const limit = options.limit || Number.POSITIVE_INFINITY;
  const paths = [name].flat();
  const runMatcher = async (locateOptions) => {
    if (typeof name !== "function") {
      return locatePath(paths, locateOptions);
    }
    const foundPath = await name(locateOptions.cwd);
    if (typeof foundPath === "string") {
      return locatePath([foundPath], locateOptions);
    }
    return foundPath;
  };
  const matches = [];
  while (true) {
    const foundPath = await runMatcher(__spreadProps(__spreadValues({}, options), { cwd: directory }));
    if (foundPath === findUpStop) {
      break;
    }
    if (foundPath) {
      matches.push(path2.resolve(directory, foundPath));
    }
    if (directory === stopAt || matches.length >= limit) {
      break;
    }
    directory = path2.dirname(directory);
  }
  return matches;
}
async function findUp(name, options = {}) {
  const matches = await findUpMultiple(name, __spreadProps(__spreadValues({}, options), { limit: 1 }));
  return matches[0];
}

// node_modules/.pnpm/read-pkg@7.0.0/node_modules/read-pkg/index.js
init_esm_shims();
import process4 from "process";
import fs3, { promises as fsPromises2 } from "fs";
import path4 from "path";

// node_modules/.pnpm/parse-json@5.2.0/node_modules/parse-json/index.js
init_esm_shims();

// node_modules/.pnpm/@babel+code-frame@7.16.7/node_modules/@babel/code-frame/lib/index.js
var lib_exports3 = {};
__export(lib_exports3, {
  codeFrameColumns: () => __export08,
  default: () => lib_default2
});
init_esm_shims();

// node_modules/.pnpm/@babel+highlight@7.16.7/node_modules/@babel/highlight/lib/index.js
var lib_exports2 = {};
__export(lib_exports2, {
  default: () => lib_default,
  getChalk: () => __export07,
  shouldHighlight: () => __export15
});
init_esm_shims();

// node_modules/.pnpm/chalk@2.4.2/node_modules/chalk/index.js
var chalk_exports = {};
__export(chalk_exports, {
  default: () => chalk_default,
  supportsColor: () => __export02
});
init_esm_shims();

// node_modules/.pnpm/chalk@2.4.2/node_modules/chalk/templates.js
var templates_exports = {};
__export(templates_exports, {
  default: () => templates_default
});
init_esm_shims();
var exports2 = {};
var module2 = {
  get exports() {
    return exports2;
  },
  set exports(value) {
    exports2 = value;
  }
};
var TEMPLATE_REGEX = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
var STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
var STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
var ESCAPE_REGEX = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;
var ESCAPES = /* @__PURE__ */ new Map([
  ["n", "\n"],
  ["r", "\r"],
  ["t", "	"],
  ["b", "\b"],
  ["f", "\f"],
  ["v", "\v"],
  ["0", "\0"],
  ["\\", "\\"],
  ["e", "\x1B"],
  ["a", "\x07"]
]);
function unescape(c) {
  if (c[0] === "u" && c.length === 5 || c[0] === "x" && c.length === 3) {
    return String.fromCharCode(parseInt(c.slice(1), 16));
  }
  return ESCAPES.get(c) || c;
}
function parseArguments(name, args) {
  const results = [];
  const chunks = args.trim().split(/\s*,\s*/g);
  let matches;
  for (const chunk of chunks) {
    if (!isNaN(chunk)) {
      results.push(Number(chunk));
    } else if (matches = chunk.match(STRING_REGEX)) {
      results.push(matches[2].replace(ESCAPE_REGEX, (m, escape2, chr) => escape2 ? unescape(escape2) : chr));
    } else {
      throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
    }
  }
  return results;
}
function parseStyle(style) {
  STYLE_REGEX.lastIndex = 0;
  const results = [];
  let matches;
  while ((matches = STYLE_REGEX.exec(style)) !== null) {
    const name = matches[1];
    if (matches[2]) {
      const args = parseArguments(name, matches[2]);
      results.push([name].concat(args));
    } else {
      results.push([name]);
    }
  }
  return results;
}
function buildStyle(chalk, styles2) {
  const enabled = {};
  for (const layer of styles2) {
    for (const style of layer.styles) {
      enabled[style[0]] = layer.inverse ? null : style.slice(1);
    }
  }
  let current = chalk;
  for (const styleName of Object.keys(enabled)) {
    if (Array.isArray(enabled[styleName])) {
      if (!(styleName in current)) {
        throw new Error(`Unknown Chalk style: ${styleName}`);
      }
      if (enabled[styleName].length > 0) {
        current = current[styleName].apply(current, enabled[styleName]);
      } else {
        current = current[styleName];
      }
    }
  }
  return current;
}
module2.exports = (chalk, tmp) => {
  const styles2 = [];
  const chunks = [];
  let chunk = [];
  tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {
    if (escapeChar) {
      chunk.push(unescape(escapeChar));
    } else if (style) {
      const str = chunk.join("");
      chunk = [];
      chunks.push(styles2.length === 0 ? str : buildStyle(chalk, styles2)(str));
      styles2.push({ inverse, styles: parseStyle(style) });
    } else if (close) {
      if (styles2.length === 0) {
        throw new Error("Found extraneous } in Chalk template literal");
      }
      chunks.push(buildStyle(chalk, styles2)(chunk.join("")));
      chunk = [];
      styles2.pop();
    } else {
      chunk.push(chr);
    }
  });
  chunks.push(chunk.join(""));
  if (styles2.length > 0) {
    const errMsg = `Chalk template literal is missing ${styles2.length} closing bracket${styles2.length === 1 ? "" : "s"} (\`}\`)`;
    throw new Error(errMsg);
  }
  return chunks.join("");
};
var templates_default = module2.exports;

// node_modules/.pnpm/supports-color@5.5.0/node_modules/supports-color/index.js
var supports_color_exports = {};
__export(supports_color_exports, {
  default: () => supports_color_default,
  stdout: () => __export1,
  supportsColor: () => __export0
});
init_esm_shims();

// node_modules/.pnpm/has-flag@3.0.0/node_modules/has-flag/index.js
var has_flag_exports = {};
__export(has_flag_exports, {
  default: () => has_flag_default
});
init_esm_shims();
var exports3 = {};
var module3 = {
  get exports() {
    return exports3;
  },
  set exports(value) {
    exports3 = value;
  }
};
module3.exports = (flag, argv) => {
  argv = argv || process.argv;
  const prefix = flag.startsWith("-") ? "" : flag.length === 1 ? "-" : "--";
  const pos = argv.indexOf(prefix + flag);
  const terminatorPos = argv.indexOf("--");
  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};
var has_flag_default = module3.exports;

// node_modules/.pnpm/supports-color@5.5.0/node_modules/supports-color/index.js
import * as $cjs$os from "os";
function $$cjs_default$$(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global2 !== "undefined" && global2 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global2 = globalThis;
var exports4 = {};
var module4 = {
  get exports() {
    return exports4;
  },
  set exports(value) {
    exports4 = value;
  }
};
var os = $$cjs_default$$(typeof $cjs$os !== "undefined" ? $cjs$os : {});
var hasFlag = $$cjs_default$$(typeof has_flag_exports !== "undefined" ? has_flag_exports : {});
var env = process.env;
var forceColor;
if (hasFlag("no-color") || hasFlag("no-colors") || hasFlag("color=false")) {
  forceColor = false;
} else if (hasFlag("color") || hasFlag("colors") || hasFlag("color=true") || hasFlag("color=always")) {
  forceColor = true;
}
if ("FORCE_COLOR" in env) {
  forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
}
function translateLevel(level) {
  if (level === 0) {
    return false;
  }
  return {
    level,
    hasBasic: true,
    has256: level >= 2,
    has16m: level >= 3
  };
}
function supportsColor(stream2) {
  if (forceColor === false) {
    return 0;
  }
  if (hasFlag("color=16m") || hasFlag("color=full") || hasFlag("color=truecolor")) {
    return 3;
  }
  if (hasFlag("color=256")) {
    return 2;
  }
  if (stream2 && !stream2.isTTY && forceColor !== true) {
    return 0;
  }
  const min = forceColor ? 1 : 0;
  if (process.platform === "win32") {
    const osRelease = os.release().split(".");
    if (Number(process.versions.node.split(".")[0]) >= 8 && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
      return Number(osRelease[2]) >= 14931 ? 3 : 2;
    }
    return 1;
  }
  if ("CI" in env) {
    if (["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some((sign) => sign in env) || env.CI_NAME === "codeship") {
      return 1;
    }
    return min;
  }
  if ("TEAMCITY_VERSION" in env) {
    return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
  }
  if (env.COLORTERM === "truecolor") {
    return 3;
  }
  if ("TERM_PROGRAM" in env) {
    const version = parseInt((env.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
    switch (env.TERM_PROGRAM) {
      case "iTerm.app":
        return version >= 3 ? 3 : 2;
      case "Apple_Terminal":
        return 2;
    }
  }
  if (/-256(color)?$/i.test(env.TERM)) {
    return 2;
  }
  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
    return 1;
  }
  if ("COLORTERM" in env) {
    return 1;
  }
  if (env.TERM === "dumb") {
    return min;
  }
  return min;
}
function getSupportLevel(stream2) {
  const level = supportsColor(stream2);
  return translateLevel(level);
}
module4.exports = {
  supportsColor: getSupportLevel,
  stdout: getSupportLevel(process.stdout),
  stderr: getSupportLevel(process.stderr)
};
var __export0;
var __export1;
if (Object.isExtensible(module4.exports) && Object.keys(module4.exports).length === 2) {
  __export0 = module4.exports["supportsColor"];
  __export1 = module4.exports["stdout"];
}
var supports_color_default = module4.exports;

// node_modules/.pnpm/ansi-styles@3.2.1/node_modules/ansi-styles/index.js
var ansi_styles_exports = {};
__export(ansi_styles_exports, {
  default: () => ansi_styles_default
});
init_esm_shims();

// node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/index.js
var color_convert_exports = {};
__export(color_convert_exports, {
  default: () => color_convert_default
});
init_esm_shims();

// node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/route.js
var route_exports = {};
__export(route_exports, {
  default: () => route_default
});
init_esm_shims();

// node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/conversions.js
var conversions_exports = {};
__export(conversions_exports, {
  default: () => conversions_default
});
init_esm_shims();

// node_modules/.pnpm/color-name@1.1.3/node_modules/color-name/index.js
var color_name_exports = {};
__export(color_name_exports, {
  default: () => color_name_default
});
init_esm_shims();
var exports5 = {};
var module5 = {
  get exports() {
    return exports5;
  },
  set exports(value) {
    exports5 = value;
  }
};
module5.exports = {
  "aliceblue": [240, 248, 255],
  "antiquewhite": [250, 235, 215],
  "aqua": [0, 255, 255],
  "aquamarine": [127, 255, 212],
  "azure": [240, 255, 255],
  "beige": [245, 245, 220],
  "bisque": [255, 228, 196],
  "black": [0, 0, 0],
  "blanchedalmond": [255, 235, 205],
  "blue": [0, 0, 255],
  "blueviolet": [138, 43, 226],
  "brown": [165, 42, 42],
  "burlywood": [222, 184, 135],
  "cadetblue": [95, 158, 160],
  "chartreuse": [127, 255, 0],
  "chocolate": [210, 105, 30],
  "coral": [255, 127, 80],
  "cornflowerblue": [100, 149, 237],
  "cornsilk": [255, 248, 220],
  "crimson": [220, 20, 60],
  "cyan": [0, 255, 255],
  "darkblue": [0, 0, 139],
  "darkcyan": [0, 139, 139],
  "darkgoldenrod": [184, 134, 11],
  "darkgray": [169, 169, 169],
  "darkgreen": [0, 100, 0],
  "darkgrey": [169, 169, 169],
  "darkkhaki": [189, 183, 107],
  "darkmagenta": [139, 0, 139],
  "darkolivegreen": [85, 107, 47],
  "darkorange": [255, 140, 0],
  "darkorchid": [153, 50, 204],
  "darkred": [139, 0, 0],
  "darksalmon": [233, 150, 122],
  "darkseagreen": [143, 188, 143],
  "darkslateblue": [72, 61, 139],
  "darkslategray": [47, 79, 79],
  "darkslategrey": [47, 79, 79],
  "darkturquoise": [0, 206, 209],
  "darkviolet": [148, 0, 211],
  "deeppink": [255, 20, 147],
  "deepskyblue": [0, 191, 255],
  "dimgray": [105, 105, 105],
  "dimgrey": [105, 105, 105],
  "dodgerblue": [30, 144, 255],
  "firebrick": [178, 34, 34],
  "floralwhite": [255, 250, 240],
  "forestgreen": [34, 139, 34],
  "fuchsia": [255, 0, 255],
  "gainsboro": [220, 220, 220],
  "ghostwhite": [248, 248, 255],
  "gold": [255, 215, 0],
  "goldenrod": [218, 165, 32],
  "gray": [128, 128, 128],
  "green": [0, 128, 0],
  "greenyellow": [173, 255, 47],
  "grey": [128, 128, 128],
  "honeydew": [240, 255, 240],
  "hotpink": [255, 105, 180],
  "indianred": [205, 92, 92],
  "indigo": [75, 0, 130],
  "ivory": [255, 255, 240],
  "khaki": [240, 230, 140],
  "lavender": [230, 230, 250],
  "lavenderblush": [255, 240, 245],
  "lawngreen": [124, 252, 0],
  "lemonchiffon": [255, 250, 205],
  "lightblue": [173, 216, 230],
  "lightcoral": [240, 128, 128],
  "lightcyan": [224, 255, 255],
  "lightgoldenrodyellow": [250, 250, 210],
  "lightgray": [211, 211, 211],
  "lightgreen": [144, 238, 144],
  "lightgrey": [211, 211, 211],
  "lightpink": [255, 182, 193],
  "lightsalmon": [255, 160, 122],
  "lightseagreen": [32, 178, 170],
  "lightskyblue": [135, 206, 250],
  "lightslategray": [119, 136, 153],
  "lightslategrey": [119, 136, 153],
  "lightsteelblue": [176, 196, 222],
  "lightyellow": [255, 255, 224],
  "lime": [0, 255, 0],
  "limegreen": [50, 205, 50],
  "linen": [250, 240, 230],
  "magenta": [255, 0, 255],
  "maroon": [128, 0, 0],
  "mediumaquamarine": [102, 205, 170],
  "mediumblue": [0, 0, 205],
  "mediumorchid": [186, 85, 211],
  "mediumpurple": [147, 112, 219],
  "mediumseagreen": [60, 179, 113],
  "mediumslateblue": [123, 104, 238],
  "mediumspringgreen": [0, 250, 154],
  "mediumturquoise": [72, 209, 204],
  "mediumvioletred": [199, 21, 133],
  "midnightblue": [25, 25, 112],
  "mintcream": [245, 255, 250],
  "mistyrose": [255, 228, 225],
  "moccasin": [255, 228, 181],
  "navajowhite": [255, 222, 173],
  "navy": [0, 0, 128],
  "oldlace": [253, 245, 230],
  "olive": [128, 128, 0],
  "olivedrab": [107, 142, 35],
  "orange": [255, 165, 0],
  "orangered": [255, 69, 0],
  "orchid": [218, 112, 214],
  "palegoldenrod": [238, 232, 170],
  "palegreen": [152, 251, 152],
  "paleturquoise": [175, 238, 238],
  "palevioletred": [219, 112, 147],
  "papayawhip": [255, 239, 213],
  "peachpuff": [255, 218, 185],
  "peru": [205, 133, 63],
  "pink": [255, 192, 203],
  "plum": [221, 160, 221],
  "powderblue": [176, 224, 230],
  "purple": [128, 0, 128],
  "rebeccapurple": [102, 51, 153],
  "red": [255, 0, 0],
  "rosybrown": [188, 143, 143],
  "royalblue": [65, 105, 225],
  "saddlebrown": [139, 69, 19],
  "salmon": [250, 128, 114],
  "sandybrown": [244, 164, 96],
  "seagreen": [46, 139, 87],
  "seashell": [255, 245, 238],
  "sienna": [160, 82, 45],
  "silver": [192, 192, 192],
  "skyblue": [135, 206, 235],
  "slateblue": [106, 90, 205],
  "slategray": [112, 128, 144],
  "slategrey": [112, 128, 144],
  "snow": [255, 250, 250],
  "springgreen": [0, 255, 127],
  "steelblue": [70, 130, 180],
  "tan": [210, 180, 140],
  "teal": [0, 128, 128],
  "thistle": [216, 191, 216],
  "tomato": [255, 99, 71],
  "turquoise": [64, 224, 208],
  "violet": [238, 130, 238],
  "wheat": [245, 222, 179],
  "white": [255, 255, 255],
  "whitesmoke": [245, 245, 245],
  "yellow": [255, 255, 0],
  "yellowgreen": [154, 205, 50]
};
var color_name_default = module5.exports;

// node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/conversions.js
function $$cjs_default$$2(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global3 !== "undefined" && global3 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global3 = globalThis;
var exports6 = {};
var module6 = {
  get exports() {
    return exports6;
  },
  set exports(value) {
    exports6 = value;
  }
};
var cssKeywords = $$cjs_default$$2(typeof color_name_exports !== "undefined" ? color_name_exports : {});
var reverseKeywords = {};
for (key in cssKeywords) {
  if (cssKeywords.hasOwnProperty(key)) {
    reverseKeywords[cssKeywords[key]] = key;
  }
}
var key;
var convert = module6.exports = {
  rgb: { channels: 3, labels: "rgb" },
  hsl: { channels: 3, labels: "hsl" },
  hsv: { channels: 3, labels: "hsv" },
  hwb: { channels: 3, labels: "hwb" },
  cmyk: { channels: 4, labels: "cmyk" },
  xyz: { channels: 3, labels: "xyz" },
  lab: { channels: 3, labels: "lab" },
  lch: { channels: 3, labels: "lch" },
  hex: { channels: 1, labels: ["hex"] },
  keyword: { channels: 1, labels: ["keyword"] },
  ansi16: { channels: 1, labels: ["ansi16"] },
  ansi256: { channels: 1, labels: ["ansi256"] },
  hcg: { channels: 3, labels: ["h", "c", "g"] },
  apple: { channels: 3, labels: ["r16", "g16", "b16"] },
  gray: { channels: 1, labels: ["gray"] }
};
for (model in convert) {
  if (convert.hasOwnProperty(model)) {
    if (!("channels" in convert[model])) {
      throw new Error("missing channels property: " + model);
    }
    if (!("labels" in convert[model])) {
      throw new Error("missing channel labels property: " + model);
    }
    if (convert[model].labels.length !== convert[model].channels) {
      throw new Error("channel and label counts mismatch: " + model);
    }
    channels = convert[model].channels;
    labels = convert[model].labels;
    delete convert[model].channels;
    delete convert[model].labels;
    Object.defineProperty(convert[model], "channels", { value: channels });
    Object.defineProperty(convert[model], "labels", { value: labels });
  }
}
var channels;
var labels;
var model;
convert.rgb.hsl = function(rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var min = Math.min(r, g, b);
  var max = Math.max(r, g, b);
  var delta = max - min;
  var h;
  var s;
  var l;
  if (max === min) {
    h = 0;
  } else if (r === max) {
    h = (g - b) / delta;
  } else if (g === max) {
    h = 2 + (b - r) / delta;
  } else if (b === max) {
    h = 4 + (r - g) / delta;
  }
  h = Math.min(h * 60, 360);
  if (h < 0) {
    h += 360;
  }
  l = (min + max) / 2;
  if (max === min) {
    s = 0;
  } else if (l <= 0.5) {
    s = delta / (max + min);
  } else {
    s = delta / (2 - max - min);
  }
  return [h, s * 100, l * 100];
};
convert.rgb.hsv = function(rgb) {
  var rdif;
  var gdif;
  var bdif;
  var h;
  var s;
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var v = Math.max(r, g, b);
  var diff = v - Math.min(r, g, b);
  var diffc = function(c) {
    return (v - c) / 6 / diff + 1 / 2;
  };
  if (diff === 0) {
    h = s = 0;
  } else {
    s = diff / v;
    rdif = diffc(r);
    gdif = diffc(g);
    bdif = diffc(b);
    if (r === v) {
      h = bdif - gdif;
    } else if (g === v) {
      h = 1 / 3 + rdif - bdif;
    } else if (b === v) {
      h = 2 / 3 + gdif - rdif;
    }
    if (h < 0) {
      h += 1;
    } else if (h > 1) {
      h -= 1;
    }
  }
  return [
    h * 360,
    s * 100,
    v * 100
  ];
};
convert.rgb.hwb = function(rgb) {
  var r = rgb[0];
  var g = rgb[1];
  var b = rgb[2];
  var h = convert.rgb.hsl(rgb)[0];
  var w = 1 / 255 * Math.min(r, Math.min(g, b));
  b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
  return [h, w * 100, b * 100];
};
convert.rgb.cmyk = function(rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var c;
  var m;
  var y;
  var k;
  k = Math.min(1 - r, 1 - g, 1 - b);
  c = (1 - r - k) / (1 - k) || 0;
  m = (1 - g - k) / (1 - k) || 0;
  y = (1 - b - k) / (1 - k) || 0;
  return [c * 100, m * 100, y * 100, k * 100];
};
function comparativeDistance(x, y) {
  return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);
}
convert.rgb.keyword = function(rgb) {
  var reversed = reverseKeywords[rgb];
  if (reversed) {
    return reversed;
  }
  var currentClosestDistance = Infinity;
  var currentClosestKeyword;
  for (var keyword in cssKeywords) {
    if (cssKeywords.hasOwnProperty(keyword)) {
      var value = cssKeywords[keyword];
      var distance = comparativeDistance(rgb, value);
      if (distance < currentClosestDistance) {
        currentClosestDistance = distance;
        currentClosestKeyword = keyword;
      }
    }
  }
  return currentClosestKeyword;
};
convert.keyword.rgb = function(keyword) {
  return cssKeywords[keyword];
};
convert.rgb.xyz = function(rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;
  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
  return [x * 100, y * 100, z * 100];
};
convert.rgb.lab = function(rgb) {
  var xyz = convert.rgb.xyz(rgb);
  var x = xyz[0];
  var y = xyz[1];
  var z = xyz[2];
  var l;
  var a;
  var b;
  x /= 95.047;
  y /= 100;
  z /= 108.883;
  x = x > 8856e-6 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
  y = y > 8856e-6 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
  z = z > 8856e-6 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
  l = 116 * y - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);
  return [l, a, b];
};
convert.hsl.rgb = function(hsl) {
  var h = hsl[0] / 360;
  var s = hsl[1] / 100;
  var l = hsl[2] / 100;
  var t1;
  var t22;
  var t32;
  var rgb;
  var val;
  if (s === 0) {
    val = l * 255;
    return [val, val, val];
  }
  if (l < 0.5) {
    t22 = l * (1 + s);
  } else {
    t22 = l + s - l * s;
  }
  t1 = 2 * l - t22;
  rgb = [0, 0, 0];
  for (var i = 0; i < 3; i++) {
    t32 = h + 1 / 3 * -(i - 1);
    if (t32 < 0) {
      t32++;
    }
    if (t32 > 1) {
      t32--;
    }
    if (6 * t32 < 1) {
      val = t1 + (t22 - t1) * 6 * t32;
    } else if (2 * t32 < 1) {
      val = t22;
    } else if (3 * t32 < 2) {
      val = t1 + (t22 - t1) * (2 / 3 - t32) * 6;
    } else {
      val = t1;
    }
    rgb[i] = val * 255;
  }
  return rgb;
};
convert.hsl.hsv = function(hsl) {
  var h = hsl[0];
  var s = hsl[1] / 100;
  var l = hsl[2] / 100;
  var smin = s;
  var lmin = Math.max(l, 0.01);
  var sv;
  var v;
  l *= 2;
  s *= l <= 1 ? l : 2 - l;
  smin *= lmin <= 1 ? lmin : 2 - lmin;
  v = (l + s) / 2;
  sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
  return [h, sv * 100, v * 100];
};
convert.hsv.rgb = function(hsv) {
  var h = hsv[0] / 60;
  var s = hsv[1] / 100;
  var v = hsv[2] / 100;
  var hi = Math.floor(h) % 6;
  var f = h - Math.floor(h);
  var p = 255 * v * (1 - s);
  var q = 255 * v * (1 - s * f);
  var t4 = 255 * v * (1 - s * (1 - f));
  v *= 255;
  switch (hi) {
    case 0:
      return [v, t4, p];
    case 1:
      return [q, v, p];
    case 2:
      return [p, v, t4];
    case 3:
      return [p, q, v];
    case 4:
      return [t4, p, v];
    case 5:
      return [v, p, q];
  }
};
convert.hsv.hsl = function(hsv) {
  var h = hsv[0];
  var s = hsv[1] / 100;
  var v = hsv[2] / 100;
  var vmin = Math.max(v, 0.01);
  var lmin;
  var sl;
  var l;
  l = (2 - s) * v;
  lmin = (2 - s) * vmin;
  sl = s * vmin;
  sl /= lmin <= 1 ? lmin : 2 - lmin;
  sl = sl || 0;
  l /= 2;
  return [h, sl * 100, l * 100];
};
convert.hwb.rgb = function(hwb) {
  var h = hwb[0] / 360;
  var wh = hwb[1] / 100;
  var bl = hwb[2] / 100;
  var ratio = wh + bl;
  var i;
  var v;
  var f;
  var n;
  if (ratio > 1) {
    wh /= ratio;
    bl /= ratio;
  }
  i = Math.floor(6 * h);
  v = 1 - bl;
  f = 6 * h - i;
  if ((i & 1) !== 0) {
    f = 1 - f;
  }
  n = wh + f * (v - wh);
  var r;
  var g;
  var b;
  switch (i) {
    default:
    case 6:
    case 0:
      r = v;
      g = n;
      b = wh;
      break;
    case 1:
      r = n;
      g = v;
      b = wh;
      break;
    case 2:
      r = wh;
      g = v;
      b = n;
      break;
    case 3:
      r = wh;
      g = n;
      b = v;
      break;
    case 4:
      r = n;
      g = wh;
      b = v;
      break;
    case 5:
      r = v;
      g = wh;
      b = n;
      break;
  }
  return [r * 255, g * 255, b * 255];
};
convert.cmyk.rgb = function(cmyk) {
  var c = cmyk[0] / 100;
  var m = cmyk[1] / 100;
  var y = cmyk[2] / 100;
  var k = cmyk[3] / 100;
  var r;
  var g;
  var b;
  r = 1 - Math.min(1, c * (1 - k) + k);
  g = 1 - Math.min(1, m * (1 - k) + k);
  b = 1 - Math.min(1, y * (1 - k) + k);
  return [r * 255, g * 255, b * 255];
};
convert.xyz.rgb = function(xyz) {
  var x = xyz[0] / 100;
  var y = xyz[1] / 100;
  var z = xyz[2] / 100;
  var r;
  var g;
  var b;
  r = x * 3.2406 + y * -1.5372 + z * -0.4986;
  g = x * -0.9689 + y * 1.8758 + z * 0.0415;
  b = x * 0.0557 + y * -0.204 + z * 1.057;
  r = r > 31308e-7 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92;
  g = g > 31308e-7 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92;
  b = b > 31308e-7 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92;
  r = Math.min(Math.max(0, r), 1);
  g = Math.min(Math.max(0, g), 1);
  b = Math.min(Math.max(0, b), 1);
  return [r * 255, g * 255, b * 255];
};
convert.xyz.lab = function(xyz) {
  var x = xyz[0];
  var y = xyz[1];
  var z = xyz[2];
  var l;
  var a;
  var b;
  x /= 95.047;
  y /= 100;
  z /= 108.883;
  x = x > 8856e-6 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
  y = y > 8856e-6 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
  z = z > 8856e-6 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
  l = 116 * y - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);
  return [l, a, b];
};
convert.lab.xyz = function(lab) {
  var l = lab[0];
  var a = lab[1];
  var b = lab[2];
  var x;
  var y;
  var z;
  y = (l + 16) / 116;
  x = a / 500 + y;
  z = y - b / 200;
  var y2 = Math.pow(y, 3);
  var x2 = Math.pow(x, 3);
  var z2 = Math.pow(z, 3);
  y = y2 > 8856e-6 ? y2 : (y - 16 / 116) / 7.787;
  x = x2 > 8856e-6 ? x2 : (x - 16 / 116) / 7.787;
  z = z2 > 8856e-6 ? z2 : (z - 16 / 116) / 7.787;
  x *= 95.047;
  y *= 100;
  z *= 108.883;
  return [x, y, z];
};
convert.lab.lch = function(lab) {
  var l = lab[0];
  var a = lab[1];
  var b = lab[2];
  var hr;
  var h;
  var c;
  hr = Math.atan2(b, a);
  h = hr * 360 / 2 / Math.PI;
  if (h < 0) {
    h += 360;
  }
  c = Math.sqrt(a * a + b * b);
  return [l, c, h];
};
convert.lch.lab = function(lch) {
  var l = lch[0];
  var c = lch[1];
  var h = lch[2];
  var a;
  var b;
  var hr;
  hr = h / 360 * 2 * Math.PI;
  a = c * Math.cos(hr);
  b = c * Math.sin(hr);
  return [l, a, b];
};
convert.rgb.ansi16 = function(args) {
  var r = args[0];
  var g = args[1];
  var b = args[2];
  var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2];
  value = Math.round(value / 50);
  if (value === 0) {
    return 30;
  }
  var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
  if (value === 2) {
    ansi += 60;
  }
  return ansi;
};
convert.hsv.ansi16 = function(args) {
  return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};
convert.rgb.ansi256 = function(args) {
  var r = args[0];
  var g = args[1];
  var b = args[2];
  if (r === g && g === b) {
    if (r < 8) {
      return 16;
    }
    if (r > 248) {
      return 231;
    }
    return Math.round((r - 8) / 247 * 24) + 232;
  }
  var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
  return ansi;
};
convert.ansi16.rgb = function(args) {
  var color = args % 10;
  if (color === 0 || color === 7) {
    if (args > 50) {
      color += 3.5;
    }
    color = color / 10.5 * 255;
    return [color, color, color];
  }
  var mult = (~~(args > 50) + 1) * 0.5;
  var r = (color & 1) * mult * 255;
  var g = (color >> 1 & 1) * mult * 255;
  var b = (color >> 2 & 1) * mult * 255;
  return [r, g, b];
};
convert.ansi256.rgb = function(args) {
  if (args >= 232) {
    var c = (args - 232) * 10 + 8;
    return [c, c, c];
  }
  args -= 16;
  var rem;
  var r = Math.floor(args / 36) / 5 * 255;
  var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
  var b = rem % 6 / 5 * 255;
  return [r, g, b];
};
convert.rgb.hex = function(args) {
  var integer = ((Math.round(args[0]) & 255) << 16) + ((Math.round(args[1]) & 255) << 8) + (Math.round(args[2]) & 255);
  var string = integer.toString(16).toUpperCase();
  return "000000".substring(string.length) + string;
};
convert.hex.rgb = function(args) {
  var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
  if (!match) {
    return [0, 0, 0];
  }
  var colorString = match[0];
  if (match[0].length === 3) {
    colorString = colorString.split("").map(function(char) {
      return char + char;
    }).join("");
  }
  var integer = parseInt(colorString, 16);
  var r = integer >> 16 & 255;
  var g = integer >> 8 & 255;
  var b = integer & 255;
  return [r, g, b];
};
convert.rgb.hcg = function(rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var max = Math.max(Math.max(r, g), b);
  var min = Math.min(Math.min(r, g), b);
  var chroma = max - min;
  var grayscale;
  var hue;
  if (chroma < 1) {
    grayscale = min / (1 - chroma);
  } else {
    grayscale = 0;
  }
  if (chroma <= 0) {
    hue = 0;
  } else if (max === r) {
    hue = (g - b) / chroma % 6;
  } else if (max === g) {
    hue = 2 + (b - r) / chroma;
  } else {
    hue = 4 + (r - g) / chroma + 4;
  }
  hue /= 6;
  hue %= 1;
  return [hue * 360, chroma * 100, grayscale * 100];
};
convert.hsl.hcg = function(hsl) {
  var s = hsl[1] / 100;
  var l = hsl[2] / 100;
  var c = 1;
  var f = 0;
  if (l < 0.5) {
    c = 2 * s * l;
  } else {
    c = 2 * s * (1 - l);
  }
  if (c < 1) {
    f = (l - 0.5 * c) / (1 - c);
  }
  return [hsl[0], c * 100, f * 100];
};
convert.hsv.hcg = function(hsv) {
  var s = hsv[1] / 100;
  var v = hsv[2] / 100;
  var c = s * v;
  var f = 0;
  if (c < 1) {
    f = (v - c) / (1 - c);
  }
  return [hsv[0], c * 100, f * 100];
};
convert.hcg.rgb = function(hcg) {
  var h = hcg[0] / 360;
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;
  if (c === 0) {
    return [g * 255, g * 255, g * 255];
  }
  var pure = [0, 0, 0];
  var hi = h % 1 * 6;
  var v = hi % 1;
  var w = 1 - v;
  var mg = 0;
  switch (Math.floor(hi)) {
    case 0:
      pure[0] = 1;
      pure[1] = v;
      pure[2] = 0;
      break;
    case 1:
      pure[0] = w;
      pure[1] = 1;
      pure[2] = 0;
      break;
    case 2:
      pure[0] = 0;
      pure[1] = 1;
      pure[2] = v;
      break;
    case 3:
      pure[0] = 0;
      pure[1] = w;
      pure[2] = 1;
      break;
    case 4:
      pure[0] = v;
      pure[1] = 0;
      pure[2] = 1;
      break;
    default:
      pure[0] = 1;
      pure[1] = 0;
      pure[2] = w;
  }
  mg = (1 - c) * g;
  return [
    (c * pure[0] + mg) * 255,
    (c * pure[1] + mg) * 255,
    (c * pure[2] + mg) * 255
  ];
};
convert.hcg.hsv = function(hcg) {
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;
  var v = c + g * (1 - c);
  var f = 0;
  if (v > 0) {
    f = c / v;
  }
  return [hcg[0], f * 100, v * 100];
};
convert.hcg.hsl = function(hcg) {
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;
  var l = g * (1 - c) + 0.5 * c;
  var s = 0;
  if (l > 0 && l < 0.5) {
    s = c / (2 * l);
  } else if (l >= 0.5 && l < 1) {
    s = c / (2 * (1 - l));
  }
  return [hcg[0], s * 100, l * 100];
};
convert.hcg.hwb = function(hcg) {
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;
  var v = c + g * (1 - c);
  return [hcg[0], (v - c) * 100, (1 - v) * 100];
};
convert.hwb.hcg = function(hwb) {
  var w = hwb[1] / 100;
  var b = hwb[2] / 100;
  var v = 1 - b;
  var c = v - w;
  var g = 0;
  if (c < 1) {
    g = (v - c) / (1 - c);
  }
  return [hwb[0], c * 100, g * 100];
};
convert.apple.rgb = function(apple) {
  return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
};
convert.rgb.apple = function(rgb) {
  return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
};
convert.gray.rgb = function(args) {
  return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};
convert.gray.hsl = convert.gray.hsv = function(args) {
  return [0, 0, args[0]];
};
convert.gray.hwb = function(gray) {
  return [0, 100, gray[0]];
};
convert.gray.cmyk = function(gray) {
  return [0, 0, 0, gray[0]];
};
convert.gray.lab = function(gray) {
  return [gray[0], 0, 0];
};
convert.gray.hex = function(gray) {
  var val = Math.round(gray[0] / 100 * 255) & 255;
  var integer = (val << 16) + (val << 8) + val;
  var string = integer.toString(16).toUpperCase();
  return "000000".substring(string.length) + string;
};
convert.rgb.gray = function(rgb) {
  var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
  return [val / 255 * 100];
};
var conversions_default = module6.exports;

// node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/route.js
function $$cjs_default$$3(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global4 !== "undefined" && global4 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global4 = globalThis;
var exports7 = {};
var module7 = {
  get exports() {
    return exports7;
  },
  set exports(value) {
    exports7 = value;
  }
};
var conversions = $$cjs_default$$3(typeof conversions_exports !== "undefined" ? conversions_exports : {});
function buildGraph() {
  var graph = {};
  var models2 = Object.keys(conversions);
  for (var len = models2.length, i = 0; i < len; i++) {
    graph[models2[i]] = {
      distance: -1,
      parent: null
    };
  }
  return graph;
}
function deriveBFS(fromModel) {
  var graph = buildGraph();
  var queue = [fromModel];
  graph[fromModel].distance = 0;
  while (queue.length) {
    var current = queue.pop();
    var adjacents = Object.keys(conversions[current]);
    for (var len = adjacents.length, i = 0; i < len; i++) {
      var adjacent = adjacents[i];
      var node = graph[adjacent];
      if (node.distance === -1) {
        node.distance = graph[current].distance + 1;
        node.parent = current;
        queue.unshift(adjacent);
      }
    }
  }
  return graph;
}
function link(from, to) {
  return function(args) {
    return to(from(args));
  };
}
function wrapConversion(toModel, graph) {
  var path7 = [graph[toModel].parent, toModel];
  var fn = conversions[graph[toModel].parent][toModel];
  var cur = graph[toModel].parent;
  while (graph[cur].parent) {
    path7.unshift(graph[cur].parent);
    fn = link(conversions[graph[cur].parent][cur], fn);
    cur = graph[cur].parent;
  }
  fn.conversion = path7;
  return fn;
}
module7.exports = function(fromModel) {
  var graph = deriveBFS(fromModel);
  var conversion = {};
  var models2 = Object.keys(graph);
  for (var len = models2.length, i = 0; i < len; i++) {
    var toModel = models2[i];
    var node = graph[toModel];
    if (node.parent === null) {
      continue;
    }
    conversion[toModel] = wrapConversion(toModel, graph);
  }
  return conversion;
};
var route_default = module7.exports;

// node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/index.js
function $$cjs_default$$4(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global5 !== "undefined" && global5 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global5 = globalThis;
var exports8 = {};
var module8 = {
  get exports() {
    return exports8;
  },
  set exports(value) {
    exports8 = value;
  }
};
var conversions2 = $$cjs_default$$4(typeof conversions_exports !== "undefined" ? conversions_exports : {});
var route = $$cjs_default$$4(typeof route_exports !== "undefined" ? route_exports : {});
var convert2 = {};
var models = Object.keys(conversions2);
function wrapRaw(fn) {
  var wrappedFn = function(args) {
    if (args === void 0 || args === null) {
      return args;
    }
    if (arguments.length > 1) {
      args = Array.prototype.slice.call(arguments);
    }
    return fn(args);
  };
  if ("conversion" in fn) {
    wrappedFn.conversion = fn.conversion;
  }
  return wrappedFn;
}
function wrapRounded(fn) {
  var wrappedFn = function(args) {
    if (args === void 0 || args === null) {
      return args;
    }
    if (arguments.length > 1) {
      args = Array.prototype.slice.call(arguments);
    }
    var result = fn(args);
    if (typeof result === "object") {
      for (var len = result.length, i = 0; i < len; i++) {
        result[i] = Math.round(result[i]);
      }
    }
    return result;
  };
  if ("conversion" in fn) {
    wrappedFn.conversion = fn.conversion;
  }
  return wrappedFn;
}
models.forEach(function(fromModel) {
  convert2[fromModel] = {};
  Object.defineProperty(convert2[fromModel], "channels", { value: conversions2[fromModel].channels });
  Object.defineProperty(convert2[fromModel], "labels", { value: conversions2[fromModel].labels });
  var routes = route(fromModel);
  var routeModels = Object.keys(routes);
  routeModels.forEach(function(toModel) {
    var fn = routes[toModel];
    convert2[fromModel][toModel] = wrapRounded(fn);
    convert2[fromModel][toModel].raw = wrapRaw(fn);
  });
});
module8.exports = convert2;
var color_convert_default = module8.exports;

// node_modules/.pnpm/ansi-styles@3.2.1/node_modules/ansi-styles/index.js
function $$cjs_default$$5(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global6 !== "undefined" && global6 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global6 = globalThis;
var exports9 = {};
var module9 = {
  get exports() {
    return exports9;
  },
  set exports(value) {
    exports9 = value;
  }
};
var colorConvert = $$cjs_default$$5(typeof color_convert_exports !== "undefined" ? color_convert_exports : {});
var wrapAnsi16 = (fn, offset) => function() {
  const code = fn.apply(colorConvert, arguments);
  return `\x1B[${code + offset}m`;
};
var wrapAnsi256 = (fn, offset) => function() {
  const code = fn.apply(colorConvert, arguments);
  return `\x1B[${38 + offset};5;${code}m`;
};
var wrapAnsi16m = (fn, offset) => function() {
  const rgb = fn.apply(colorConvert, arguments);
  return `\x1B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
};
function assembleStyles() {
  const codes = /* @__PURE__ */ new Map();
  const styles2 = {
    modifier: {
      reset: [0, 0],
      bold: [1, 22],
      dim: [2, 22],
      italic: [3, 23],
      underline: [4, 24],
      inverse: [7, 27],
      hidden: [8, 28],
      strikethrough: [9, 29]
    },
    color: {
      black: [30, 39],
      red: [31, 39],
      green: [32, 39],
      yellow: [33, 39],
      blue: [34, 39],
      magenta: [35, 39],
      cyan: [36, 39],
      white: [37, 39],
      gray: [90, 39],
      redBright: [91, 39],
      greenBright: [92, 39],
      yellowBright: [93, 39],
      blueBright: [94, 39],
      magentaBright: [95, 39],
      cyanBright: [96, 39],
      whiteBright: [97, 39]
    },
    bgColor: {
      bgBlack: [40, 49],
      bgRed: [41, 49],
      bgGreen: [42, 49],
      bgYellow: [43, 49],
      bgBlue: [44, 49],
      bgMagenta: [45, 49],
      bgCyan: [46, 49],
      bgWhite: [47, 49],
      bgBlackBright: [100, 49],
      bgRedBright: [101, 49],
      bgGreenBright: [102, 49],
      bgYellowBright: [103, 49],
      bgBlueBright: [104, 49],
      bgMagentaBright: [105, 49],
      bgCyanBright: [106, 49],
      bgWhiteBright: [107, 49]
    }
  };
  styles2.color.grey = styles2.color.gray;
  for (const groupName of Object.keys(styles2)) {
    const group = styles2[groupName];
    for (const styleName of Object.keys(group)) {
      const style = group[styleName];
      styles2[styleName] = {
        open: `\x1B[${style[0]}m`,
        close: `\x1B[${style[1]}m`
      };
      group[styleName] = styles2[styleName];
      codes.set(style[0], style[1]);
    }
    Object.defineProperty(styles2, groupName, {
      value: group,
      enumerable: false
    });
    Object.defineProperty(styles2, "codes", {
      value: codes,
      enumerable: false
    });
  }
  const ansi2ansi = (n) => n;
  const rgb2rgb = (r, g, b) => [r, g, b];
  styles2.color.close = "\x1B[39m";
  styles2.bgColor.close = "\x1B[49m";
  styles2.color.ansi = {
    ansi: wrapAnsi16(ansi2ansi, 0)
  };
  styles2.color.ansi256 = {
    ansi256: wrapAnsi256(ansi2ansi, 0)
  };
  styles2.color.ansi16m = {
    rgb: wrapAnsi16m(rgb2rgb, 0)
  };
  styles2.bgColor.ansi = {
    ansi: wrapAnsi16(ansi2ansi, 10)
  };
  styles2.bgColor.ansi256 = {
    ansi256: wrapAnsi256(ansi2ansi, 10)
  };
  styles2.bgColor.ansi16m = {
    rgb: wrapAnsi16m(rgb2rgb, 10)
  };
  for (let key of Object.keys(colorConvert)) {
    if (typeof colorConvert[key] !== "object") {
      continue;
    }
    const suite = colorConvert[key];
    if (key === "ansi16") {
      key = "ansi";
    }
    if ("ansi16" in suite) {
      styles2.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);
      styles2.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);
    }
    if ("ansi256" in suite) {
      styles2.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);
      styles2.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);
    }
    if ("rgb" in suite) {
      styles2.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);
      styles2.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);
    }
  }
  return styles2;
}
Object.defineProperty(module9, "exports", {
  enumerable: true,
  get: assembleStyles
});
var ansi_styles_default = module9.exports;

// node_modules/.pnpm/escape-string-regexp@1.0.5/node_modules/escape-string-regexp/index.js
var escape_string_regexp_exports = {};
__export(escape_string_regexp_exports, {
  default: () => escape_string_regexp_default
});
init_esm_shims();
var exports10 = {};
var module10 = {
  get exports() {
    return exports10;
  },
  set exports(value) {
    exports10 = value;
  }
};
var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;
module10.exports = function(str) {
  if (typeof str !== "string") {
    throw new TypeError("Expected a string");
  }
  return str.replace(matchOperatorsRe, "\\$&");
};
var escape_string_regexp_default = module10.exports;

// node_modules/.pnpm/chalk@2.4.2/node_modules/chalk/index.js
function $$cjs_default$$6(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global7 !== "undefined" && global7 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global7 = globalThis;
var exports11 = {};
var module11 = {
  get exports() {
    return exports11;
  },
  set exports(value) {
    exports11 = value;
  }
};
var escapeStringRegexp = $$cjs_default$$6(typeof escape_string_regexp_exports !== "undefined" ? escape_string_regexp_exports : {});
var ansiStyles = $$cjs_default$$6(typeof ansi_styles_exports !== "undefined" ? ansi_styles_exports : {});
var stdoutColor = $$cjs_default$$6(typeof supports_color_exports !== "undefined" ? supports_color_exports : {}).stdout;
var template2 = $$cjs_default$$6(typeof templates_exports !== "undefined" ? templates_exports : {});
var isSimpleWindowsTerm = process.platform === "win32" && !(process.env.TERM || "").toLowerCase().startsWith("xterm");
var levelMapping = ["ansi", "ansi", "ansi256", "ansi16m"];
var skipModels = /* @__PURE__ */ new Set(["gray"]);
var styles = /* @__PURE__ */ Object.create(null);
function applyOptions(obj, options) {
  options = options || {};
  const scLevel = stdoutColor ? stdoutColor.level : 0;
  obj.level = options.level === void 0 ? scLevel : options.level;
  obj.enabled = "enabled" in options ? options.enabled : obj.level > 0;
}
function Chalk(options) {
  if (!this || !(this instanceof Chalk) || this.template) {
    const chalk = {};
    applyOptions(chalk, options);
    chalk.template = function() {
      const args = [].slice.call(arguments);
      return chalkTag.apply(null, [chalk.template].concat(args));
    };
    Object.setPrototypeOf(chalk, Chalk.prototype);
    Object.setPrototypeOf(chalk.template, chalk);
    chalk.template.constructor = Chalk;
    return chalk.template;
  }
  applyOptions(this, options);
}
if (isSimpleWindowsTerm) {
  ansiStyles.blue.open = "\x1B[94m";
}
for (const key of Object.keys(ansiStyles)) {
  ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), "g");
  styles[key] = {
    get() {
      const codes = ansiStyles[key];
      return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);
    }
  };
}
styles.visible = {
  get() {
    return build.call(this, this._styles || [], true, "visible");
  }
};
ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), "g");
for (const model of Object.keys(ansiStyles.color.ansi)) {
  if (skipModels.has(model)) {
    continue;
  }
  styles[model] = {
    get() {
      const level = this.level;
      return function() {
        const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);
        const codes = {
          open,
          close: ansiStyles.color.close,
          closeRe: ansiStyles.color.closeRe
        };
        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
      };
    }
  };
}
ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), "g");
for (const model of Object.keys(ansiStyles.bgColor.ansi)) {
  if (skipModels.has(model)) {
    continue;
  }
  const bgModel = "bg" + model[0].toUpperCase() + model.slice(1);
  styles[bgModel] = {
    get() {
      const level = this.level;
      return function() {
        const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);
        const codes = {
          open,
          close: ansiStyles.bgColor.close,
          closeRe: ansiStyles.bgColor.closeRe
        };
        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
      };
    }
  };
}
var proto = Object.defineProperties(() => {
}, styles);
function build(_styles, _empty, key) {
  const builder = function() {
    return applyStyle.apply(builder, arguments);
  };
  builder._styles = _styles;
  builder._empty = _empty;
  const self2 = this;
  Object.defineProperty(builder, "level", {
    enumerable: true,
    get() {
      return self2.level;
    },
    set(level) {
      self2.level = level;
    }
  });
  Object.defineProperty(builder, "enabled", {
    enumerable: true,
    get() {
      return self2.enabled;
    },
    set(enabled) {
      self2.enabled = enabled;
    }
  });
  builder.hasGrey = this.hasGrey || key === "gray" || key === "grey";
  builder.__proto__ = proto;
  return builder;
}
function applyStyle() {
  const args = arguments;
  const argsLen = args.length;
  let str = String(arguments[0]);
  if (argsLen === 0) {
    return "";
  }
  if (argsLen > 1) {
    for (let a = 1; a < argsLen; a++) {
      str += " " + args[a];
    }
  }
  if (!this.enabled || this.level <= 0 || !str) {
    return this._empty ? "" : str;
  }
  const originalDim = ansiStyles.dim.open;
  if (isSimpleWindowsTerm && this.hasGrey) {
    ansiStyles.dim.open = "";
  }
  for (const code of this._styles.slice().reverse()) {
    str = code.open + str.replace(code.closeRe, code.open) + code.close;
    str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`);
  }
  ansiStyles.dim.open = originalDim;
  return str;
}
function chalkTag(chalk, strings) {
  if (!Array.isArray(strings)) {
    return [].slice.call(arguments, 1).join(" ");
  }
  const args = [].slice.call(arguments, 2);
  const parts = [strings.raw[0]];
  for (let i = 1; i < strings.length; i++) {
    parts.push(String(args[i - 1]).replace(/[{}\\]/g, "\\$&"));
    parts.push(String(strings.raw[i]));
  }
  return template2(chalk, parts.join(""));
}
Object.defineProperties(Chalk.prototype, styles);
module11.exports = Chalk();
module11.exports.supportsColor = stdoutColor;
module11.exports.default = module11.exports;
var __export02;
if (Object.isExtensible(module11.exports)) {
  __export02 = module11.exports["supportsColor"];
}
var chalk_default = module11.exports;

// node_modules/.pnpm/@babel+helper-validator-identifier@7.16.7/node_modules/@babel/helper-validator-identifier/lib/index.js
var lib_exports = {};
__export(lib_exports, {
  isIdentifierChar: () => __export05,
  isIdentifierName: () => __export14,
  isIdentifierStart: () => __export23,
  isKeyword: () => __export32,
  isReservedWord: () => __export42,
  isStrictBindOnlyReservedWord: () => __export5,
  isStrictBindReservedWord: () => __export6,
  isStrictReservedWord: () => __export7
});
init_esm_shims();

// node_modules/.pnpm/@babel+helper-validator-identifier@7.16.7/node_modules/@babel/helper-validator-identifier/lib/keyword.js
var keyword_exports = {};
__export(keyword_exports, {
  isKeyword: () => __export03,
  isReservedWord: () => __export12,
  isStrictBindOnlyReservedWord: () => __export2,
  isStrictBindReservedWord: () => __export3,
  isStrictReservedWord: () => __export4
});
init_esm_shims();
var exports12 = {};
var module12 = {
  get exports() {
    return exports12;
  },
  set exports(value) {
    exports12 = value;
  }
};
Object.defineProperty(exports12, "__esModule", {
  value: true
});
exports12.isKeyword = isKeyword;
exports12.isReservedWord = isReservedWord;
exports12.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;
exports12.isStrictBindReservedWord = isStrictBindReservedWord;
exports12.isStrictReservedWord = isStrictReservedWord;
var reservedWords = {
  keyword: ["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"],
  strict: ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],
  strictBind: ["eval", "arguments"]
};
var keywords = new Set(reservedWords.keyword);
var reservedWordsStrictSet = new Set(reservedWords.strict);
var reservedWordsStrictBindSet = new Set(reservedWords.strictBind);
function isReservedWord(word, inModule) {
  return inModule && word === "await" || word === "enum";
}
function isStrictReservedWord(word, inModule) {
  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);
}
function isStrictBindOnlyReservedWord(word) {
  return reservedWordsStrictBindSet.has(word);
}
function isStrictBindReservedWord(word, inModule) {
  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);
}
function isKeyword(word) {
  return keywords.has(word);
}
var __export03;
var __export12;
var __export2;
var __export3;
var __export4;
if (Object.isExtensible(module12.exports)) {
  __export03 = module12.exports["isKeyword"];
  __export12 = module12.exports["isReservedWord"];
  __export2 = module12.exports["isStrictBindOnlyReservedWord"];
  __export3 = module12.exports["isStrictBindReservedWord"];
  __export4 = module12.exports["isStrictReservedWord"];
}

// node_modules/.pnpm/@babel+helper-validator-identifier@7.16.7/node_modules/@babel/helper-validator-identifier/lib/identifier.js
var identifier_exports = {};
__export(identifier_exports, {
  isIdentifierChar: () => __export04,
  isIdentifierName: () => __export13,
  isIdentifierStart: () => __export22
});
init_esm_shims();
var exports13 = {};
var module13 = {
  get exports() {
    return exports13;
  },
  set exports(value) {
    exports13 = value;
  }
};
Object.defineProperty(exports13, "__esModule", {
  value: true
});
exports13.isIdentifierChar = isIdentifierChar;
exports13.isIdentifierName = isIdentifierName;
exports13.isIdentifierStart = isIdentifierStart;
var nonASCIIidentifierStartChars = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC";
var nonASCIIidentifierChars = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0898-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F";
var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];
var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];
function isInAstralSet(code, set) {
  let pos = 65536;
  for (let i = 0, length = set.length; i < length; i += 2) {
    pos += set[i];
    if (pos > code)
      return false;
    pos += set[i + 1];
    if (pos >= code)
      return true;
  }
  return false;
}
function isIdentifierStart(code) {
  if (code < 65)
    return code === 36;
  if (code <= 90)
    return true;
  if (code < 97)
    return code === 95;
  if (code <= 122)
    return true;
  if (code <= 65535) {
    return code >= 170 && nonASCIIidentifierStart.test(String.fromCharCode(code));
  }
  return isInAstralSet(code, astralIdentifierStartCodes);
}
function isIdentifierChar(code) {
  if (code < 48)
    return code === 36;
  if (code < 58)
    return true;
  if (code < 65)
    return false;
  if (code <= 90)
    return true;
  if (code < 97)
    return code === 95;
  if (code <= 122)
    return true;
  if (code <= 65535) {
    return code >= 170 && nonASCIIidentifier.test(String.fromCharCode(code));
  }
  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
}
function isIdentifierName(name) {
  let isFirst = true;
  for (let i = 0; i < name.length; i++) {
    let cp = name.charCodeAt(i);
    if ((cp & 64512) === 55296 && i + 1 < name.length) {
      const trail = name.charCodeAt(++i);
      if ((trail & 64512) === 56320) {
        cp = 65536 + ((cp & 1023) << 10) + (trail & 1023);
      }
    }
    if (isFirst) {
      isFirst = false;
      if (!isIdentifierStart(cp)) {
        return false;
      }
    } else if (!isIdentifierChar(cp)) {
      return false;
    }
  }
  return !isFirst;
}
var __export04;
var __export13;
var __export22;
if (Object.isExtensible(module13.exports)) {
  __export04 = module13.exports["isIdentifierChar"];
  __export13 = module13.exports["isIdentifierName"];
  __export22 = module13.exports["isIdentifierStart"];
}

// node_modules/.pnpm/@babel+helper-validator-identifier@7.16.7/node_modules/@babel/helper-validator-identifier/lib/index.js
function $$cjs_default$$7(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global8 !== "undefined" && global8 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global8 = globalThis;
var exports14 = {};
var module14 = {
  get exports() {
    return exports14;
  },
  set exports(value) {
    exports14 = value;
  }
};
Object.defineProperty(exports14, "__esModule", {
  value: true
});
Object.defineProperty(exports14, "isIdentifierChar", {
  enumerable: true,
  get: function() {
    return _identifier.isIdentifierChar;
  }
});
Object.defineProperty(exports14, "isIdentifierName", {
  enumerable: true,
  get: function() {
    return _identifier.isIdentifierName;
  }
});
Object.defineProperty(exports14, "isIdentifierStart", {
  enumerable: true,
  get: function() {
    return _identifier.isIdentifierStart;
  }
});
Object.defineProperty(exports14, "isKeyword", {
  enumerable: true,
  get: function() {
    return _keyword.isKeyword;
  }
});
Object.defineProperty(exports14, "isReservedWord", {
  enumerable: true,
  get: function() {
    return _keyword.isReservedWord;
  }
});
Object.defineProperty(exports14, "isStrictBindOnlyReservedWord", {
  enumerable: true,
  get: function() {
    return _keyword.isStrictBindOnlyReservedWord;
  }
});
Object.defineProperty(exports14, "isStrictBindReservedWord", {
  enumerable: true,
  get: function() {
    return _keyword.isStrictBindReservedWord;
  }
});
Object.defineProperty(exports14, "isStrictReservedWord", {
  enumerable: true,
  get: function() {
    return _keyword.isStrictReservedWord;
  }
});
var _identifier = $$cjs_default$$7(typeof identifier_exports !== "undefined" ? identifier_exports : {});
var _keyword = $$cjs_default$$7(typeof keyword_exports !== "undefined" ? keyword_exports : {});
var __export05;
var __export14;
var __export23;
var __export32;
var __export42;
var __export5;
var __export6;
var __export7;
if (Object.isExtensible(module14.exports)) {
  __export05 = module14.exports["isIdentifierChar"];
  __export14 = module14.exports["isIdentifierName"];
  __export23 = module14.exports["isIdentifierStart"];
  __export32 = module14.exports["isKeyword"];
  __export42 = module14.exports["isReservedWord"];
  __export5 = module14.exports["isStrictBindOnlyReservedWord"];
  __export6 = module14.exports["isStrictBindReservedWord"];
  __export7 = module14.exports["isStrictReservedWord"];
}

// node_modules/.pnpm/js-tokens@4.0.0/node_modules/js-tokens/index.js
var js_tokens_exports = {};
__export(js_tokens_exports, {
  default: () => js_tokens_default,
  matchToToken: () => __export06
});
init_esm_shims();
var exports15 = {};
var module15 = {
  get exports() {
    return exports15;
  },
  set exports(value) {
    exports15 = value;
  }
};
Object.defineProperty(exports15, "__esModule", {
  value: true
});
exports15.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g;
exports15.matchToToken = function(match) {
  var token = { type: "invalid", value: match[0], closed: void 0 };
  if (match[1])
    token.type = "string", token.closed = !!(match[3] || match[4]);
  else if (match[5])
    token.type = "comment";
  else if (match[6])
    token.type = "comment", token.closed = !!match[7];
  else if (match[8])
    token.type = "regex";
  else if (match[9])
    token.type = "number";
  else if (match[10])
    token.type = "name";
  else if (match[11])
    token.type = "punctuator";
  else if (match[12])
    token.type = "whitespace";
  return token;
};
var __export06;
if (Object.isExtensible(module15.exports)) {
  __export06 = module15.exports["matchToToken"];
}
var js_tokens_default = module15.exports != null && typeof module15.exports === "object" && "default" in module15.exports ? module15.exports.default : module15.exports;

// node_modules/.pnpm/@babel+highlight@7.16.7/node_modules/@babel/highlight/lib/index.js
function $$cjs_default$$8(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global9 !== "undefined" && global9 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global9 = globalThis;
var exports16 = {};
var module16 = {
  get exports() {
    return exports16;
  },
  set exports(value) {
    exports16 = value;
  }
};
Object.defineProperty(exports16, "__esModule", {
  value: true
});
exports16.default = highlight;
exports16.getChalk = getChalk;
exports16.shouldHighlight = shouldHighlight;
var _jsTokens = $$cjs_default$$8(typeof js_tokens_exports !== "undefined" ? js_tokens_exports : {});
var _helperValidatorIdentifier = $$cjs_default$$8(typeof lib_exports !== "undefined" ? lib_exports : {});
var _chalk = $$cjs_default$$8(typeof chalk_exports !== "undefined" ? chalk_exports : {});
var sometimesKeywords = /* @__PURE__ */ new Set(["as", "async", "from", "get", "of", "set"]);
function getDefs(chalk) {
  return {
    keyword: chalk.cyan,
    capitalized: chalk.yellow,
    jsxIdentifier: chalk.yellow,
    punctuator: chalk.yellow,
    number: chalk.magenta,
    string: chalk.green,
    regex: chalk.magenta,
    comment: chalk.grey,
    invalid: chalk.white.bgRed.bold
  };
}
var NEWLINE = /\r\n|[\n\r\u2028\u2029]/;
var BRACKET = /^[()[\]{}]$/;
var tokenize;
{
  const JSX_TAG = /^[a-z][\w-]*$/i;
  const getTokenType = function(token, offset, text) {
    if (token.type === "name") {
      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {
        return "keyword";
      }
      if (JSX_TAG.test(token.value) && (text[offset - 1] === "<" || text.substr(offset - 2, 2) == "</")) {
        return "jsxIdentifier";
      }
      if (token.value[0] !== token.value[0].toLowerCase()) {
        return "capitalized";
      }
    }
    if (token.type === "punctuator" && BRACKET.test(token.value)) {
      return "bracket";
    }
    if (token.type === "invalid" && (token.value === "@" || token.value === "#")) {
      return "punctuator";
    }
    return token.type;
  };
  tokenize = function* (text) {
    let match;
    while (match = _jsTokens.default.exec(text)) {
      const token = _jsTokens.matchToToken(match);
      yield {
        type: getTokenType(token, match.index, text),
        value: token.value
      };
    }
  };
}
function highlightTokens(defs, text) {
  let highlighted = "";
  for (const {
    type,
    value
  } of tokenize(text)) {
    const colorize = defs[type];
    if (colorize) {
      highlighted += value.split(NEWLINE).map((str) => colorize(str)).join("\n");
    } else {
      highlighted += value;
    }
  }
  return highlighted;
}
function shouldHighlight(options) {
  return !!_chalk.supportsColor || options.forceColor;
}
function getChalk(options) {
  return options.forceColor ? new _chalk.constructor({
    enabled: true,
    level: 1
  }) : _chalk;
}
function highlight(code, options = {}) {
  if (shouldHighlight(options)) {
    const chalk = getChalk(options);
    const defs = getDefs(chalk);
    return highlightTokens(defs, code);
  } else {
    return code;
  }
}
var __export07;
var __export15;
if (Object.isExtensible(module16.exports)) {
  __export07 = module16.exports["getChalk"];
  __export15 = module16.exports["shouldHighlight"];
}
var lib_default = module16.exports != null && typeof module16.exports === "object" && "default" in module16.exports ? module16.exports.default : module16.exports;

// node_modules/.pnpm/@babel+code-frame@7.16.7/node_modules/@babel/code-frame/lib/index.js
function $$cjs_default$$9(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global10 !== "undefined" && global10 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global10 = globalThis;
var exports17 = {};
var module17 = {
  get exports() {
    return exports17;
  },
  set exports(value) {
    exports17 = value;
  }
};
Object.defineProperty(exports17, "__esModule", {
  value: true
});
exports17.codeFrameColumns = codeFrameColumns;
exports17.default = _default;
var _highlight = $$cjs_default$$9(typeof lib_exports2 !== "undefined" ? lib_exports2 : {});
var deprecationWarningShown = false;
function getDefs2(chalk) {
  return {
    gutter: chalk.grey,
    marker: chalk.red.bold,
    message: chalk.red.bold
  };
}
var NEWLINE2 = /\r\n|[\n\r\u2028\u2029]/;
function getMarkerLines(loc, source, opts2) {
  const startLoc = Object.assign({
    column: 0,
    line: -1
  }, loc.start);
  const endLoc = Object.assign({}, startLoc, loc.end);
  const {
    linesAbove = 2,
    linesBelow = 3
  } = opts2 || {};
  const startLine = startLoc.line;
  const startColumn = startLoc.column;
  const endLine = endLoc.line;
  const endColumn = endLoc.column;
  let start = Math.max(startLine - (linesAbove + 1), 0);
  let end = Math.min(source.length, endLine + linesBelow);
  if (startLine === -1) {
    start = 0;
  }
  if (endLine === -1) {
    end = source.length;
  }
  const lineDiff = endLine - startLine;
  const markerLines = {};
  if (lineDiff) {
    for (let i = 0; i <= lineDiff; i++) {
      const lineNumber = i + startLine;
      if (!startColumn) {
        markerLines[lineNumber] = true;
      } else if (i === 0) {
        const sourceLength = source[lineNumber - 1].length;
        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];
      } else if (i === lineDiff) {
        markerLines[lineNumber] = [0, endColumn];
      } else {
        const sourceLength = source[lineNumber - i].length;
        markerLines[lineNumber] = [0, sourceLength];
      }
    }
  } else {
    if (startColumn === endColumn) {
      if (startColumn) {
        markerLines[startLine] = [startColumn, 0];
      } else {
        markerLines[startLine] = true;
      }
    } else {
      markerLines[startLine] = [startColumn, endColumn - startColumn];
    }
  }
  return {
    start,
    end,
    markerLines
  };
}
function codeFrameColumns(rawLines, loc, opts2 = {}) {
  const highlighted = (opts2.highlightCode || opts2.forceColor) && (0, _highlight.shouldHighlight)(opts2);
  const chalk = (0, _highlight.getChalk)(opts2);
  const defs = getDefs2(chalk);
  const maybeHighlight = (chalkFn, string) => {
    return highlighted ? chalkFn(string) : string;
  };
  const lines = rawLines.split(NEWLINE2);
  const {
    start,
    end,
    markerLines
  } = getMarkerLines(loc, lines, opts2);
  const hasColumns = loc.start && typeof loc.start.column === "number";
  const numberMaxWidth = String(end).length;
  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts2) : rawLines;
  let frame = highlightedLines.split(NEWLINE2, end).slice(start, end).map((line, index) => {
    const number = start + 1 + index;
    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);
    const gutter = ` ${paddedNumber} |`;
    const hasMarker = markerLines[number];
    const lastMarkerLine = !markerLines[number + 1];
    if (hasMarker) {
      let markerLine = "";
      if (Array.isArray(hasMarker)) {
        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\t]/g, " ");
        const numberOfMarkers = hasMarker[1] || 1;
        markerLine = ["\n ", maybeHighlight(defs.gutter, gutter.replace(/\d/g, " ")), " ", markerSpacing, maybeHighlight(defs.marker, "^").repeat(numberOfMarkers)].join("");
        if (lastMarkerLine && opts2.message) {
          markerLine += " " + maybeHighlight(defs.message, opts2.message);
        }
      }
      return [maybeHighlight(defs.marker, ">"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : "", markerLine].join("");
    } else {
      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : ""}`;
    }
  }).join("\n");
  if (opts2.message && !hasColumns) {
    frame = `${" ".repeat(numberMaxWidth + 1)}${opts2.message}
${frame}`;
  }
  if (highlighted) {
    return chalk.reset(frame);
  } else {
    return frame;
  }
}
function _default(rawLines, lineNumber, colNumber, opts2 = {}) {
  if (!deprecationWarningShown) {
    deprecationWarningShown = true;
    const message = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";
    if (process.emitWarning) {
      process.emitWarning(message, "DeprecationWarning");
    } else {
      const deprecationError = new Error(message);
      deprecationError.name = "DeprecationWarning";
      console.warn(new Error(message));
    }
  }
  colNumber = Math.max(colNumber, 0);
  const location = {
    start: {
      column: colNumber,
      line: lineNumber
    }
  };
  return codeFrameColumns(rawLines, location, opts2);
}
var __export08;
if (Object.isExtensible(module17.exports)) {
  __export08 = module17.exports["codeFrameColumns"];
}
var lib_default2 = module17.exports != null && typeof module17.exports === "object" && "default" in module17.exports ? module17.exports.default : module17.exports;

// node_modules/.pnpm/lines-and-columns@1.2.4/node_modules/lines-and-columns/build/index.js
var build_exports = {};
__export(build_exports, {
  LinesAndColumns: () => __export09,
  default: () => build_default
});
init_esm_shims();
var exports18 = {};
var module18 = {
  get exports() {
    return exports18;
  },
  set exports(value) {
    exports18 = value;
  }
};
exports18.__esModule = true;
exports18.LinesAndColumns = void 0;
var LF = "\n";
var CR = "\r";
var LinesAndColumns = function() {
  function LinesAndColumns3(string) {
    this.string = string;
    var offsets = [0];
    for (var offset = 0; offset < string.length; ) {
      switch (string[offset]) {
        case LF:
          offset += LF.length;
          offsets.push(offset);
          break;
        case CR:
          offset += CR.length;
          if (string[offset] === LF) {
            offset += LF.length;
          }
          offsets.push(offset);
          break;
        default:
          offset++;
          break;
      }
    }
    this.offsets = offsets;
  }
  LinesAndColumns3.prototype.locationForIndex = function(index) {
    if (index < 0 || index > this.string.length) {
      return null;
    }
    var line = 0;
    var offsets = this.offsets;
    while (offsets[line + 1] <= index) {
      line++;
    }
    var column = index - offsets[line];
    return { line, column };
  };
  LinesAndColumns3.prototype.indexForLocation = function(location) {
    var line = location.line, column = location.column;
    if (line < 0 || line >= this.offsets.length) {
      return null;
    }
    if (column < 0 || column > this.lengthOfLine(line)) {
      return null;
    }
    return this.offsets[line] + column;
  };
  LinesAndColumns3.prototype.lengthOfLine = function(line) {
    var offset = this.offsets[line];
    var nextOffset = line === this.offsets.length - 1 ? this.string.length : this.offsets[line + 1];
    return nextOffset - offset;
  };
  return LinesAndColumns3;
}();
exports18.LinesAndColumns = LinesAndColumns;
exports18["default"] = LinesAndColumns;
var __export09;
if (Object.isExtensible(module18.exports)) {
  __export09 = module18.exports["LinesAndColumns"];
}
var build_default = module18.exports != null && typeof module18.exports === "object" && "default" in module18.exports ? module18.exports.default : module18.exports;

// node_modules/.pnpm/json-parse-even-better-errors@2.3.1/node_modules/json-parse-even-better-errors/index.js
var json_parse_even_better_errors_exports = {};
__export(json_parse_even_better_errors_exports, {
  default: () => json_parse_even_better_errors_default
});
init_esm_shims();
var exports19 = {};
var module19 = {
  get exports() {
    return exports19;
  },
  set exports(value) {
    exports19 = value;
  }
};
var hexify = (char) => {
  const h = char.charCodeAt(0).toString(16).toUpperCase();
  return "0x" + (h.length % 2 ? "0" : "") + h;
};
var parseError = (e, txt, context) => {
  if (!txt) {
    return {
      message: e.message + " while parsing empty string",
      position: 0
    };
  }
  const badToken = e.message.match(/^Unexpected token (.) .*position\s+(\d+)/i);
  const errIdx = badToken ? +badToken[2] : e.message.match(/^Unexpected end of JSON.*/i) ? txt.length - 1 : null;
  const msg = badToken ? e.message.replace(/^Unexpected token ./, `Unexpected token ${JSON.stringify(badToken[1])} (${hexify(badToken[1])})`) : e.message;
  if (errIdx !== null && errIdx !== void 0) {
    const start = errIdx <= context ? 0 : errIdx - context;
    const end = errIdx + context >= txt.length ? txt.length : errIdx + context;
    const slice2 = (start === 0 ? "" : "...") + txt.slice(start, end) + (end === txt.length ? "" : "...");
    const near = txt === slice2 ? "" : "near ";
    return {
      message: msg + ` while parsing ${near}${JSON.stringify(slice2)}`,
      position: errIdx
    };
  } else {
    return {
      message: msg + ` while parsing '${txt.slice(0, context * 2)}'`,
      position: 0
    };
  }
};
var JSONParseError = class extends SyntaxError {
  constructor(er, txt, context, caller) {
    context = context || 20;
    const metadata = parseError(er, txt, context);
    super(metadata.message);
    Object.assign(this, metadata);
    this.code = "EJSONPARSE";
    this.systemError = er;
    Error.captureStackTrace(this, caller || this.constructor);
  }
  get name() {
    return this.constructor.name;
  }
  set name(n) {
  }
  get [Symbol.toStringTag]() {
    return this.constructor.name;
  }
};
var kIndent = Symbol.for("indent");
var kNewline = Symbol.for("newline");
var formatRE = /^\s*[{\[]((?:\r?\n)+)([\s\t]*)/;
var emptyRE = /^(?:\{\}|\[\])((?:\r?\n)+)?$/;
var parseJson = (txt, reviver, context) => {
  const parseText = stripBOM(txt);
  context = context || 20;
  try {
    const [, newline = "\n", indent = "  "] = parseText.match(emptyRE) || parseText.match(formatRE) || [, "", ""];
    const result = JSON.parse(parseText, reviver);
    if (result && typeof result === "object") {
      result[kNewline] = newline;
      result[kIndent] = indent;
    }
    return result;
  } catch (e) {
    if (typeof txt !== "string" && !Buffer.isBuffer(txt)) {
      const isEmptyArray = Array.isArray(txt) && txt.length === 0;
      throw Object.assign(new TypeError(`Cannot parse ${isEmptyArray ? "an empty array" : String(txt)}`), {
        code: "EJSONPARSE",
        systemError: e
      });
    }
    throw new JSONParseError(e, parseText, context, parseJson);
  }
};
var stripBOM = (txt) => String(txt).replace(/^\uFEFF/, "");
module19.exports = parseJson;
parseJson.JSONParseError = JSONParseError;
parseJson.noExceptions = (txt, reviver) => {
  try {
    return JSON.parse(stripBOM(txt), reviver);
  } catch (e) {
  }
};
var json_parse_even_better_errors_default = module19.exports;

// node_modules/.pnpm/error-ex@1.3.2/node_modules/error-ex/index.js
var error_ex_exports = {};
__export(error_ex_exports, {
  default: () => error_ex_default
});
init_esm_shims();

// node_modules/.pnpm/is-arrayish@0.2.1/node_modules/is-arrayish/index.js
var is_arrayish_exports = {};
__export(is_arrayish_exports, {
  default: () => is_arrayish_default
});
init_esm_shims();
var exports20 = {};
var module20 = {
  get exports() {
    return exports20;
  },
  set exports(value) {
    exports20 = value;
  }
};
module20.exports = function isArrayish(obj) {
  if (!obj) {
    return false;
  }
  return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && obj.splice instanceof Function;
};
var is_arrayish_default = module20.exports;

// node_modules/.pnpm/error-ex@1.3.2/node_modules/error-ex/index.js
import * as $cjs$util from "util";
function $$cjs_default$$10(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global11 !== "undefined" && global11 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global11 = globalThis;
var exports21 = {};
var module21 = {
  get exports() {
    return exports21;
  },
  set exports(value) {
    exports21 = value;
  }
};
var util = $$cjs_default$$10(typeof $cjs$util !== "undefined" ? $cjs$util : {});
var isArrayish2 = $$cjs_default$$10(typeof is_arrayish_exports !== "undefined" ? is_arrayish_exports : {});
var errorEx = function errorEx2(name, properties) {
  if (!name || name.constructor !== String) {
    properties = name || {};
    name = Error.name;
  }
  var errorExError = function ErrorEXError(message) {
    if (!this) {
      return new ErrorEXError(message);
    }
    message = message instanceof Error ? message.message : message || this.message;
    Error.call(this, message);
    Error.captureStackTrace(this, errorExError);
    this.name = name;
    Object.defineProperty(this, "message", {
      configurable: true,
      enumerable: false,
      get: function() {
        var newMessage = message.split(/\r?\n/g);
        for (var key in properties) {
          if (!properties.hasOwnProperty(key)) {
            continue;
          }
          var modifier = properties[key];
          if ("message" in modifier) {
            newMessage = modifier.message(this[key], newMessage) || newMessage;
            if (!isArrayish2(newMessage)) {
              newMessage = [newMessage];
            }
          }
        }
        return newMessage.join("\n");
      },
      set: function(v) {
        message = v;
      }
    });
    var overwrittenStack = null;
    var stackDescriptor = Object.getOwnPropertyDescriptor(this, "stack");
    var stackGetter = stackDescriptor.get;
    var stackValue = stackDescriptor.value;
    delete stackDescriptor.value;
    delete stackDescriptor.writable;
    stackDescriptor.set = function(newstack) {
      overwrittenStack = newstack;
    };
    stackDescriptor.get = function() {
      var stack = (overwrittenStack || (stackGetter ? stackGetter.call(this) : stackValue)).split(/\r?\n+/g);
      if (!overwrittenStack) {
        stack[0] = this.name + ": " + this.message;
      }
      var lineCount = 1;
      for (var key in properties) {
        if (!properties.hasOwnProperty(key)) {
          continue;
        }
        var modifier = properties[key];
        if ("line" in modifier) {
          var line = modifier.line(this[key]);
          if (line) {
            stack.splice(lineCount++, 0, "    " + line);
          }
        }
        if ("stack" in modifier) {
          modifier.stack(this[key], stack);
        }
      }
      return stack.join("\n");
    };
    Object.defineProperty(this, "stack", stackDescriptor);
  };
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(errorExError.prototype, Error.prototype);
    Object.setPrototypeOf(errorExError, Error);
  } else {
    util.inherits(errorExError, Error);
  }
  return errorExError;
};
errorEx.append = function(str, def) {
  return {
    message: function(v, message) {
      v = v || def;
      if (v) {
        message[0] += " " + str.replace("%s", v.toString());
      }
      return message;
    }
  };
};
errorEx.line = function(str, def) {
  return {
    line: function(v) {
      v = v || def;
      if (v) {
        return str.replace("%s", v.toString());
      }
      return null;
    }
  };
};
module21.exports = errorEx;
var error_ex_default = module21.exports;

// node_modules/.pnpm/parse-json@5.2.0/node_modules/parse-json/index.js
function $$cjs_default$$11(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global12 !== "undefined" && global12 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global12 = globalThis;
var exports22 = {};
var module22 = {
  get exports() {
    return exports22;
  },
  set exports(value) {
    exports22 = value;
  }
};
var errorEx3 = $$cjs_default$$11(typeof error_ex_exports !== "undefined" ? error_ex_exports : {});
var fallback = $$cjs_default$$11(typeof json_parse_even_better_errors_exports !== "undefined" ? json_parse_even_better_errors_exports : {});
var { default: LinesAndColumns2 } = $$cjs_default$$11(typeof build_exports !== "undefined" ? build_exports : {});
var { codeFrameColumns: codeFrameColumns2 } = $$cjs_default$$11(typeof lib_exports3 !== "undefined" ? lib_exports3 : {});
var JSONError = errorEx3("JSONError", {
  fileName: errorEx3.append("in %s"),
  codeFrame: errorEx3.append("\n\n%s\n")
});
var parseJson2 = (string, reviver, filename) => {
  if (typeof reviver === "string") {
    filename = reviver;
    reviver = null;
  }
  try {
    try {
      return JSON.parse(string, reviver);
    } catch (error) {
      fallback(string, reviver);
      throw error;
    }
  } catch (error) {
    error.message = error.message.replace(/\n/g, "");
    const indexMatch = error.message.match(/in JSON at position (\d+) while parsing/);
    const jsonError = new JSONError(error);
    if (filename) {
      jsonError.fileName = filename;
    }
    if (indexMatch && indexMatch.length > 0) {
      const lines = new LinesAndColumns2(string);
      const index = Number(indexMatch[1]);
      const location = lines.locationForIndex(index);
      const codeFrame = codeFrameColumns2(string, { start: { line: location.line + 1, column: location.column + 1 } }, { highlightCode: true });
      jsonError.codeFrame = codeFrame;
    }
    throw jsonError;
  }
};
parseJson2.JSONError = JSONError;
module22.exports = parseJson2;
var parse_json_default = module22.exports;

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/normalize.js
init_esm_shims();

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/make_warning.js
var make_warning_exports = {};
__export(make_warning_exports, {
  default: () => make_warning_default
});
init_esm_shims();

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/warning_messages.json
var warning_messages_exports = {};
__export(warning_messages_exports, {
  brokenGitUrl: () => brokenGitUrl,
  conflictingName: () => conflictingName,
  default: () => warning_messages_default,
  deprecatedArrayDependencies: () => deprecatedArrayDependencies,
  deprecatedModules: () => deprecatedModules,
  emptyNormalizedBugs: () => emptyNormalizedBugs,
  invalidFilename: () => invalidFilename,
  invalidLicense: () => invalidLicense,
  missingDescription: () => missingDescription,
  missingLicense: () => missingLicense,
  missingReadme: () => missingReadme,
  missingRepository: () => missingRepository,
  nonArrayBundleDependencies: () => nonArrayBundleDependencies,
  nonArrayFiles: () => nonArrayFiles,
  nonArrayKeywords: () => nonArrayKeywords,
  nonDependencyBundleDependency: () => nonDependencyBundleDependency,
  nonEmailBugsEmailField: () => nonEmailBugsEmailField,
  nonEmailUrlBugsString: () => nonEmailUrlBugsString,
  nonObjectDependencies: () => nonObjectDependencies,
  nonObjectScripts: () => nonObjectScripts,
  nonStringBundleDependency: () => nonStringBundleDependency,
  nonStringDependency: () => nonStringDependency,
  nonStringDescription: () => nonStringDescription,
  nonStringKeyword: () => nonStringKeyword,
  nonStringScript: () => nonStringScript,
  nonUrlBugsUrlField: () => nonUrlBugsUrlField,
  nonUrlHomepage: () => nonUrlHomepage,
  repositories: () => repositories,
  typo: () => typo
});
var repositories = "'repositories' (plural) Not supported. Please pick one as the 'repository' field";
var missingRepository = "No repository field.";
var brokenGitUrl = "Probably broken git url: %s";
var nonObjectScripts = "scripts must be an object";
var nonStringScript = "script values must be string commands";
var nonArrayFiles = "Invalid 'files' member";
var invalidFilename = "Invalid filename in 'files' list: %s";
var nonArrayBundleDependencies = "Invalid 'bundleDependencies' list. Must be array of package names";
var nonStringBundleDependency = "Invalid bundleDependencies member: %s";
var nonDependencyBundleDependency = "Non-dependency in bundleDependencies: %s";
var nonObjectDependencies = "%s field must be an object";
var nonStringDependency = "Invalid dependency: %s %s";
var deprecatedArrayDependencies = "specifying %s as array is deprecated";
var deprecatedModules = "modules field is deprecated";
var nonArrayKeywords = "keywords should be an array of strings";
var nonStringKeyword = "keywords should be an array of strings";
var conflictingName = "%s is also the name of a node core module.";
var nonStringDescription = "'description' field should be a string";
var missingDescription = "No description";
var missingReadme = "No README data";
var missingLicense = "No license field.";
var nonEmailUrlBugsString = "Bug string field must be url, email, or {email,url}";
var nonUrlBugsUrlField = "bugs.url field must be a string url. Deleted.";
var nonEmailBugsEmailField = "bugs.email field must be a string email. Deleted.";
var emptyNormalizedBugs = "Normalized value of bugs field is an empty object. Deleted.";
var nonUrlHomepage = "homepage field must be a string url. Deleted.";
var invalidLicense = "license should be a valid SPDX license expression";
var typo = "%s should probably be %s.";
var warning_messages_default = {
  repositories,
  missingRepository,
  brokenGitUrl,
  nonObjectScripts,
  nonStringScript,
  nonArrayFiles,
  invalidFilename,
  nonArrayBundleDependencies,
  nonStringBundleDependency,
  nonDependencyBundleDependency,
  nonObjectDependencies,
  nonStringDependency,
  deprecatedArrayDependencies,
  deprecatedModules,
  nonArrayKeywords,
  nonStringKeyword,
  conflictingName,
  nonStringDescription,
  missingDescription,
  missingReadme,
  missingLicense,
  nonEmailUrlBugsString,
  nonUrlBugsUrlField,
  nonEmailBugsEmailField,
  emptyNormalizedBugs,
  nonUrlHomepage,
  invalidLicense,
  typo
};

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/make_warning.js
import * as $cjs$util2 from "util";
function $$cjs_default$$12(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global13 !== "undefined" && global13 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global13 = globalThis;
var exports23 = {};
var module23 = {
  get exports() {
    return exports23;
  },
  set exports(value) {
    exports23 = value;
  }
};
var util2 = $$cjs_default$$12(typeof $cjs$util2 !== "undefined" ? $cjs$util2 : {});
var messages = $$cjs_default$$12(typeof warning_messages_exports !== "undefined" ? warning_messages_exports : {});
module23.exports = function() {
  var args = Array.prototype.slice.call(arguments, 0);
  var warningName = args.shift();
  if (warningName === "typo") {
    return makeTypoWarning.apply(null, args);
  } else {
    var msgTemplate = messages[warningName] ? messages[warningName] : warningName + ": '%s'";
    args.unshift(msgTemplate);
    return util2.format.apply(null, args);
  }
};
function makeTypoWarning(providedName, probableName, field) {
  if (field) {
    providedName = field + "['" + providedName + "']";
    probableName = field + "['" + probableName + "']";
  }
  return util2.format(messages.typo, providedName, probableName);
}
var make_warning_default = module23.exports;

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/fixer.js
var fixer_exports = {};
__export(fixer_exports, {
  default: () => fixer_default,
  warn: () => __export014
});
init_esm_shims();

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/typos.json
var typos_exports = {};
__export(typos_exports, {
  bugs: () => bugs,
  default: () => typos_default,
  script: () => script,
  topLevel: () => topLevel
});
var topLevel = {
  dependancies: "dependencies",
  dependecies: "dependencies",
  depdenencies: "dependencies",
  devEependencies: "devDependencies",
  depends: "dependencies",
  "dev-dependencies": "devDependencies",
  devDependences: "devDependencies",
  devDepenencies: "devDependencies",
  devdependencies: "devDependencies",
  repostitory: "repository",
  repo: "repository",
  prefereGlobal: "preferGlobal",
  hompage: "homepage",
  hampage: "homepage",
  autohr: "author",
  autor: "author",
  contributers: "contributors",
  publicationConfig: "publishConfig",
  script: "scripts"
};
var bugs = { web: "url", name: "url" };
var script = { server: "start", tests: "test" };
var typos_default = {
  topLevel,
  bugs,
  script
};

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/fixer.js
import * as $cjs$url2 from "url";

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/extract_description.js
var extract_description_exports = {};
__export(extract_description_exports, {
  default: () => extract_description_default
});
init_esm_shims();
var exports24 = {};
var module24 = {
  get exports() {
    return exports24;
  },
  set exports(value) {
    exports24 = value;
  }
};
module24.exports = extractDescription;
function extractDescription(d) {
  if (!d) {
    return;
  }
  if (d === "ERROR: No README data found!") {
    return;
  }
  d = d.trim().split("\n");
  for (var s = 0; d[s] && d[s].trim().match(/^(#|$)/); s++) {
    ;
  }
  var l = d.length;
  for (var e = s + 1; e < l && d[e].trim(); e++) {
    ;
  }
  return d.slice(s, e).join(" ").trim();
}
var extract_description_default = module24.exports;

// node_modules/.pnpm/is-core-module@2.8.1/node_modules/is-core-module/index.js
var is_core_module_exports = {};
__export(is_core_module_exports, {
  default: () => is_core_module_default
});
init_esm_shims();

// node_modules/.pnpm/is-core-module@2.8.1/node_modules/is-core-module/core.json
var core_exports = {};
__export(core_exports, {
  _debug_agent: () => _debug_agent,
  _debugger: () => _debugger,
  _http_agent: () => _http_agent,
  _http_client: () => _http_client,
  _http_common: () => _http_common,
  _http_incoming: () => _http_incoming,
  _http_outgoing: () => _http_outgoing,
  _http_server: () => _http_server,
  _linklist: () => _linklist,
  _stream_duplex: () => _stream_duplex,
  _stream_passthrough: () => _stream_passthrough,
  _stream_readable: () => _stream_readable,
  _stream_transform: () => _stream_transform,
  _stream_wrap: () => _stream_wrap,
  _stream_writable: () => _stream_writable,
  _tls_common: () => _tls_common,
  _tls_legacy: () => _tls_legacy,
  _tls_wrap: () => _tls_wrap,
  assert: () => assert,
  "assert/strict": () => assert_strict,
  async_hooks: () => async_hooks,
  buffer: () => buffer,
  buffer_ieee754: () => buffer_ieee754,
  child_process: () => child_process,
  cluster: () => cluster,
  console: () => console2,
  constants: () => constants,
  crypto: () => crypto,
  default: () => core_default,
  dgram: () => dgram,
  diagnostics_channel: () => diagnostics_channel,
  dns: () => dns,
  "dns/promises": () => dns_promises,
  domain: () => domain,
  events: () => events,
  freelist: () => freelist,
  fs: () => fs2,
  "fs/promises": () => fs_promises,
  http: () => http,
  http2: () => http2,
  https: () => https,
  inspector: () => inspector,
  module: () => module25,
  net: () => net,
  "node-inspect/lib/_inspect": () => node_inspect_lib__inspect,
  "node-inspect/lib/internal/inspect_client": () => node_inspect_lib_internal_inspect_client,
  "node-inspect/lib/internal/inspect_repl": () => node_inspect_lib_internal_inspect_repl,
  "node:_http_agent": () => node__http_agent,
  "node:_http_client": () => node__http_client,
  "node:_http_common": () => node__http_common,
  "node:_http_incoming": () => node__http_incoming,
  "node:_http_outgoing": () => node__http_outgoing,
  "node:_http_server": () => node__http_server,
  "node:_stream_duplex": () => node__stream_duplex,
  "node:_stream_passthrough": () => node__stream_passthrough,
  "node:_stream_readable": () => node__stream_readable,
  "node:_stream_transform": () => node__stream_transform,
  "node:_stream_wrap": () => node__stream_wrap,
  "node:_stream_writable": () => node__stream_writable,
  "node:_tls_common": () => node__tls_common,
  "node:_tls_wrap": () => node__tls_wrap,
  "node:assert": () => node_assert,
  "node:assert/strict": () => node_assert_strict,
  "node:async_hooks": () => node_async_hooks,
  "node:buffer": () => node_buffer,
  "node:child_process": () => node_child_process,
  "node:cluster": () => node_cluster,
  "node:console": () => node_console,
  "node:constants": () => node_constants,
  "node:crypto": () => node_crypto,
  "node:dgram": () => node_dgram,
  "node:diagnostics_channel": () => node_diagnostics_channel,
  "node:dns": () => node_dns,
  "node:dns/promises": () => node_dns_promises,
  "node:domain": () => node_domain,
  "node:events": () => node_events,
  "node:fs": () => node_fs,
  "node:fs/promises": () => node_fs_promises,
  "node:http": () => node_http,
  "node:http2": () => node_http2,
  "node:https": () => node_https,
  "node:inspector": () => node_inspector,
  "node:module": () => node_module,
  "node:net": () => node_net,
  "node:os": () => node_os,
  "node:path": () => node_path,
  "node:path/posix": () => node_path_posix,
  "node:path/win32": () => node_path_win32,
  "node:perf_hooks": () => node_perf_hooks,
  "node:process": () => node_process,
  "node:punycode": () => node_punycode,
  "node:querystring": () => node_querystring,
  "node:readline": () => node_readline,
  "node:readline/promises": () => node_readline_promises,
  "node:repl": () => node_repl,
  "node:stream": () => node_stream,
  "node:stream/consumers": () => node_stream_consumers,
  "node:stream/promises": () => node_stream_promises,
  "node:stream/web": () => node_stream_web,
  "node:string_decoder": () => node_string_decoder,
  "node:sys": () => node_sys,
  "node:timers": () => node_timers,
  "node:timers/promises": () => node_timers_promises,
  "node:tls": () => node_tls,
  "node:trace_events": () => node_trace_events,
  "node:tty": () => node_tty,
  "node:url": () => node_url,
  "node:util": () => node_util,
  "node:util/types": () => node_util_types,
  "node:v8": () => node_v8,
  "node:vm": () => node_vm,
  "node:worker_threads": () => node_worker_threads,
  "node:zlib": () => node_zlib,
  os: () => os2,
  path: () => path3,
  "path/posix": () => path_posix,
  "path/win32": () => path_win32,
  perf_hooks: () => perf_hooks,
  process: () => process3,
  punycode: () => punycode,
  querystring: () => querystring,
  readline: () => readline,
  "readline/promises": () => readline_promises,
  repl: () => repl,
  smalloc: () => smalloc,
  stream: () => stream,
  "stream/consumers": () => stream_consumers,
  "stream/promises": () => stream_promises,
  "stream/web": () => stream_web,
  string_decoder: () => string_decoder,
  sys: () => sys,
  timers: () => timers,
  "timers/promises": () => timers_promises,
  tls: () => tls,
  trace_events: () => trace_events,
  tty: () => tty,
  url: () => url,
  util: () => util3,
  "util/types": () => util_types,
  v8: () => v8,
  "v8/tools/arguments": () => v8_tools_arguments,
  "v8/tools/codemap": () => v8_tools_codemap,
  "v8/tools/consarray": () => v8_tools_consarray,
  "v8/tools/csvparser": () => v8_tools_csvparser,
  "v8/tools/logreader": () => v8_tools_logreader,
  "v8/tools/profile_view": () => v8_tools_profile_view,
  "v8/tools/splaytree": () => v8_tools_splaytree,
  vm: () => vm,
  wasi: () => wasi,
  worker_threads: () => worker_threads,
  zlib: () => zlib
});
var assert = true;
var node_assert = [">= 14.18 && < 15", ">= 16"];
var assert_strict = ">= 15";
var node_assert_strict = ">= 16";
var async_hooks = ">= 8";
var node_async_hooks = [">= 14.18 && < 15", ">= 16"];
var buffer_ieee754 = ">= 0.5 && < 0.9.7";
var buffer = true;
var node_buffer = [">= 14.18 && < 15", ">= 16"];
var child_process = true;
var node_child_process = [">= 14.18 && < 15", ">= 16"];
var cluster = ">= 0.5";
var node_cluster = [">= 14.18 && < 15", ">= 16"];
var console2 = true;
var node_console = [">= 14.18 && < 15", ">= 16"];
var constants = true;
var node_constants = [">= 14.18 && < 15", ">= 16"];
var crypto = true;
var node_crypto = [">= 14.18 && < 15", ">= 16"];
var _debug_agent = ">= 1 && < 8";
var _debugger = "< 8";
var dgram = true;
var node_dgram = [">= 14.18 && < 15", ">= 16"];
var diagnostics_channel = [">= 14.17 && < 15", ">= 15.1"];
var node_diagnostics_channel = [">= 14.18 && < 15", ">= 16"];
var dns = true;
var node_dns = [">= 14.18 && < 15", ">= 16"];
var dns_promises = ">= 15";
var node_dns_promises = ">= 16";
var domain = ">= 0.7.12";
var node_domain = [">= 14.18 && < 15", ">= 16"];
var events = true;
var node_events = [">= 14.18 && < 15", ">= 16"];
var freelist = "< 6";
var fs2 = true;
var node_fs = [">= 14.18 && < 15", ">= 16"];
var fs_promises = [">= 10 && < 10.1", ">= 14"];
var node_fs_promises = [">= 14.18 && < 15", ">= 16"];
var _http_agent = ">= 0.11.1";
var node__http_agent = [">= 14.18 && < 15", ">= 16"];
var _http_client = ">= 0.11.1";
var node__http_client = [">= 14.18 && < 15", ">= 16"];
var _http_common = ">= 0.11.1";
var node__http_common = [">= 14.18 && < 15", ">= 16"];
var _http_incoming = ">= 0.11.1";
var node__http_incoming = [">= 14.18 && < 15", ">= 16"];
var _http_outgoing = ">= 0.11.1";
var node__http_outgoing = [">= 14.18 && < 15", ">= 16"];
var _http_server = ">= 0.11.1";
var node__http_server = [">= 14.18 && < 15", ">= 16"];
var http = true;
var node_http = [">= 14.18 && < 15", ">= 16"];
var http2 = ">= 8.8";
var node_http2 = [">= 14.18 && < 15", ">= 16"];
var https = true;
var node_https = [">= 14.18 && < 15", ">= 16"];
var inspector = ">= 8";
var node_inspector = [">= 14.18 && < 15", ">= 16"];
var _linklist = "< 8";
var module25 = true;
var node_module = [">= 14.18 && < 15", ">= 16"];
var net = true;
var node_net = [">= 14.18 && < 15", ">= 16"];
var node_inspect_lib__inspect = ">= 7.6 && < 12";
var node_inspect_lib_internal_inspect_client = ">= 7.6 && < 12";
var node_inspect_lib_internal_inspect_repl = ">= 7.6 && < 12";
var os2 = true;
var node_os = [">= 14.18 && < 15", ">= 16"];
var path3 = true;
var node_path = [">= 14.18 && < 15", ">= 16"];
var path_posix = ">= 15.3";
var node_path_posix = ">= 16";
var path_win32 = ">= 15.3";
var node_path_win32 = ">= 16";
var perf_hooks = ">= 8.5";
var node_perf_hooks = [">= 14.18 && < 15", ">= 16"];
var process3 = ">= 1";
var node_process = [">= 14.18 && < 15", ">= 16"];
var punycode = ">= 0.5";
var node_punycode = [">= 14.18 && < 15", ">= 16"];
var querystring = true;
var node_querystring = [">= 14.18 && < 15", ">= 16"];
var readline = true;
var node_readline = [">= 14.18 && < 15", ">= 16"];
var readline_promises = ">= 17";
var node_readline_promises = ">= 17";
var repl = true;
var node_repl = [">= 14.18 && < 15", ">= 16"];
var smalloc = ">= 0.11.5 && < 3";
var _stream_duplex = ">= 0.9.4";
var node__stream_duplex = [">= 14.18 && < 15", ">= 16"];
var _stream_transform = ">= 0.9.4";
var node__stream_transform = [">= 14.18 && < 15", ">= 16"];
var _stream_wrap = ">= 1.4.1";
var node__stream_wrap = [">= 14.18 && < 15", ">= 16"];
var _stream_passthrough = ">= 0.9.4";
var node__stream_passthrough = [">= 14.18 && < 15", ">= 16"];
var _stream_readable = ">= 0.9.4";
var node__stream_readable = [">= 14.18 && < 15", ">= 16"];
var _stream_writable = ">= 0.9.4";
var node__stream_writable = [">= 14.18 && < 15", ">= 16"];
var stream = true;
var node_stream = [">= 14.18 && < 15", ">= 16"];
var stream_consumers = ">= 16.7";
var node_stream_consumers = ">= 16.7";
var stream_promises = ">= 15";
var node_stream_promises = ">= 16";
var stream_web = ">= 16.5";
var node_stream_web = ">= 16.5";
var string_decoder = true;
var node_string_decoder = [">= 14.18 && < 15", ">= 16"];
var sys = [">= 0.4 && < 0.7", ">= 0.8"];
var node_sys = [">= 14.18 && < 15", ">= 16"];
var timers = true;
var node_timers = [">= 14.18 && < 15", ">= 16"];
var timers_promises = ">= 15";
var node_timers_promises = ">= 16";
var _tls_common = ">= 0.11.13";
var node__tls_common = [">= 14.18 && < 15", ">= 16"];
var _tls_legacy = ">= 0.11.3 && < 10";
var _tls_wrap = ">= 0.11.3";
var node__tls_wrap = [">= 14.18 && < 15", ">= 16"];
var tls = true;
var node_tls = [">= 14.18 && < 15", ">= 16"];
var trace_events = ">= 10";
var node_trace_events = [">= 14.18 && < 15", ">= 16"];
var tty = true;
var node_tty = [">= 14.18 && < 15", ">= 16"];
var url = true;
var node_url = [">= 14.18 && < 15", ">= 16"];
var util3 = true;
var node_util = [">= 14.18 && < 15", ">= 16"];
var util_types = ">= 15.3";
var node_util_types = ">= 16";
var v8_tools_arguments = ">= 10 && < 12";
var v8_tools_codemap = [">= 4.4 && < 5", ">= 5.2 && < 12"];
var v8_tools_consarray = [">= 4.4 && < 5", ">= 5.2 && < 12"];
var v8_tools_csvparser = [">= 4.4 && < 5", ">= 5.2 && < 12"];
var v8_tools_logreader = [">= 4.4 && < 5", ">= 5.2 && < 12"];
var v8_tools_profile_view = [">= 4.4 && < 5", ">= 5.2 && < 12"];
var v8_tools_splaytree = [">= 4.4 && < 5", ">= 5.2 && < 12"];
var v8 = ">= 1";
var node_v8 = [">= 14.18 && < 15", ">= 16"];
var vm = true;
var node_vm = [">= 14.18 && < 15", ">= 16"];
var wasi = ">= 13.4 && < 13.5";
var worker_threads = ">= 11.7";
var node_worker_threads = [">= 14.18 && < 15", ">= 16"];
var zlib = ">= 0.5";
var node_zlib = [">= 14.18 && < 15", ">= 16"];
var core_default = {
  assert,
  "node:assert": node_assert,
  "assert/strict": assert_strict,
  "node:assert/strict": node_assert_strict,
  async_hooks,
  "node:async_hooks": node_async_hooks,
  buffer_ieee754,
  buffer,
  "node:buffer": node_buffer,
  child_process,
  "node:child_process": node_child_process,
  cluster,
  "node:cluster": node_cluster,
  console: console2,
  "node:console": node_console,
  constants,
  "node:constants": node_constants,
  crypto,
  "node:crypto": node_crypto,
  _debug_agent,
  _debugger,
  dgram,
  "node:dgram": node_dgram,
  diagnostics_channel,
  "node:diagnostics_channel": node_diagnostics_channel,
  dns,
  "node:dns": node_dns,
  "dns/promises": dns_promises,
  "node:dns/promises": node_dns_promises,
  domain,
  "node:domain": node_domain,
  events,
  "node:events": node_events,
  freelist,
  fs: fs2,
  "node:fs": node_fs,
  "fs/promises": fs_promises,
  "node:fs/promises": node_fs_promises,
  _http_agent,
  "node:_http_agent": node__http_agent,
  _http_client,
  "node:_http_client": node__http_client,
  _http_common,
  "node:_http_common": node__http_common,
  _http_incoming,
  "node:_http_incoming": node__http_incoming,
  _http_outgoing,
  "node:_http_outgoing": node__http_outgoing,
  _http_server,
  "node:_http_server": node__http_server,
  http,
  "node:http": node_http,
  http2,
  "node:http2": node_http2,
  https,
  "node:https": node_https,
  inspector,
  "node:inspector": node_inspector,
  _linklist,
  module: module25,
  "node:module": node_module,
  net,
  "node:net": node_net,
  "node-inspect/lib/_inspect": node_inspect_lib__inspect,
  "node-inspect/lib/internal/inspect_client": node_inspect_lib_internal_inspect_client,
  "node-inspect/lib/internal/inspect_repl": node_inspect_lib_internal_inspect_repl,
  os: os2,
  "node:os": node_os,
  path: path3,
  "node:path": node_path,
  "path/posix": path_posix,
  "node:path/posix": node_path_posix,
  "path/win32": path_win32,
  "node:path/win32": node_path_win32,
  perf_hooks,
  "node:perf_hooks": node_perf_hooks,
  process: process3,
  "node:process": node_process,
  punycode,
  "node:punycode": node_punycode,
  querystring,
  "node:querystring": node_querystring,
  readline,
  "node:readline": node_readline,
  "readline/promises": readline_promises,
  "node:readline/promises": node_readline_promises,
  repl,
  "node:repl": node_repl,
  smalloc,
  _stream_duplex,
  "node:_stream_duplex": node__stream_duplex,
  _stream_transform,
  "node:_stream_transform": node__stream_transform,
  _stream_wrap,
  "node:_stream_wrap": node__stream_wrap,
  _stream_passthrough,
  "node:_stream_passthrough": node__stream_passthrough,
  _stream_readable,
  "node:_stream_readable": node__stream_readable,
  _stream_writable,
  "node:_stream_writable": node__stream_writable,
  stream,
  "node:stream": node_stream,
  "stream/consumers": stream_consumers,
  "node:stream/consumers": node_stream_consumers,
  "stream/promises": stream_promises,
  "node:stream/promises": node_stream_promises,
  "stream/web": stream_web,
  "node:stream/web": node_stream_web,
  string_decoder,
  "node:string_decoder": node_string_decoder,
  sys,
  "node:sys": node_sys,
  timers,
  "node:timers": node_timers,
  "timers/promises": timers_promises,
  "node:timers/promises": node_timers_promises,
  _tls_common,
  "node:_tls_common": node__tls_common,
  _tls_legacy,
  _tls_wrap,
  "node:_tls_wrap": node__tls_wrap,
  tls,
  "node:tls": node_tls,
  trace_events,
  "node:trace_events": node_trace_events,
  tty,
  "node:tty": node_tty,
  url,
  "node:url": node_url,
  util: util3,
  "node:util": node_util,
  "util/types": util_types,
  "node:util/types": node_util_types,
  "v8/tools/arguments": v8_tools_arguments,
  "v8/tools/codemap": v8_tools_codemap,
  "v8/tools/consarray": v8_tools_consarray,
  "v8/tools/csvparser": v8_tools_csvparser,
  "v8/tools/logreader": v8_tools_logreader,
  "v8/tools/profile_view": v8_tools_profile_view,
  "v8/tools/splaytree": v8_tools_splaytree,
  v8,
  "node:v8": node_v8,
  vm,
  "node:vm": node_vm,
  wasi,
  worker_threads,
  "node:worker_threads": node_worker_threads,
  zlib,
  "node:zlib": node_zlib
};

// node_modules/.pnpm/has@1.0.3/node_modules/has/src/index.js
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
init_esm_shims();

// node_modules/.pnpm/function-bind@1.1.1/node_modules/function-bind/index.js
var function_bind_exports = {};
__export(function_bind_exports, {
  default: () => function_bind_default
});
init_esm_shims();

// node_modules/.pnpm/function-bind@1.1.1/node_modules/function-bind/implementation.js
var implementation_exports = {};
__export(implementation_exports, {
  default: () => implementation_default
});
init_esm_shims();
var exports25 = {};
var module26 = {
  get exports() {
    return exports25;
  },
  set exports(value) {
    exports25 = value;
  }
};
var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = "[object Function]";
module26.exports = function bind(that) {
  var target = this;
  if (typeof target !== "function" || toStr.call(target) !== funcType) {
    throw new TypeError(ERROR_MESSAGE + target);
  }
  var args = slice.call(arguments, 1);
  var bound;
  var binder = function() {
    if (this instanceof bound) {
      var result = target.apply(this, args.concat(slice.call(arguments)));
      if (Object(result) === result) {
        return result;
      }
      return this;
    } else {
      return target.apply(that, args.concat(slice.call(arguments)));
    }
  };
  var boundLength = Math.max(0, target.length - args.length);
  var boundArgs = [];
  for (var i = 0; i < boundLength; i++) {
    boundArgs.push("$" + i);
  }
  bound = Function("binder", "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }")(binder);
  if (target.prototype) {
    var Empty = function Empty2() {
    };
    Empty.prototype = target.prototype;
    bound.prototype = new Empty();
    Empty.prototype = null;
  }
  return bound;
};
var implementation_default = module26.exports;

// node_modules/.pnpm/function-bind@1.1.1/node_modules/function-bind/index.js
function $$cjs_default$$13(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global14 !== "undefined" && global14 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global14 = globalThis;
var exports26 = {};
var module27 = {
  get exports() {
    return exports26;
  },
  set exports(value) {
    exports26 = value;
  }
};
var implementation = $$cjs_default$$13(typeof implementation_exports !== "undefined" ? implementation_exports : {});
module27.exports = Function.prototype.bind || implementation;
var function_bind_default = module27.exports;

// node_modules/.pnpm/has@1.0.3/node_modules/has/src/index.js
function $$cjs_default$$14(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global15 !== "undefined" && global15 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global15 = globalThis;
var exports27 = {};
var module28 = {
  get exports() {
    return exports27;
  },
  set exports(value) {
    exports27 = value;
  }
};
var bind2 = $$cjs_default$$14(typeof function_bind_exports !== "undefined" ? function_bind_exports : {});
module28.exports = bind2.call(Function.call, Object.prototype.hasOwnProperty);
var src_default = module28.exports;

// node_modules/.pnpm/is-core-module@2.8.1/node_modules/is-core-module/index.js
function $$cjs_default$$15(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global16 !== "undefined" && global16 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global16 = globalThis;
var exports28 = {};
var module29 = {
  get exports() {
    return exports28;
  },
  set exports(value) {
    exports28 = value;
  }
};
var has = $$cjs_default$$15(typeof src_exports !== "undefined" ? src_exports : {});
function specifierIncluded(current, specifier) {
  var nodeParts = current.split(".");
  var parts = specifier.split(" ");
  var op = parts.length > 1 ? parts[0] : "=";
  var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split(".");
  for (var i = 0; i < 3; ++i) {
    var cur = parseInt(nodeParts[i] || 0, 10);
    var ver = parseInt(versionParts[i] || 0, 10);
    if (cur === ver) {
      continue;
    }
    if (op === "<") {
      return cur < ver;
    }
    if (op === ">=") {
      return cur >= ver;
    }
    return false;
  }
  return op === ">=";
}
function matchesRange(current, range) {
  var specifiers = range.split(/ ?&& ?/);
  if (specifiers.length === 0) {
    return false;
  }
  for (var i = 0; i < specifiers.length; ++i) {
    if (!specifierIncluded(current, specifiers[i])) {
      return false;
    }
  }
  return true;
}
function versionIncluded(nodeVersion, specifierValue) {
  if (typeof specifierValue === "boolean") {
    return specifierValue;
  }
  var current = typeof nodeVersion === "undefined" ? process.versions && process.versions.node : nodeVersion;
  if (typeof current !== "string") {
    throw new TypeError(typeof nodeVersion === "undefined" ? "Unable to determine current node version" : "If provided, a valid node version is required");
  }
  if (specifierValue && typeof specifierValue === "object") {
    for (var i = 0; i < specifierValue.length; ++i) {
      if (matchesRange(current, specifierValue[i])) {
        return true;
      }
    }
    return false;
  }
  return matchesRange(current, specifierValue);
}
var data = $$cjs_default$$15(typeof core_exports !== "undefined" ? core_exports : {});
module29.exports = function isCore(x, nodeVersion) {
  return has(data, x) && versionIncluded(nodeVersion, data[x]);
};
var is_core_module_default = module29.exports;

// node_modules/.pnpm/hosted-git-info@4.1.0/node_modules/hosted-git-info/index.js
var hosted_git_info_exports = {};
__export(hosted_git_info_exports, {
  default: () => hosted_git_info_default,
  fromUrl: () => __export010
});
init_esm_shims();

// node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js
var lru_cache_exports = {};
__export(lru_cache_exports, {
  default: () => lru_cache_default
});
init_esm_shims();

// node_modules/.pnpm/yallist@4.0.0/node_modules/yallist/yallist.js
var yallist_exports = {};
__export(yallist_exports, {
  default: () => yallist_default
});
init_esm_shims();
var exports30 = {};
var module31 = {
  get exports() {
    return exports30;
  },
  set exports(value) {
    exports30 = value;
  }
};
module31.exports = Yallist;
Yallist.Node = Node2;
Yallist.create = Yallist;
function Yallist(list) {
  var self2 = this;
  if (!(self2 instanceof Yallist)) {
    self2 = new Yallist();
  }
  self2.tail = null;
  self2.head = null;
  self2.length = 0;
  if (list && typeof list.forEach === "function") {
    list.forEach(function(item) {
      self2.push(item);
    });
  } else if (arguments.length > 0) {
    for (var i = 0, l = arguments.length; i < l; i++) {
      self2.push(arguments[i]);
    }
  }
  return self2;
}
Yallist.prototype.removeNode = function(node) {
  if (node.list !== this) {
    throw new Error("removing node which does not belong to this list");
  }
  var next = node.next;
  var prev = node.prev;
  if (next) {
    next.prev = prev;
  }
  if (prev) {
    prev.next = next;
  }
  if (node === this.head) {
    this.head = next;
  }
  if (node === this.tail) {
    this.tail = prev;
  }
  node.list.length--;
  node.next = null;
  node.prev = null;
  node.list = null;
  return next;
};
Yallist.prototype.unshiftNode = function(node) {
  if (node === this.head) {
    return;
  }
  if (node.list) {
    node.list.removeNode(node);
  }
  var head = this.head;
  node.list = this;
  node.next = head;
  if (head) {
    head.prev = node;
  }
  this.head = node;
  if (!this.tail) {
    this.tail = node;
  }
  this.length++;
};
Yallist.prototype.pushNode = function(node) {
  if (node === this.tail) {
    return;
  }
  if (node.list) {
    node.list.removeNode(node);
  }
  var tail = this.tail;
  node.list = this;
  node.prev = tail;
  if (tail) {
    tail.next = node;
  }
  this.tail = node;
  if (!this.head) {
    this.head = node;
  }
  this.length++;
};
Yallist.prototype.push = function() {
  for (var i = 0, l = arguments.length; i < l; i++) {
    push(this, arguments[i]);
  }
  return this.length;
};
Yallist.prototype.unshift = function() {
  for (var i = 0, l = arguments.length; i < l; i++) {
    unshift(this, arguments[i]);
  }
  return this.length;
};
Yallist.prototype.pop = function() {
  if (!this.tail) {
    return void 0;
  }
  var res = this.tail.value;
  this.tail = this.tail.prev;
  if (this.tail) {
    this.tail.next = null;
  } else {
    this.head = null;
  }
  this.length--;
  return res;
};
Yallist.prototype.shift = function() {
  if (!this.head) {
    return void 0;
  }
  var res = this.head.value;
  this.head = this.head.next;
  if (this.head) {
    this.head.prev = null;
  } else {
    this.tail = null;
  }
  this.length--;
  return res;
};
Yallist.prototype.forEach = function(fn, thisp) {
  thisp = thisp || this;
  for (var walker = this.head, i = 0; walker !== null; i++) {
    fn.call(thisp, walker.value, i, this);
    walker = walker.next;
  }
};
Yallist.prototype.forEachReverse = function(fn, thisp) {
  thisp = thisp || this;
  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {
    fn.call(thisp, walker.value, i, this);
    walker = walker.prev;
  }
};
Yallist.prototype.get = function(n) {
  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {
    walker = walker.next;
  }
  if (i === n && walker !== null) {
    return walker.value;
  }
};
Yallist.prototype.getReverse = function(n) {
  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {
    walker = walker.prev;
  }
  if (i === n && walker !== null) {
    return walker.value;
  }
};
Yallist.prototype.map = function(fn, thisp) {
  thisp = thisp || this;
  var res = new Yallist();
  for (var walker = this.head; walker !== null; ) {
    res.push(fn.call(thisp, walker.value, this));
    walker = walker.next;
  }
  return res;
};
Yallist.prototype.mapReverse = function(fn, thisp) {
  thisp = thisp || this;
  var res = new Yallist();
  for (var walker = this.tail; walker !== null; ) {
    res.push(fn.call(thisp, walker.value, this));
    walker = walker.prev;
  }
  return res;
};
Yallist.prototype.reduce = function(fn, initial) {
  var acc;
  var walker = this.head;
  if (arguments.length > 1) {
    acc = initial;
  } else if (this.head) {
    walker = this.head.next;
    acc = this.head.value;
  } else {
    throw new TypeError("Reduce of empty list with no initial value");
  }
  for (var i = 0; walker !== null; i++) {
    acc = fn(acc, walker.value, i);
    walker = walker.next;
  }
  return acc;
};
Yallist.prototype.reduceReverse = function(fn, initial) {
  var acc;
  var walker = this.tail;
  if (arguments.length > 1) {
    acc = initial;
  } else if (this.tail) {
    walker = this.tail.prev;
    acc = this.tail.value;
  } else {
    throw new TypeError("Reduce of empty list with no initial value");
  }
  for (var i = this.length - 1; walker !== null; i--) {
    acc = fn(acc, walker.value, i);
    walker = walker.prev;
  }
  return acc;
};
Yallist.prototype.toArray = function() {
  var arr = new Array(this.length);
  for (var i = 0, walker = this.head; walker !== null; i++) {
    arr[i] = walker.value;
    walker = walker.next;
  }
  return arr;
};
Yallist.prototype.toArrayReverse = function() {
  var arr = new Array(this.length);
  for (var i = 0, walker = this.tail; walker !== null; i++) {
    arr[i] = walker.value;
    walker = walker.prev;
  }
  return arr;
};
Yallist.prototype.slice = function(from, to) {
  to = to || this.length;
  if (to < 0) {
    to += this.length;
  }
  from = from || 0;
  if (from < 0) {
    from += this.length;
  }
  var ret = new Yallist();
  if (to < from || to < 0) {
    return ret;
  }
  if (from < 0) {
    from = 0;
  }
  if (to > this.length) {
    to = this.length;
  }
  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {
    walker = walker.next;
  }
  for (; walker !== null && i < to; i++, walker = walker.next) {
    ret.push(walker.value);
  }
  return ret;
};
Yallist.prototype.sliceReverse = function(from, to) {
  to = to || this.length;
  if (to < 0) {
    to += this.length;
  }
  from = from || 0;
  if (from < 0) {
    from += this.length;
  }
  var ret = new Yallist();
  if (to < from || to < 0) {
    return ret;
  }
  if (from < 0) {
    from = 0;
  }
  if (to > this.length) {
    to = this.length;
  }
  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {
    walker = walker.prev;
  }
  for (; walker !== null && i > from; i--, walker = walker.prev) {
    ret.push(walker.value);
  }
  return ret;
};
Yallist.prototype.splice = function(start, deleteCount, ...nodes) {
  if (start > this.length) {
    start = this.length - 1;
  }
  if (start < 0) {
    start = this.length + start;
  }
  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {
    walker = walker.next;
  }
  var ret = [];
  for (var i = 0; walker && i < deleteCount; i++) {
    ret.push(walker.value);
    walker = this.removeNode(walker);
  }
  if (walker === null) {
    walker = this.tail;
  }
  if (walker !== this.head && walker !== this.tail) {
    walker = walker.prev;
  }
  for (var i = 0; i < nodes.length; i++) {
    walker = insert(this, walker, nodes[i]);
  }
  return ret;
};
Yallist.prototype.reverse = function() {
  var head = this.head;
  var tail = this.tail;
  for (var walker = head; walker !== null; walker = walker.prev) {
    var p = walker.prev;
    walker.prev = walker.next;
    walker.next = p;
  }
  this.head = tail;
  this.tail = head;
  return this;
};
function insert(self2, node, value) {
  var inserted = node === self2.head ? new Node2(value, null, node, self2) : new Node2(value, node, node.next, self2);
  if (inserted.next === null) {
    self2.tail = inserted;
  }
  if (inserted.prev === null) {
    self2.head = inserted;
  }
  self2.length++;
  return inserted;
}
function push(self2, item) {
  self2.tail = new Node2(item, self2.tail, null, self2);
  if (!self2.head) {
    self2.head = self2.tail;
  }
  self2.length++;
}
function unshift(self2, item) {
  self2.head = new Node2(item, null, self2.head, self2);
  if (!self2.tail) {
    self2.tail = self2.head;
  }
  self2.length++;
}
function Node2(value, prev, next, list) {
  if (!(this instanceof Node2)) {
    return new Node2(value, prev, next, list);
  }
  this.list = list;
  this.value = value;
  if (prev) {
    prev.next = this;
    this.prev = prev;
  } else {
    this.prev = null;
  }
  if (next) {
    next.prev = this;
    this.next = next;
  } else {
    this.next = null;
  }
}
try {
  (init_iterator(), __toCommonJS(iterator_exports))(Yallist);
} catch (er) {
}
var yallist_default = module31.exports;

// node_modules/.pnpm/lru-cache@6.0.0/node_modules/lru-cache/index.js
function $$cjs_default$$16(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global17 !== "undefined" && global17 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global17 = globalThis;
var exports31 = {};
var module32 = {
  get exports() {
    return exports31;
  },
  set exports(value) {
    exports31 = value;
  }
};
var Yallist2 = $$cjs_default$$16(typeof yallist_exports !== "undefined" ? yallist_exports : {});
var MAX = Symbol("max");
var LENGTH = Symbol("length");
var LENGTH_CALCULATOR = Symbol("lengthCalculator");
var ALLOW_STALE = Symbol("allowStale");
var MAX_AGE = Symbol("maxAge");
var DISPOSE = Symbol("dispose");
var NO_DISPOSE_ON_SET = Symbol("noDisposeOnSet");
var LRU_LIST = Symbol("lruList");
var CACHE = Symbol("cache");
var UPDATE_AGE_ON_GET = Symbol("updateAgeOnGet");
var naiveLength = () => 1;
var LRUCache = class {
  constructor(options) {
    if (typeof options === "number")
      options = { max: options };
    if (!options)
      options = {};
    if (options.max && (typeof options.max !== "number" || options.max < 0))
      throw new TypeError("max must be a non-negative number");
    const max = this[MAX] = options.max || Infinity;
    const lc = options.length || naiveLength;
    this[LENGTH_CALCULATOR] = typeof lc !== "function" ? naiveLength : lc;
    this[ALLOW_STALE] = options.stale || false;
    if (options.maxAge && typeof options.maxAge !== "number")
      throw new TypeError("maxAge must be a number");
    this[MAX_AGE] = options.maxAge || 0;
    this[DISPOSE] = options.dispose;
    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;
    this.reset();
  }
  set max(mL) {
    if (typeof mL !== "number" || mL < 0)
      throw new TypeError("max must be a non-negative number");
    this[MAX] = mL || Infinity;
    trim(this);
  }
  get max() {
    return this[MAX];
  }
  set allowStale(allowStale) {
    this[ALLOW_STALE] = !!allowStale;
  }
  get allowStale() {
    return this[ALLOW_STALE];
  }
  set maxAge(mA) {
    if (typeof mA !== "number")
      throw new TypeError("maxAge must be a non-negative number");
    this[MAX_AGE] = mA;
    trim(this);
  }
  get maxAge() {
    return this[MAX_AGE];
  }
  set lengthCalculator(lC) {
    if (typeof lC !== "function")
      lC = naiveLength;
    if (lC !== this[LENGTH_CALCULATOR]) {
      this[LENGTH_CALCULATOR] = lC;
      this[LENGTH] = 0;
      this[LRU_LIST].forEach((hit) => {
        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
        this[LENGTH] += hit.length;
      });
    }
    trim(this);
  }
  get lengthCalculator() {
    return this[LENGTH_CALCULATOR];
  }
  get length() {
    return this[LENGTH];
  }
  get itemCount() {
    return this[LRU_LIST].length;
  }
  rforEach(fn, thisp) {
    thisp = thisp || this;
    for (let walker = this[LRU_LIST].tail; walker !== null; ) {
      const prev = walker.prev;
      forEachStep(this, fn, walker, thisp);
      walker = prev;
    }
  }
  forEach(fn, thisp) {
    thisp = thisp || this;
    for (let walker = this[LRU_LIST].head; walker !== null; ) {
      const next = walker.next;
      forEachStep(this, fn, walker, thisp);
      walker = next;
    }
  }
  keys() {
    return this[LRU_LIST].toArray().map((k) => k.key);
  }
  values() {
    return this[LRU_LIST].toArray().map((k) => k.value);
  }
  reset() {
    if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
      this[LRU_LIST].forEach((hit) => this[DISPOSE](hit.key, hit.value));
    }
    this[CACHE] = /* @__PURE__ */ new Map();
    this[LRU_LIST] = new Yallist2();
    this[LENGTH] = 0;
  }
  dump() {
    return this[LRU_LIST].map((hit) => isStale(this, hit) ? false : {
      k: hit.key,
      v: hit.value,
      e: hit.now + (hit.maxAge || 0)
    }).toArray().filter((h) => h);
  }
  dumpLru() {
    return this[LRU_LIST];
  }
  set(key, value, maxAge) {
    maxAge = maxAge || this[MAX_AGE];
    if (maxAge && typeof maxAge !== "number")
      throw new TypeError("maxAge must be a number");
    const now = maxAge ? Date.now() : 0;
    const len = this[LENGTH_CALCULATOR](value, key);
    if (this[CACHE].has(key)) {
      if (len > this[MAX]) {
        del(this, this[CACHE].get(key));
        return false;
      }
      const node = this[CACHE].get(key);
      const item = node.value;
      if (this[DISPOSE]) {
        if (!this[NO_DISPOSE_ON_SET])
          this[DISPOSE](key, item.value);
      }
      item.now = now;
      item.maxAge = maxAge;
      item.value = value;
      this[LENGTH] += len - item.length;
      item.length = len;
      this.get(key);
      trim(this);
      return true;
    }
    const hit = new Entry(key, value, len, now, maxAge);
    if (hit.length > this[MAX]) {
      if (this[DISPOSE])
        this[DISPOSE](key, value);
      return false;
    }
    this[LENGTH] += hit.length;
    this[LRU_LIST].unshift(hit);
    this[CACHE].set(key, this[LRU_LIST].head);
    trim(this);
    return true;
  }
  has(key) {
    if (!this[CACHE].has(key))
      return false;
    const hit = this[CACHE].get(key).value;
    return !isStale(this, hit);
  }
  get(key) {
    return get(this, key, true);
  }
  peek(key) {
    return get(this, key, false);
  }
  pop() {
    const node = this[LRU_LIST].tail;
    if (!node)
      return null;
    del(this, node);
    return node.value;
  }
  del(key) {
    del(this, this[CACHE].get(key));
  }
  load(arr) {
    this.reset();
    const now = Date.now();
    for (let l = arr.length - 1; l >= 0; l--) {
      const hit = arr[l];
      const expiresAt = hit.e || 0;
      if (expiresAt === 0)
        this.set(hit.k, hit.v);
      else {
        const maxAge = expiresAt - now;
        if (maxAge > 0) {
          this.set(hit.k, hit.v, maxAge);
        }
      }
    }
  }
  prune() {
    this[CACHE].forEach((value, key) => get(this, key, false));
  }
};
var get = (self2, key, doUse) => {
  const node = self2[CACHE].get(key);
  if (node) {
    const hit = node.value;
    if (isStale(self2, hit)) {
      del(self2, node);
      if (!self2[ALLOW_STALE])
        return void 0;
    } else {
      if (doUse) {
        if (self2[UPDATE_AGE_ON_GET])
          node.value.now = Date.now();
        self2[LRU_LIST].unshiftNode(node);
      }
    }
    return hit.value;
  }
};
var isStale = (self2, hit) => {
  if (!hit || !hit.maxAge && !self2[MAX_AGE])
    return false;
  const diff = Date.now() - hit.now;
  return hit.maxAge ? diff > hit.maxAge : self2[MAX_AGE] && diff > self2[MAX_AGE];
};
var trim = (self2) => {
  if (self2[LENGTH] > self2[MAX]) {
    for (let walker = self2[LRU_LIST].tail; self2[LENGTH] > self2[MAX] && walker !== null; ) {
      const prev = walker.prev;
      del(self2, walker);
      walker = prev;
    }
  }
};
var del = (self2, node) => {
  if (node) {
    const hit = node.value;
    if (self2[DISPOSE])
      self2[DISPOSE](hit.key, hit.value);
    self2[LENGTH] -= hit.length;
    self2[CACHE].delete(hit.key);
    self2[LRU_LIST].removeNode(node);
  }
};
var Entry = class {
  constructor(key, value, length, now, maxAge) {
    this.key = key;
    this.value = value;
    this.length = length;
    this.now = now;
    this.maxAge = maxAge || 0;
  }
};
var forEachStep = (self2, fn, node, thisp) => {
  let hit = node.value;
  if (isStale(self2, hit)) {
    del(self2, node);
    if (!self2[ALLOW_STALE])
      hit = void 0;
  }
  if (hit)
    fn.call(thisp, hit.value, hit.key, self2);
};
module32.exports = LRUCache;
var lru_cache_default = module32.exports;

// node_modules/.pnpm/hosted-git-info@4.1.0/node_modules/hosted-git-info/git-host.js
var git_host_exports = {};
__export(git_host_exports, {
  default: () => git_host_default
});
init_esm_shims();

// node_modules/.pnpm/hosted-git-info@4.1.0/node_modules/hosted-git-info/git-host-info.js
var git_host_info_exports = {};
__export(git_host_info_exports, {
  default: () => git_host_info_default
});
init_esm_shims();
var exports32 = {};
var module33 = {
  get exports() {
    return exports32;
  },
  set exports(value) {
    exports32 = value;
  }
};
var maybeJoin = (...args) => args.every((arg) => arg) ? args.join("") : "";
var maybeEncode = (arg) => arg ? encodeURIComponent(arg) : "";
var defaults = {
  sshtemplate: ({ domain: domain2, user, project, committish }) => `git@${domain2}:${user}/${project}.git${maybeJoin("#", committish)}`,
  sshurltemplate: ({ domain: domain2, user, project, committish }) => `git+ssh://git@${domain2}/${user}/${project}.git${maybeJoin("#", committish)}`,
  browsetemplate: ({ domain: domain2, user, project, committish, treepath }) => `https://${domain2}/${user}/${project}${maybeJoin("/", treepath, "/", maybeEncode(committish))}`,
  browsefiletemplate: ({ domain: domain2, user, project, committish, treepath, path: path7, fragment, hashformat }) => `https://${domain2}/${user}/${project}/${treepath}/${maybeEncode(committish || "master")}/${path7}${maybeJoin("#", hashformat(fragment || ""))}`,
  docstemplate: ({ domain: domain2, user, project, treepath, committish }) => `https://${domain2}/${user}/${project}${maybeJoin("/", treepath, "/", maybeEncode(committish))}#readme`,
  httpstemplate: ({ auth, domain: domain2, user, project, committish }) => `git+https://${maybeJoin(auth, "@")}${domain2}/${user}/${project}.git${maybeJoin("#", committish)}`,
  filetemplate: ({ domain: domain2, user, project, committish, path: path7 }) => `https://${domain2}/${user}/${project}/raw/${maybeEncode(committish) || "master"}/${path7}`,
  shortcuttemplate: ({ type, user, project, committish }) => `${type}:${user}/${project}${maybeJoin("#", committish)}`,
  pathtemplate: ({ user, project, committish }) => `${user}/${project}${maybeJoin("#", committish)}`,
  bugstemplate: ({ domain: domain2, user, project }) => `https://${domain2}/${user}/${project}/issues`,
  hashformat: formatHashFragment
};
var gitHosts = {};
gitHosts.github = Object.assign({}, defaults, {
  protocols: ["git:", "http:", "git+ssh:", "git+https:", "ssh:", "https:"],
  domain: "github.com",
  treepath: "tree",
  filetemplate: ({ auth, user, project, committish, path: path7 }) => `https://${maybeJoin(auth, "@")}raw.githubusercontent.com/${user}/${project}/${maybeEncode(committish) || "master"}/${path7}`,
  gittemplate: ({ auth, domain: domain2, user, project, committish }) => `git://${maybeJoin(auth, "@")}${domain2}/${user}/${project}.git${maybeJoin("#", committish)}`,
  tarballtemplate: ({ domain: domain2, user, project, committish }) => `https://codeload.${domain2}/${user}/${project}/tar.gz/${maybeEncode(committish) || "master"}`,
  extract: (url4) => {
    let [, user, project, type, committish] = url4.pathname.split("/", 5);
    if (type && type !== "tree") {
      return;
    }
    if (!type) {
      committish = url4.hash.slice(1);
    }
    if (project && project.endsWith(".git")) {
      project = project.slice(0, -4);
    }
    if (!user || !project) {
      return;
    }
    return { user, project, committish };
  }
});
gitHosts.bitbucket = Object.assign({}, defaults, {
  protocols: ["git+ssh:", "git+https:", "ssh:", "https:"],
  domain: "bitbucket.org",
  treepath: "src",
  tarballtemplate: ({ domain: domain2, user, project, committish }) => `https://${domain2}/${user}/${project}/get/${maybeEncode(committish) || "master"}.tar.gz`,
  extract: (url4) => {
    let [, user, project, aux] = url4.pathname.split("/", 4);
    if (["get"].includes(aux)) {
      return;
    }
    if (project && project.endsWith(".git")) {
      project = project.slice(0, -4);
    }
    if (!user || !project) {
      return;
    }
    return { user, project, committish: url4.hash.slice(1) };
  }
});
gitHosts.gitlab = Object.assign({}, defaults, {
  protocols: ["git+ssh:", "git+https:", "ssh:", "https:"],
  domain: "gitlab.com",
  treepath: "tree",
  httpstemplate: ({ auth, domain: domain2, user, project, committish }) => `git+https://${maybeJoin(auth, "@")}${domain2}/${user}/${project}.git${maybeJoin("#", committish)}`,
  tarballtemplate: ({ domain: domain2, user, project, committish }) => `https://${domain2}/${user}/${project}/repository/archive.tar.gz?ref=${maybeEncode(committish) || "master"}`,
  extract: (url4) => {
    const path7 = url4.pathname.slice(1);
    if (path7.includes("/-/") || path7.includes("/archive.tar.gz")) {
      return;
    }
    const segments = path7.split("/");
    let project = segments.pop();
    if (project.endsWith(".git")) {
      project = project.slice(0, -4);
    }
    const user = segments.join("/");
    if (!user || !project) {
      return;
    }
    return { user, project, committish: url4.hash.slice(1) };
  }
});
gitHosts.gist = Object.assign({}, defaults, {
  protocols: ["git:", "git+ssh:", "git+https:", "ssh:", "https:"],
  domain: "gist.github.com",
  sshtemplate: ({ domain: domain2, project, committish }) => `git@${domain2}:${project}.git${maybeJoin("#", committish)}`,
  sshurltemplate: ({ domain: domain2, project, committish }) => `git+ssh://git@${domain2}/${project}.git${maybeJoin("#", committish)}`,
  browsetemplate: ({ domain: domain2, project, committish }) => `https://${domain2}/${project}${maybeJoin("/", maybeEncode(committish))}`,
  browsefiletemplate: ({ domain: domain2, project, committish, path: path7, hashformat }) => `https://${domain2}/${project}${maybeJoin("/", maybeEncode(committish))}${maybeJoin("#", hashformat(path7))}`,
  docstemplate: ({ domain: domain2, project, committish }) => `https://${domain2}/${project}${maybeJoin("/", maybeEncode(committish))}`,
  httpstemplate: ({ domain: domain2, project, committish }) => `git+https://${domain2}/${project}.git${maybeJoin("#", committish)}`,
  filetemplate: ({ user, project, committish, path: path7 }) => `https://gist.githubusercontent.com/${user}/${project}/raw${maybeJoin("/", maybeEncode(committish))}/${path7}`,
  shortcuttemplate: ({ type, project, committish }) => `${type}:${project}${maybeJoin("#", committish)}`,
  pathtemplate: ({ project, committish }) => `${project}${maybeJoin("#", committish)}`,
  bugstemplate: ({ domain: domain2, project }) => `https://${domain2}/${project}`,
  gittemplate: ({ domain: domain2, project, committish }) => `git://${domain2}/${project}.git${maybeJoin("#", committish)}`,
  tarballtemplate: ({ project, committish }) => `https://codeload.github.com/gist/${project}/tar.gz/${maybeEncode(committish) || "master"}`,
  extract: (url4) => {
    let [, user, project, aux] = url4.pathname.split("/", 4);
    if (aux === "raw") {
      return;
    }
    if (!project) {
      if (!user) {
        return;
      }
      project = user;
      user = null;
    }
    if (project.endsWith(".git")) {
      project = project.slice(0, -4);
    }
    return { user, project, committish: url4.hash.slice(1) };
  },
  hashformat: function(fragment) {
    return fragment && "file-" + formatHashFragment(fragment);
  }
});
gitHosts.sourcehut = Object.assign({}, defaults, {
  protocols: ["git+ssh:", "https:"],
  domain: "git.sr.ht",
  treepath: "tree",
  browsefiletemplate: ({ domain: domain2, user, project, committish, treepath, path: path7, fragment, hashformat }) => `https://${domain2}/${user}/${project}/${treepath}/${maybeEncode(committish || "main")}/${path7}${maybeJoin("#", hashformat(fragment || ""))}`,
  filetemplate: ({ domain: domain2, user, project, committish, path: path7 }) => `https://${domain2}/${user}/${project}/blob/${maybeEncode(committish) || "main"}/${path7}`,
  httpstemplate: ({ domain: domain2, user, project, committish }) => `https://${domain2}/${user}/${project}.git${maybeJoin("#", committish)}`,
  tarballtemplate: ({ domain: domain2, user, project, committish }) => `https://${domain2}/${user}/${project}/archive/${maybeEncode(committish) || "main"}.tar.gz`,
  bugstemplate: ({ domain: domain2, user, project }) => `https://todo.sr.ht/${user}/${project}`,
  docstemplate: ({ domain: domain2, user, project, treepath, committish }) => `https://${domain2}/${user}/${project}${maybeJoin("/", treepath, "/", maybeEncode(committish))}#readme`,
  extract: (url4) => {
    let [, user, project, aux] = url4.pathname.split("/", 4);
    if (["archive"].includes(aux)) {
      return;
    }
    if (project && project.endsWith(".git")) {
      project = project.slice(0, -4);
    }
    if (!user || !project) {
      return;
    }
    return { user, project, committish: url4.hash.slice(1) };
  }
});
var names = Object.keys(gitHosts);
gitHosts.byShortcut = {};
gitHosts.byDomain = {};
for (const name of names) {
  gitHosts.byShortcut[`${name}:`] = name;
  gitHosts.byDomain[gitHosts[name].domain] = name;
}
function formatHashFragment(fragment) {
  return fragment.toLowerCase().replace(/^\W+|\/|\W+$/g, "").replace(/\W+/g, "-");
}
module33.exports = gitHosts;
var git_host_info_default = module33.exports;

// node_modules/.pnpm/hosted-git-info@4.1.0/node_modules/hosted-git-info/git-host.js
function $$cjs_default$$17(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global18 !== "undefined" && global18 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global18 = globalThis;
var exports33 = {};
var module34 = {
  get exports() {
    return exports33;
  },
  set exports(value) {
    exports33 = value;
  }
};
var gitHosts2 = $$cjs_default$$17(typeof git_host_info_exports !== "undefined" ? git_host_info_exports : {});
var GitHost = class {
  constructor(type, user, auth, project, committish, defaultRepresentation, opts2 = {}) {
    Object.assign(this, gitHosts2[type]);
    this.type = type;
    this.user = user;
    this.auth = auth;
    this.project = project;
    this.committish = committish;
    this.default = defaultRepresentation;
    this.opts = opts2;
  }
  hash() {
    return this.committish ? `#${this.committish}` : "";
  }
  ssh(opts2) {
    return this._fill(this.sshtemplate, opts2);
  }
  _fill(template3, opts2) {
    if (typeof template3 === "function") {
      const options = __spreadValues(__spreadValues(__spreadValues({}, this), this.opts), opts2);
      if (!options.path) {
        options.path = "";
      }
      if (options.path.startsWith("/")) {
        options.path = options.path.slice(1);
      }
      if (options.noCommittish) {
        options.committish = null;
      }
      const result = template3(options);
      return options.noGitPlus && result.startsWith("git+") ? result.slice(4) : result;
    }
    return null;
  }
  sshurl(opts2) {
    return this._fill(this.sshurltemplate, opts2);
  }
  browse(path7, fragment, opts2) {
    if (typeof path7 !== "string") {
      return this._fill(this.browsetemplate, path7);
    }
    if (typeof fragment !== "string") {
      opts2 = fragment;
      fragment = null;
    }
    return this._fill(this.browsefiletemplate, __spreadProps(__spreadValues({}, opts2), { fragment, path: path7 }));
  }
  docs(opts2) {
    return this._fill(this.docstemplate, opts2);
  }
  bugs(opts2) {
    return this._fill(this.bugstemplate, opts2);
  }
  https(opts2) {
    return this._fill(this.httpstemplate, opts2);
  }
  git(opts2) {
    return this._fill(this.gittemplate, opts2);
  }
  shortcut(opts2) {
    return this._fill(this.shortcuttemplate, opts2);
  }
  path(opts2) {
    return this._fill(this.pathtemplate, opts2);
  }
  tarball(opts2) {
    return this._fill(this.tarballtemplate, __spreadProps(__spreadValues({}, opts2), { noCommittish: false }));
  }
  file(path7, opts2) {
    return this._fill(this.filetemplate, __spreadProps(__spreadValues({}, opts2), { path: path7 }));
  }
  getDefaultRepresentation() {
    return this.default;
  }
  toString(opts2) {
    if (this.default && typeof this[this.default] === "function") {
      return this[this.default](opts2);
    }
    return this.sshurl(opts2);
  }
};
module34.exports = GitHost;
var git_host_default = module34.exports;

// node_modules/.pnpm/hosted-git-info@4.1.0/node_modules/hosted-git-info/index.js
import * as $cjs$url from "url";
function $$cjs_default$$18(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global19 !== "undefined" && global19 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global19 = globalThis;
var exports34 = {};
var module35 = {
  get exports() {
    return exports34;
  },
  set exports(value) {
    exports34 = value;
  }
};
var url2 = $$cjs_default$$18(typeof $cjs$url !== "undefined" ? $cjs$url : {});
var gitHosts3 = $$cjs_default$$18(typeof git_host_info_exports !== "undefined" ? git_host_info_exports : {});
var GitHost2 = module35.exports = $$cjs_default$$18(typeof git_host_exports !== "undefined" ? git_host_exports : {});
var LRU = $$cjs_default$$18(typeof lru_cache_exports !== "undefined" ? lru_cache_exports : {});
var cache = new LRU({ max: 1e3 });
var protocolToRepresentationMap = {
  "git+ssh:": "sshurl",
  "git+https:": "https",
  "ssh:": "sshurl",
  "git:": "git"
};
function protocolToRepresentation(protocol) {
  return protocolToRepresentationMap[protocol] || protocol.slice(0, -1);
}
var authProtocols = {
  "git:": true,
  "https:": true,
  "git+https:": true,
  "http:": true,
  "git+http:": true
};
var knownProtocols = Object.keys(gitHosts3.byShortcut).concat(["http:", "https:", "git:", "git+ssh:", "git+https:", "ssh:"]);
module35.exports.fromUrl = function(giturl, opts2) {
  if (typeof giturl !== "string") {
    return;
  }
  const key = giturl + JSON.stringify(opts2 || {});
  if (!cache.has(key)) {
    cache.set(key, fromUrl(giturl, opts2));
  }
  return cache.get(key);
};
function fromUrl(giturl, opts2) {
  if (!giturl) {
    return;
  }
  const url4 = isGitHubShorthand(giturl) ? "github:" + giturl : correctProtocol(giturl);
  const parsed = parseGitUrl(url4);
  if (!parsed) {
    return parsed;
  }
  const gitHostShortcut = gitHosts3.byShortcut[parsed.protocol];
  const gitHostDomain = gitHosts3.byDomain[parsed.hostname.startsWith("www.") ? parsed.hostname.slice(4) : parsed.hostname];
  const gitHostName = gitHostShortcut || gitHostDomain;
  if (!gitHostName) {
    return;
  }
  const gitHostInfo = gitHosts3[gitHostShortcut || gitHostDomain];
  let auth = null;
  if (authProtocols[parsed.protocol] && (parsed.username || parsed.password)) {
    auth = `${parsed.username}${parsed.password ? ":" + parsed.password : ""}`;
  }
  let committish = null;
  let user = null;
  let project = null;
  let defaultRepresentation = null;
  try {
    if (gitHostShortcut) {
      let pathname = parsed.pathname.startsWith("/") ? parsed.pathname.slice(1) : parsed.pathname;
      const firstAt = pathname.indexOf("@");
      if (firstAt > -1) {
        pathname = pathname.slice(firstAt + 1);
      }
      const lastSlash = pathname.lastIndexOf("/");
      if (lastSlash > -1) {
        user = decodeURIComponent(pathname.slice(0, lastSlash));
        if (!user) {
          user = null;
        }
        project = decodeURIComponent(pathname.slice(lastSlash + 1));
      } else {
        project = decodeURIComponent(pathname);
      }
      if (project.endsWith(".git")) {
        project = project.slice(0, -4);
      }
      if (parsed.hash) {
        committish = decodeURIComponent(parsed.hash.slice(1));
      }
      defaultRepresentation = "shortcut";
    } else {
      if (!gitHostInfo.protocols.includes(parsed.protocol)) {
        return;
      }
      const segments = gitHostInfo.extract(parsed);
      if (!segments) {
        return;
      }
      user = segments.user && decodeURIComponent(segments.user);
      project = decodeURIComponent(segments.project);
      committish = decodeURIComponent(segments.committish);
      defaultRepresentation = protocolToRepresentation(parsed.protocol);
    }
  } catch (err) {
    if (err instanceof URIError) {
      return;
    } else {
      throw err;
    }
  }
  return new GitHost2(gitHostName, user, auth, project, committish, defaultRepresentation, opts2);
}
var correctProtocol = (arg) => {
  const firstColon = arg.indexOf(":");
  const proto2 = arg.slice(0, firstColon + 1);
  if (knownProtocols.includes(proto2)) {
    return arg;
  }
  const firstAt = arg.indexOf("@");
  if (firstAt > -1) {
    if (firstAt > firstColon) {
      return `git+ssh://${arg}`;
    } else {
      return arg;
    }
  }
  const doubleSlash = arg.indexOf("//");
  if (doubleSlash === firstColon + 1) {
    return arg;
  }
  return arg.slice(0, firstColon + 1) + "//" + arg.slice(firstColon + 1);
};
var isGitHubShorthand = (arg) => {
  const firstHash = arg.indexOf("#");
  const firstSlash = arg.indexOf("/");
  const secondSlash = arg.indexOf("/", firstSlash + 1);
  const firstColon = arg.indexOf(":");
  const firstSpace = /\s/.exec(arg);
  const firstAt = arg.indexOf("@");
  const spaceOnlyAfterHash = !firstSpace || firstHash > -1 && firstSpace.index > firstHash;
  const atOnlyAfterHash = firstAt === -1 || firstHash > -1 && firstAt > firstHash;
  const colonOnlyAfterHash = firstColon === -1 || firstHash > -1 && firstColon > firstHash;
  const secondSlashOnlyAfterHash = secondSlash === -1 || firstHash > -1 && secondSlash > firstHash;
  const hasSlash = firstSlash > 0;
  const doesNotEndWithSlash = firstHash > -1 ? arg[firstHash - 1] !== "/" : !arg.endsWith("/");
  const doesNotStartWithDot = !arg.startsWith(".");
  return spaceOnlyAfterHash && hasSlash && doesNotEndWithSlash && doesNotStartWithDot && atOnlyAfterHash && colonOnlyAfterHash && secondSlashOnlyAfterHash;
};
var correctUrl = (giturl) => {
  const firstAt = giturl.indexOf("@");
  const lastHash = giturl.lastIndexOf("#");
  let firstColon = giturl.indexOf(":");
  let lastColon = giturl.lastIndexOf(":", lastHash > -1 ? lastHash : Infinity);
  let corrected;
  if (lastColon > firstAt) {
    corrected = giturl.slice(0, lastColon) + "/" + giturl.slice(lastColon + 1);
    firstColon = corrected.indexOf(":");
    lastColon = corrected.lastIndexOf(":");
  }
  if (firstColon === -1 && giturl.indexOf("//") === -1) {
    corrected = `git+ssh://${corrected}`;
  }
  return corrected;
};
var parseGitUrl = (giturl) => {
  let result;
  try {
    result = new url2.URL(giturl);
  } catch (err) {
  }
  if (result) {
    return result;
  }
  const correctedUrl = correctUrl(giturl);
  try {
    result = new url2.URL(correctedUrl);
  } catch (err) {
  }
  return result;
};
var __export010;
if (Object.isExtensible(module35.exports) && Object.keys(module35.exports).length === 1) {
  __export010 = module35.exports["fromUrl"];
}
var hosted_git_info_default = module35.exports;

// node_modules/.pnpm/validate-npm-package-license@3.0.4/node_modules/validate-npm-package-license/index.js
var validate_npm_package_license_exports = {};
__export(validate_npm_package_license_exports, {
  default: () => validate_npm_package_license_default
});
init_esm_shims();

// node_modules/.pnpm/spdx-correct@3.1.1/node_modules/spdx-correct/index.js
var spdx_correct_exports = {};
__export(spdx_correct_exports, {
  default: () => spdx_correct_default
});
init_esm_shims();

// node_modules/.pnpm/spdx-license-ids@3.0.11/node_modules/spdx-license-ids/index.json
var spdx_license_ids_exports = {};
__export(spdx_license_ids_exports, {
  default: () => spdx_license_ids_default
});
var spdx_license_ids_default = [
  "0BSD",
  "AAL",
  "ADSL",
  "AFL-1.1",
  "AFL-1.2",
  "AFL-2.0",
  "AFL-2.1",
  "AFL-3.0",
  "AGPL-1.0-only",
  "AGPL-1.0-or-later",
  "AGPL-3.0-only",
  "AGPL-3.0-or-later",
  "AMDPLPA",
  "AML",
  "AMPAS",
  "ANTLR-PD",
  "ANTLR-PD-fallback",
  "APAFML",
  "APL-1.0",
  "APSL-1.0",
  "APSL-1.1",
  "APSL-1.2",
  "APSL-2.0",
  "Abstyles",
  "Adobe-2006",
  "Adobe-Glyph",
  "Afmparse",
  "Aladdin",
  "Apache-1.0",
  "Apache-1.1",
  "Apache-2.0",
  "Artistic-1.0",
  "Artistic-1.0-Perl",
  "Artistic-1.0-cl8",
  "Artistic-2.0",
  "BSD-1-Clause",
  "BSD-2-Clause",
  "BSD-2-Clause-Patent",
  "BSD-2-Clause-Views",
  "BSD-3-Clause",
  "BSD-3-Clause-Attribution",
  "BSD-3-Clause-Clear",
  "BSD-3-Clause-LBNL",
  "BSD-3-Clause-Modification",
  "BSD-3-Clause-No-Military-License",
  "BSD-3-Clause-No-Nuclear-License",
  "BSD-3-Clause-No-Nuclear-License-2014",
  "BSD-3-Clause-No-Nuclear-Warranty",
  "BSD-3-Clause-Open-MPI",
  "BSD-4-Clause",
  "BSD-4-Clause-Shortened",
  "BSD-4-Clause-UC",
  "BSD-Protection",
  "BSD-Source-Code",
  "BSL-1.0",
  "BUSL-1.1",
  "Bahyph",
  "Barr",
  "Beerware",
  "BitTorrent-1.0",
  "BitTorrent-1.1",
  "BlueOak-1.0.0",
  "Borceux",
  "C-UDA-1.0",
  "CAL-1.0",
  "CAL-1.0-Combined-Work-Exception",
  "CATOSL-1.1",
  "CC-BY-1.0",
  "CC-BY-2.0",
  "CC-BY-2.5",
  "CC-BY-2.5-AU",
  "CC-BY-3.0",
  "CC-BY-3.0-AT",
  "CC-BY-3.0-DE",
  "CC-BY-3.0-NL",
  "CC-BY-3.0-US",
  "CC-BY-4.0",
  "CC-BY-NC-1.0",
  "CC-BY-NC-2.0",
  "CC-BY-NC-2.5",
  "CC-BY-NC-3.0",
  "CC-BY-NC-3.0-DE",
  "CC-BY-NC-4.0",
  "CC-BY-NC-ND-1.0",
  "CC-BY-NC-ND-2.0",
  "CC-BY-NC-ND-2.5",
  "CC-BY-NC-ND-3.0",
  "CC-BY-NC-ND-3.0-DE",
  "CC-BY-NC-ND-3.0-IGO",
  "CC-BY-NC-ND-4.0",
  "CC-BY-NC-SA-1.0",
  "CC-BY-NC-SA-2.0",
  "CC-BY-NC-SA-2.0-FR",
  "CC-BY-NC-SA-2.0-UK",
  "CC-BY-NC-SA-2.5",
  "CC-BY-NC-SA-3.0",
  "CC-BY-NC-SA-3.0-DE",
  "CC-BY-NC-SA-3.0-IGO",
  "CC-BY-NC-SA-4.0",
  "CC-BY-ND-1.0",
  "CC-BY-ND-2.0",
  "CC-BY-ND-2.5",
  "CC-BY-ND-3.0",
  "CC-BY-ND-3.0-DE",
  "CC-BY-ND-4.0",
  "CC-BY-SA-1.0",
  "CC-BY-SA-2.0",
  "CC-BY-SA-2.0-UK",
  "CC-BY-SA-2.1-JP",
  "CC-BY-SA-2.5",
  "CC-BY-SA-3.0",
  "CC-BY-SA-3.0-AT",
  "CC-BY-SA-3.0-DE",
  "CC-BY-SA-4.0",
  "CC-PDDC",
  "CC0-1.0",
  "CDDL-1.0",
  "CDDL-1.1",
  "CDL-1.0",
  "CDLA-Permissive-1.0",
  "CDLA-Permissive-2.0",
  "CDLA-Sharing-1.0",
  "CECILL-1.0",
  "CECILL-1.1",
  "CECILL-2.0",
  "CECILL-2.1",
  "CECILL-B",
  "CECILL-C",
  "CERN-OHL-1.1",
  "CERN-OHL-1.2",
  "CERN-OHL-P-2.0",
  "CERN-OHL-S-2.0",
  "CERN-OHL-W-2.0",
  "CNRI-Jython",
  "CNRI-Python",
  "CNRI-Python-GPL-Compatible",
  "COIL-1.0",
  "CPAL-1.0",
  "CPL-1.0",
  "CPOL-1.02",
  "CUA-OPL-1.0",
  "Caldera",
  "ClArtistic",
  "Community-Spec-1.0",
  "Condor-1.1",
  "Crossword",
  "CrystalStacker",
  "Cube",
  "D-FSL-1.0",
  "DOC",
  "DRL-1.0",
  "DSDP",
  "Dotseqn",
  "ECL-1.0",
  "ECL-2.0",
  "EFL-1.0",
  "EFL-2.0",
  "EPICS",
  "EPL-1.0",
  "EPL-2.0",
  "EUDatagrid",
  "EUPL-1.0",
  "EUPL-1.1",
  "EUPL-1.2",
  "Entessa",
  "ErlPL-1.1",
  "Eurosym",
  "FDK-AAC",
  "FSFAP",
  "FSFUL",
  "FSFULLR",
  "FTL",
  "Fair",
  "Frameworx-1.0",
  "FreeBSD-DOC",
  "FreeImage",
  "GD",
  "GFDL-1.1-invariants-only",
  "GFDL-1.1-invariants-or-later",
  "GFDL-1.1-no-invariants-only",
  "GFDL-1.1-no-invariants-or-later",
  "GFDL-1.1-only",
  "GFDL-1.1-or-later",
  "GFDL-1.2-invariants-only",
  "GFDL-1.2-invariants-or-later",
  "GFDL-1.2-no-invariants-only",
  "GFDL-1.2-no-invariants-or-later",
  "GFDL-1.2-only",
  "GFDL-1.2-or-later",
  "GFDL-1.3-invariants-only",
  "GFDL-1.3-invariants-or-later",
  "GFDL-1.3-no-invariants-only",
  "GFDL-1.3-no-invariants-or-later",
  "GFDL-1.3-only",
  "GFDL-1.3-or-later",
  "GL2PS",
  "GLWTPL",
  "GPL-1.0-only",
  "GPL-1.0-or-later",
  "GPL-2.0-only",
  "GPL-2.0-or-later",
  "GPL-3.0-only",
  "GPL-3.0-or-later",
  "Giftware",
  "Glide",
  "Glulxe",
  "HPND",
  "HPND-sell-variant",
  "HTMLTIDY",
  "HaskellReport",
  "Hippocratic-2.1",
  "IBM-pibs",
  "ICU",
  "IJG",
  "IPA",
  "IPL-1.0",
  "ISC",
  "ImageMagick",
  "Imlib2",
  "Info-ZIP",
  "Intel",
  "Intel-ACPI",
  "Interbase-1.0",
  "JPNIC",
  "JSON",
  "JasPer-2.0",
  "LAL-1.2",
  "LAL-1.3",
  "LGPL-2.0-only",
  "LGPL-2.0-or-later",
  "LGPL-2.1-only",
  "LGPL-2.1-or-later",
  "LGPL-3.0-only",
  "LGPL-3.0-or-later",
  "LGPLLR",
  "LPL-1.0",
  "LPL-1.02",
  "LPPL-1.0",
  "LPPL-1.1",
  "LPPL-1.2",
  "LPPL-1.3a",
  "LPPL-1.3c",
  "Latex2e",
  "Leptonica",
  "LiLiQ-P-1.1",
  "LiLiQ-R-1.1",
  "LiLiQ-Rplus-1.1",
  "Libpng",
  "Linux-OpenIB",
  "Linux-man-pages-copyleft",
  "MIT",
  "MIT-0",
  "MIT-CMU",
  "MIT-Modern-Variant",
  "MIT-advertising",
  "MIT-enna",
  "MIT-feh",
  "MIT-open-group",
  "MITNFA",
  "MPL-1.0",
  "MPL-1.1",
  "MPL-2.0",
  "MPL-2.0-no-copyleft-exception",
  "MS-PL",
  "MS-RL",
  "MTLL",
  "MakeIndex",
  "MirOS",
  "Motosoto",
  "MulanPSL-1.0",
  "MulanPSL-2.0",
  "Multics",
  "Mup",
  "NAIST-2003",
  "NASA-1.3",
  "NBPL-1.0",
  "NCGL-UK-2.0",
  "NCSA",
  "NGPL",
  "NIST-PD",
  "NIST-PD-fallback",
  "NLOD-1.0",
  "NLOD-2.0",
  "NLPL",
  "NOSL",
  "NPL-1.0",
  "NPL-1.1",
  "NPOSL-3.0",
  "NRL",
  "NTP",
  "NTP-0",
  "Naumen",
  "Net-SNMP",
  "NetCDF",
  "Newsletr",
  "Nokia",
  "Noweb",
  "O-UDA-1.0",
  "OCCT-PL",
  "OCLC-2.0",
  "ODC-By-1.0",
  "ODbL-1.0",
  "OFL-1.0",
  "OFL-1.0-RFN",
  "OFL-1.0-no-RFN",
  "OFL-1.1",
  "OFL-1.1-RFN",
  "OFL-1.1-no-RFN",
  "OGC-1.0",
  "OGDL-Taiwan-1.0",
  "OGL-Canada-2.0",
  "OGL-UK-1.0",
  "OGL-UK-2.0",
  "OGL-UK-3.0",
  "OGTSL",
  "OLDAP-1.1",
  "OLDAP-1.2",
  "OLDAP-1.3",
  "OLDAP-1.4",
  "OLDAP-2.0",
  "OLDAP-2.0.1",
  "OLDAP-2.1",
  "OLDAP-2.2",
  "OLDAP-2.2.1",
  "OLDAP-2.2.2",
  "OLDAP-2.3",
  "OLDAP-2.4",
  "OLDAP-2.5",
  "OLDAP-2.6",
  "OLDAP-2.7",
  "OLDAP-2.8",
  "OML",
  "OPL-1.0",
  "OPUBL-1.0",
  "OSET-PL-2.1",
  "OSL-1.0",
  "OSL-1.1",
  "OSL-2.0",
  "OSL-2.1",
  "OSL-3.0",
  "OpenSSL",
  "PDDL-1.0",
  "PHP-3.0",
  "PHP-3.01",
  "PSF-2.0",
  "Parity-6.0.0",
  "Parity-7.0.0",
  "Plexus",
  "PolyForm-Noncommercial-1.0.0",
  "PolyForm-Small-Business-1.0.0",
  "PostgreSQL",
  "Python-2.0",
  "QPL-1.0",
  "Qhull",
  "RHeCos-1.1",
  "RPL-1.1",
  "RPL-1.5",
  "RPSL-1.0",
  "RSA-MD",
  "RSCPL",
  "Rdisc",
  "Ruby",
  "SAX-PD",
  "SCEA",
  "SGI-B-1.0",
  "SGI-B-1.1",
  "SGI-B-2.0",
  "SHL-0.5",
  "SHL-0.51",
  "SISSL",
  "SISSL-1.2",
  "SMLNJ",
  "SMPPL",
  "SNIA",
  "SPL-1.0",
  "SSH-OpenSSH",
  "SSH-short",
  "SSPL-1.0",
  "SWL",
  "Saxpath",
  "Sendmail",
  "Sendmail-8.23",
  "SimPL-2.0",
  "Sleepycat",
  "Spencer-86",
  "Spencer-94",
  "Spencer-99",
  "SugarCRM-1.1.3",
  "TAPR-OHL-1.0",
  "TCL",
  "TCP-wrappers",
  "TMate",
  "TORQUE-1.1",
  "TOSL",
  "TU-Berlin-1.0",
  "TU-Berlin-2.0",
  "UCL-1.0",
  "UPL-1.0",
  "Unicode-DFS-2015",
  "Unicode-DFS-2016",
  "Unicode-TOU",
  "Unlicense",
  "VOSTROM",
  "VSL-1.0",
  "Vim",
  "W3C",
  "W3C-19980720",
  "W3C-20150513",
  "WTFPL",
  "Watcom-1.0",
  "Wsuipa",
  "X11",
  "XFree86-1.1",
  "XSkat",
  "Xerox",
  "Xnet",
  "YPL-1.0",
  "YPL-1.1",
  "ZPL-1.1",
  "ZPL-2.0",
  "ZPL-2.1",
  "Zed",
  "Zend-2.0",
  "Zimbra-1.3",
  "Zimbra-1.4",
  "Zlib",
  "blessing",
  "bzip2-1.0.5",
  "bzip2-1.0.6",
  "copyleft-next-0.3.0",
  "copyleft-next-0.3.1",
  "curl",
  "diffmark",
  "dvipdfm",
  "eGenix",
  "etalab-2.0",
  "gSOAP-1.3b",
  "gnuplot",
  "iMatix",
  "libpng-2.0",
  "libselinux-1.0",
  "libtiff",
  "mpich2",
  "psfrag",
  "psutils",
  "xinetd",
  "xpp",
  "zlib-acknowledgement"
];

// node_modules/.pnpm/spdx-expression-parse@3.0.1/node_modules/spdx-expression-parse/index.js
var spdx_expression_parse_exports = {};
__export(spdx_expression_parse_exports, {
  default: () => spdx_expression_parse_default
});
init_esm_shims();

// node_modules/.pnpm/spdx-expression-parse@3.0.1/node_modules/spdx-expression-parse/parse.js
var parse_exports = {};
__export(parse_exports, {
  default: () => parse_default
});
init_esm_shims();
var exports35 = {};
var module36 = {
  get exports() {
    return exports35;
  },
  set exports(value) {
    exports35 = value;
  }
};
module36.exports = function(tokens) {
  var index = 0;
  function hasMore() {
    return index < tokens.length;
  }
  function token() {
    return hasMore() ? tokens[index] : null;
  }
  function next() {
    if (!hasMore()) {
      throw new Error();
    }
    index++;
  }
  function parseOperator(operator) {
    var t4 = token();
    if (t4 && t4.type === "OPERATOR" && operator === t4.string) {
      next();
      return t4.string;
    }
  }
  function parseWith() {
    if (parseOperator("WITH")) {
      var t4 = token();
      if (t4 && t4.type === "EXCEPTION") {
        next();
        return t4.string;
      }
      throw new Error("Expected exception after `WITH`");
    }
  }
  function parseLicenseRef() {
    var begin = index;
    var string = "";
    var t4 = token();
    if (t4.type === "DOCUMENTREF") {
      next();
      string += "DocumentRef-" + t4.string + ":";
      if (!parseOperator(":")) {
        throw new Error("Expected `:` after `DocumentRef-...`");
      }
    }
    t4 = token();
    if (t4.type === "LICENSEREF") {
      next();
      string += "LicenseRef-" + t4.string;
      return { license: string };
    }
    index = begin;
  }
  function parseLicense() {
    var t4 = token();
    if (t4 && t4.type === "LICENSE") {
      next();
      var node2 = { license: t4.string };
      if (parseOperator("+")) {
        node2.plus = true;
      }
      var exception = parseWith();
      if (exception) {
        node2.exception = exception;
      }
      return node2;
    }
  }
  function parseParenthesizedExpression() {
    var left = parseOperator("(");
    if (!left) {
      return;
    }
    var expr = parseExpression();
    if (!parseOperator(")")) {
      throw new Error("Expected `)`");
    }
    return expr;
  }
  function parseAtom() {
    return parseParenthesizedExpression() || parseLicenseRef() || parseLicense();
  }
  function makeBinaryOpParser(operator, nextParser) {
    return function parseBinaryOp() {
      var left = nextParser();
      if (!left) {
        return;
      }
      if (!parseOperator(operator)) {
        return left;
      }
      var right = parseBinaryOp();
      if (!right) {
        throw new Error("Expected expression");
      }
      return {
        left,
        conjunction: operator.toLowerCase(),
        right
      };
    };
  }
  var parseAnd = makeBinaryOpParser("AND", parseAtom);
  var parseExpression = makeBinaryOpParser("OR", parseAnd);
  var node = parseExpression();
  if (!node || hasMore()) {
    throw new Error("Syntax error");
  }
  return node;
};
var parse_default = module36.exports;

// node_modules/.pnpm/spdx-expression-parse@3.0.1/node_modules/spdx-expression-parse/scan.js
var scan_exports = {};
__export(scan_exports, {
  default: () => scan_default
});
init_esm_shims();

// node_modules/.pnpm/spdx-exceptions@2.3.0/node_modules/spdx-exceptions/index.json
var spdx_exceptions_exports = {};
__export(spdx_exceptions_exports, {
  default: () => spdx_exceptions_default
});
var spdx_exceptions_default = [
  "389-exception",
  "Autoconf-exception-2.0",
  "Autoconf-exception-3.0",
  "Bison-exception-2.2",
  "Bootloader-exception",
  "Classpath-exception-2.0",
  "CLISP-exception-2.0",
  "DigiRule-FOSS-exception",
  "eCos-exception-2.0",
  "Fawkes-Runtime-exception",
  "FLTK-exception",
  "Font-exception-2.0",
  "freertos-exception-2.0",
  "GCC-exception-2.0",
  "GCC-exception-3.1",
  "gnu-javamail-exception",
  "GPL-3.0-linking-exception",
  "GPL-3.0-linking-source-exception",
  "GPL-CC-1.0",
  "i2p-gpl-java-exception",
  "Libtool-exception",
  "Linux-syscall-note",
  "LLVM-exception",
  "LZMA-exception",
  "mif-exception",
  "Nokia-Qt-exception-1.1",
  "OCaml-LGPL-linking-exception",
  "OCCT-exception-1.0",
  "OpenJDK-assembly-exception-1.0",
  "openvpn-openssl-exception",
  "PS-or-PDF-font-exception-20170817",
  "Qt-GPL-exception-1.0",
  "Qt-LGPL-exception-1.1",
  "Qwt-exception-1.0",
  "Swift-exception",
  "u-boot-exception-2.0",
  "Universal-FOSS-exception-1.0",
  "WxWindows-exception-3.1"
];

// node_modules/.pnpm/spdx-license-ids@3.0.11/node_modules/spdx-license-ids/deprecated.json
var deprecated_exports = {};
__export(deprecated_exports, {
  default: () => deprecated_default
});
var deprecated_default = [
  "AGPL-1.0",
  "AGPL-3.0",
  "BSD-2-Clause-FreeBSD",
  "BSD-2-Clause-NetBSD",
  "GFDL-1.1",
  "GFDL-1.2",
  "GFDL-1.3",
  "GPL-1.0",
  "GPL-2.0",
  "GPL-2.0-with-GCC-exception",
  "GPL-2.0-with-autoconf-exception",
  "GPL-2.0-with-bison-exception",
  "GPL-2.0-with-classpath-exception",
  "GPL-2.0-with-font-exception",
  "GPL-3.0",
  "GPL-3.0-with-GCC-exception",
  "GPL-3.0-with-autoconf-exception",
  "LGPL-2.0",
  "LGPL-2.1",
  "LGPL-3.0",
  "Nunit",
  "StandardML-NJ",
  "eCos-2.0",
  "wxWindows"
];

// node_modules/.pnpm/spdx-expression-parse@3.0.1/node_modules/spdx-expression-parse/scan.js
function $$cjs_default$$19(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global20 !== "undefined" && global20 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global20 = globalThis;
var exports36 = {};
var module37 = {
  get exports() {
    return exports36;
  },
  set exports(value) {
    exports36 = value;
  }
};
var licenses = [].concat($$cjs_default$$19(typeof spdx_license_ids_exports !== "undefined" ? spdx_license_ids_exports : {})).concat($$cjs_default$$19(typeof deprecated_exports !== "undefined" ? deprecated_exports : {}));
var exceptions = $$cjs_default$$19(typeof spdx_exceptions_exports !== "undefined" ? spdx_exceptions_exports : {});
module37.exports = function(source) {
  var index = 0;
  function hasMore() {
    return index < source.length;
  }
  function read(value) {
    if (value instanceof RegExp) {
      var chars = source.slice(index);
      var match = chars.match(value);
      if (match) {
        index += match[0].length;
        return match[0];
      }
    } else {
      if (source.indexOf(value, index) === index) {
        index += value.length;
        return value;
      }
    }
  }
  function skipWhitespace() {
    read(/[ ]*/);
  }
  function operator() {
    var string;
    var possibilities = ["WITH", "AND", "OR", "(", ")", ":", "+"];
    for (var i = 0; i < possibilities.length; i++) {
      string = read(possibilities[i]);
      if (string) {
        break;
      }
    }
    if (string === "+" && index > 1 && source[index - 2] === " ") {
      throw new Error("Space before `+`");
    }
    return string && {
      type: "OPERATOR",
      string
    };
  }
  function idstring() {
    return read(/[A-Za-z0-9-.]+/);
  }
  function expectIdstring() {
    var string = idstring();
    if (!string) {
      throw new Error("Expected idstring at offset " + index);
    }
    return string;
  }
  function documentRef() {
    if (read("DocumentRef-")) {
      var string = expectIdstring();
      return { type: "DOCUMENTREF", string };
    }
  }
  function licenseRef() {
    if (read("LicenseRef-")) {
      var string = expectIdstring();
      return { type: "LICENSEREF", string };
    }
  }
  function identifier() {
    var begin = index;
    var string = idstring();
    if (licenses.indexOf(string) !== -1) {
      return {
        type: "LICENSE",
        string
      };
    } else if (exceptions.indexOf(string) !== -1) {
      return {
        type: "EXCEPTION",
        string
      };
    }
    index = begin;
  }
  function parseToken() {
    return operator() || documentRef() || licenseRef() || identifier();
  }
  var tokens = [];
  while (hasMore()) {
    skipWhitespace();
    if (!hasMore()) {
      break;
    }
    var token = parseToken();
    if (!token) {
      throw new Error("Unexpected `" + source[index] + "` at offset " + index);
    }
    tokens.push(token);
  }
  return tokens;
};
var scan_default = module37.exports;

// node_modules/.pnpm/spdx-expression-parse@3.0.1/node_modules/spdx-expression-parse/index.js
function $$cjs_default$$20(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global21 !== "undefined" && global21 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global21 = globalThis;
var exports37 = {};
var module38 = {
  get exports() {
    return exports37;
  },
  set exports(value) {
    exports37 = value;
  }
};
var scan = $$cjs_default$$20(typeof scan_exports !== "undefined" ? scan_exports : {});
var parse = $$cjs_default$$20(typeof parse_exports !== "undefined" ? parse_exports : {});
module38.exports = function(source) {
  return parse(scan(source));
};
var spdx_expression_parse_default = module38.exports;

// node_modules/.pnpm/spdx-correct@3.1.1/node_modules/spdx-correct/index.js
function $$cjs_default$$21(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global22 !== "undefined" && global22 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global22 = globalThis;
var exports38 = {};
var module39 = {
  get exports() {
    return exports38;
  },
  set exports(value) {
    exports38 = value;
  }
};
var parse2 = $$cjs_default$$21(typeof spdx_expression_parse_exports !== "undefined" ? spdx_expression_parse_exports : {});
var spdxLicenseIds = $$cjs_default$$21(typeof spdx_license_ids_exports !== "undefined" ? spdx_license_ids_exports : {});
function valid(string) {
  try {
    parse2(string);
    return true;
  } catch (error) {
    return false;
  }
}
var transpositions = [
  ["APGL", "AGPL"],
  ["Gpl", "GPL"],
  ["GLP", "GPL"],
  ["APL", "Apache"],
  ["ISD", "ISC"],
  ["GLP", "GPL"],
  ["IST", "ISC"],
  ["Claude", "Clause"],
  [" or later", "+"],
  [" International", ""],
  ["GNU", "GPL"],
  ["GUN", "GPL"],
  ["+", ""],
  ["GNU GPL", "GPL"],
  ["GNU/GPL", "GPL"],
  ["GNU GLP", "GPL"],
  ["GNU General Public License", "GPL"],
  ["Gnu public license", "GPL"],
  ["GNU Public License", "GPL"],
  ["GNU GENERAL PUBLIC LICENSE", "GPL"],
  ["MTI", "MIT"],
  ["Mozilla Public License", "MPL"],
  ["Universal Permissive License", "UPL"],
  ["WTH", "WTF"],
  ["-License", ""]
];
var TRANSPOSED = 0;
var CORRECT = 1;
var transforms = [
  function(argument) {
    return argument.toUpperCase();
  },
  function(argument) {
    return argument.trim();
  },
  function(argument) {
    return argument.replace(/\./g, "");
  },
  function(argument) {
    return argument.replace(/\s+/g, "");
  },
  function(argument) {
    return argument.replace(/\s+/g, "-");
  },
  function(argument) {
    return argument.replace("v", "-");
  },
  function(argument) {
    return argument.replace(/,?\s*(\d)/, "-$1");
  },
  function(argument) {
    return argument.replace(/,?\s*(\d)/, "-$1.0");
  },
  function(argument) {
    return argument.replace(/,?\s*(V\.|v\.|V|v|Version|version)\s*(\d)/, "-$2");
  },
  function(argument) {
    return argument.replace(/,?\s*(V\.|v\.|V|v|Version|version)\s*(\d)/, "-$2.0");
  },
  function(argument) {
    return argument[0].toUpperCase() + argument.slice(1);
  },
  function(argument) {
    return argument.replace("/", "-");
  },
  function(argument) {
    return argument.replace(/\s*V\s*(\d)/, "-$1").replace(/(\d)$/, "$1.0");
  },
  function(argument) {
    if (argument.indexOf("3.0") !== -1) {
      return argument + "-or-later";
    } else {
      return argument + "-only";
    }
  },
  function(argument) {
    return argument + "only";
  },
  function(argument) {
    return argument.replace(/(\d)$/, "-$1.0");
  },
  function(argument) {
    return argument.replace(/(-| )?(\d)$/, "-$2-Clause");
  },
  function(argument) {
    return argument.replace(/(-| )clause(-| )(\d)/, "-$3-Clause");
  },
  function(argument) {
    return argument.replace(/\b(Modified|New|Revised)(-| )?BSD((-| )License)?/i, "BSD-3-Clause");
  },
  function(argument) {
    return argument.replace(/\bSimplified(-| )?BSD((-| )License)?/i, "BSD-2-Clause");
  },
  function(argument) {
    return argument.replace(/\b(Free|Net)(-| )?BSD((-| )License)?/i, "BSD-2-Clause-$1BSD");
  },
  function(argument) {
    return argument.replace(/\bClear(-| )?BSD((-| )License)?/i, "BSD-3-Clause-Clear");
  },
  function(argument) {
    return argument.replace(/\b(Old|Original)(-| )?BSD((-| )License)?/i, "BSD-4-Clause");
  },
  function(argument) {
    return "CC-" + argument;
  },
  function(argument) {
    return "CC-" + argument + "-4.0";
  },
  function(argument) {
    return argument.replace("Attribution", "BY").replace("NonCommercial", "NC").replace("NoDerivatives", "ND").replace(/ (\d)/, "-$1").replace(/ ?International/, "");
  },
  function(argument) {
    return "CC-" + argument.replace("Attribution", "BY").replace("NonCommercial", "NC").replace("NoDerivatives", "ND").replace(/ (\d)/, "-$1").replace(/ ?International/, "") + "-4.0";
  }
];
var licensesWithVersions = spdxLicenseIds.map(function(id) {
  var match = /^(.*)-\d+\.\d+$/.exec(id);
  return match ? [match[0], match[1]] : [id, null];
}).reduce(function(objectMap, item) {
  var key = item[1];
  objectMap[key] = objectMap[key] || [];
  objectMap[key].push(item[0]);
  return objectMap;
}, {});
var licensesWithOneVersion = Object.keys(licensesWithVersions).map(function makeEntries(key) {
  return [key, licensesWithVersions[key]];
}).filter(function identifySoleVersions(item) {
  return item[1].length === 1 && item[0] !== null && item[0] !== "APL";
}).map(function createLastResorts(item) {
  return [item[0], item[1][0]];
});
licensesWithVersions = void 0;
var lastResorts = [
  ["UNLI", "Unlicense"],
  ["WTF", "WTFPL"],
  ["2 CLAUSE", "BSD-2-Clause"],
  ["2-CLAUSE", "BSD-2-Clause"],
  ["3 CLAUSE", "BSD-3-Clause"],
  ["3-CLAUSE", "BSD-3-Clause"],
  ["AFFERO", "AGPL-3.0-or-later"],
  ["AGPL", "AGPL-3.0-or-later"],
  ["APACHE", "Apache-2.0"],
  ["ARTISTIC", "Artistic-2.0"],
  ["Affero", "AGPL-3.0-or-later"],
  ["BEER", "Beerware"],
  ["BOOST", "BSL-1.0"],
  ["BSD", "BSD-2-Clause"],
  ["CDDL", "CDDL-1.1"],
  ["ECLIPSE", "EPL-1.0"],
  ["FUCK", "WTFPL"],
  ["GNU", "GPL-3.0-or-later"],
  ["LGPL", "LGPL-3.0-or-later"],
  ["GPLV1", "GPL-1.0-only"],
  ["GPL-1", "GPL-1.0-only"],
  ["GPLV2", "GPL-2.0-only"],
  ["GPL-2", "GPL-2.0-only"],
  ["GPL", "GPL-3.0-or-later"],
  ["MIT +NO-FALSE-ATTRIBS", "MITNFA"],
  ["MIT", "MIT"],
  ["MPL", "MPL-2.0"],
  ["X11", "X11"],
  ["ZLIB", "Zlib"]
].concat(licensesWithOneVersion);
var SUBSTRING = 0;
var IDENTIFIER = 1;
var validTransformation = function(identifier) {
  for (var i = 0; i < transforms.length; i++) {
    var transformed = transforms[i](identifier).trim();
    if (transformed !== identifier && valid(transformed)) {
      return transformed;
    }
  }
  return null;
};
var validLastResort = function(identifier) {
  var upperCased = identifier.toUpperCase();
  for (var i = 0; i < lastResorts.length; i++) {
    var lastResort = lastResorts[i];
    if (upperCased.indexOf(lastResort[SUBSTRING]) > -1) {
      return lastResort[IDENTIFIER];
    }
  }
  return null;
};
var anyCorrection = function(identifier, check) {
  for (var i = 0; i < transpositions.length; i++) {
    var transposition = transpositions[i];
    var transposed = transposition[TRANSPOSED];
    if (identifier.indexOf(transposed) > -1) {
      var corrected = identifier.replace(transposed, transposition[CORRECT]);
      var checked = check(corrected);
      if (checked !== null) {
        return checked;
      }
    }
  }
  return null;
};
module39.exports = function(identifier, options) {
  options = options || {};
  var upgrade = options.upgrade === void 0 ? true : !!options.upgrade;
  function postprocess(value) {
    return upgrade ? upgradeGPLs(value) : value;
  }
  var validArugment = typeof identifier === "string" && identifier.trim().length !== 0;
  if (!validArugment) {
    throw Error("Invalid argument. Expected non-empty string.");
  }
  identifier = identifier.trim();
  if (valid(identifier)) {
    return postprocess(identifier);
  }
  var noPlus = identifier.replace(/\+$/, "").trim();
  if (valid(noPlus)) {
    return postprocess(noPlus);
  }
  var transformed = validTransformation(identifier);
  if (transformed !== null) {
    return postprocess(transformed);
  }
  transformed = anyCorrection(identifier, function(argument) {
    if (valid(argument)) {
      return argument;
    }
    return validTransformation(argument);
  });
  if (transformed !== null) {
    return postprocess(transformed);
  }
  transformed = validLastResort(identifier);
  if (transformed !== null) {
    return postprocess(transformed);
  }
  transformed = anyCorrection(identifier, validLastResort);
  if (transformed !== null) {
    return postprocess(transformed);
  }
  return null;
};
function upgradeGPLs(value) {
  if ([
    "GPL-1.0",
    "LGPL-1.0",
    "AGPL-1.0",
    "GPL-2.0",
    "LGPL-2.0",
    "AGPL-2.0",
    "LGPL-2.1"
  ].indexOf(value) !== -1) {
    return value + "-only";
  } else if ([
    "GPL-1.0+",
    "GPL-2.0+",
    "GPL-3.0+",
    "LGPL-2.0+",
    "LGPL-2.1+",
    "LGPL-3.0+",
    "AGPL-1.0+",
    "AGPL-3.0+"
  ].indexOf(value) !== -1) {
    return value.replace(/\+$/, "-or-later");
  } else if (["GPL-3.0", "LGPL-3.0", "AGPL-3.0"].indexOf(value) !== -1) {
    return value + "-or-later";
  } else {
    return value;
  }
}
var spdx_correct_default = module39.exports;

// node_modules/.pnpm/validate-npm-package-license@3.0.4/node_modules/validate-npm-package-license/index.js
function $$cjs_default$$22(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global23 !== "undefined" && global23 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global23 = globalThis;
var exports39 = {};
var module40 = {
  get exports() {
    return exports39;
  },
  set exports(value) {
    exports39 = value;
  }
};
var parse3 = $$cjs_default$$22(typeof spdx_expression_parse_exports !== "undefined" ? spdx_expression_parse_exports : {});
var correct = $$cjs_default$$22(typeof spdx_correct_exports !== "undefined" ? spdx_correct_exports : {});
var genericWarning = 'license should be a valid SPDX license expression (without "LicenseRef"), "UNLICENSED", or "SEE LICENSE IN <filename>"';
var fileReferenceRE = /^SEE LICEN[CS]E IN (.+)$/;
function startsWith(prefix, string) {
  return string.slice(0, prefix.length) === prefix;
}
function usesLicenseRef(ast) {
  if (ast.hasOwnProperty("license")) {
    var license = ast.license;
    return startsWith("LicenseRef", license) || startsWith("DocumentRef", license);
  } else {
    return usesLicenseRef(ast.left) || usesLicenseRef(ast.right);
  }
}
module40.exports = function(argument) {
  var ast;
  try {
    ast = parse3(argument);
  } catch (e) {
    var match;
    if (argument === "UNLICENSED" || argument === "UNLICENCED") {
      return {
        validForOldPackages: true,
        validForNewPackages: true,
        unlicensed: true
      };
    } else if (match = fileReferenceRE.exec(argument)) {
      return {
        validForOldPackages: true,
        validForNewPackages: true,
        inFile: match[1]
      };
    } else {
      var result = {
        validForOldPackages: false,
        validForNewPackages: false,
        warnings: [genericWarning]
      };
      if (argument.trim().length !== 0) {
        var corrected = correct(argument);
        if (corrected) {
          result.warnings.push('license is similar to the valid expression "' + corrected + '"');
        }
      }
      return result;
    }
  }
  if (usesLicenseRef(ast)) {
    return {
      validForNewPackages: false,
      validForOldPackages: false,
      spdx: true,
      warnings: [genericWarning]
    };
  } else {
    return {
      validForNewPackages: true,
      validForOldPackages: true,
      spdx: true
    };
  }
};
var validate_npm_package_license_default = module40.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/functions/clean.js
var clean_exports = {};
__export(clean_exports, {
  default: () => clean_default
});
init_esm_shims();

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/functions/parse.js
var parse_exports2 = {};
__export(parse_exports2, {
  default: () => parse_default2
});
init_esm_shims();

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/internal/parse-options.js
var parse_options_exports = {};
__export(parse_options_exports, {
  default: () => parse_options_default
});
init_esm_shims();
var exports40 = {};
var module41 = {
  get exports() {
    return exports40;
  },
  set exports(value) {
    exports40 = value;
  }
};
var opts = ["includePrerelease", "loose", "rtl"];
var parseOptions = (options) => !options ? {} : typeof options !== "object" ? { loose: true } : opts.filter((k) => options[k]).reduce((options2, k) => {
  options2[k] = true;
  return options2;
}, {});
module41.exports = parseOptions;
var parse_options_default = module41.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/classes/semver.js
var semver_exports = {};
__export(semver_exports, {
  default: () => semver_default
});
init_esm_shims();

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/internal/identifiers.js
var identifiers_exports = {};
__export(identifiers_exports, {
  compareIdentifiers: () => __export011,
  default: () => identifiers_default,
  rcompareIdentifiers: () => __export16
});
init_esm_shims();
var exports41 = {};
var module42 = {
  get exports() {
    return exports41;
  },
  set exports(value) {
    exports41 = value;
  }
};
var numeric = /^[0-9]+$/;
var compareIdentifiers = (a, b) => {
  const anum = numeric.test(a);
  const bnum = numeric.test(b);
  if (anum && bnum) {
    a = +a;
    b = +b;
  }
  return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;
};
var rcompareIdentifiers = (a, b) => compareIdentifiers(b, a);
module42.exports = {
  compareIdentifiers,
  rcompareIdentifiers
};
var __export011;
var __export16;
if (Object.isExtensible(module42.exports) && Object.keys(module42.exports).length === 2) {
  __export011 = module42.exports["compareIdentifiers"];
  __export16 = module42.exports["rcompareIdentifiers"];
}
var identifiers_default = module42.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/internal/re.js
var re_exports = {};
__export(re_exports, {
  caretTrimReplace: () => __export43,
  comparatorTrimReplace: () => __export52,
  default: () => re_default,
  re: () => __export013,
  src: () => __export18,
  t: () => __export25,
  tildeTrimReplace: () => __export34
});
init_esm_shims();

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/internal/debug.js
var debug_exports = {};
__export(debug_exports, {
  default: () => debug_default
});
init_esm_shims();
var exports42 = {};
var module43 = {
  get exports() {
    return exports42;
  },
  set exports(value) {
    exports42 = value;
  }
};
var debug = typeof process === "object" && process.env && process.env.NODE_DEBUG && /\bsemver\b/i.test(process.env.NODE_DEBUG) ? (...args) => console.error("SEMVER", ...args) : () => {
};
module43.exports = debug;
var debug_default = module43.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/internal/constants.js
var constants_exports = {};
__export(constants_exports, {
  MAX_LENGTH: () => __export17,
  MAX_SAFE_COMPONENT_LENGTH: () => __export33,
  MAX_SAFE_INTEGER: () => __export24,
  SEMVER_SPEC_VERSION: () => __export012,
  default: () => constants_default
});
init_esm_shims();
var exports43 = {};
var module44 = {
  get exports() {
    return exports43;
  },
  set exports(value) {
    exports43 = value;
  }
};
var SEMVER_SPEC_VERSION = "2.0.0";
var MAX_LENGTH = 256;
var MAX_SAFE_INTEGER3 = Number.MAX_SAFE_INTEGER || 9007199254740991;
var MAX_SAFE_COMPONENT_LENGTH = 16;
module44.exports = {
  SEMVER_SPEC_VERSION,
  MAX_LENGTH,
  MAX_SAFE_INTEGER: MAX_SAFE_INTEGER3,
  MAX_SAFE_COMPONENT_LENGTH
};
var __export012;
var __export17;
var __export24;
var __export33;
if (Object.isExtensible(module44.exports) && Object.keys(module44.exports).length === 4) {
  __export012 = module44.exports["SEMVER_SPEC_VERSION"];
  __export17 = module44.exports["MAX_LENGTH"];
  __export24 = module44.exports["MAX_SAFE_INTEGER"];
  __export33 = module44.exports["MAX_SAFE_COMPONENT_LENGTH"];
}
var constants_default = module44.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/internal/re.js
function $$cjs_default$$23(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global24 !== "undefined" && global24 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global24 = globalThis;
var exports44 = {};
var module45 = {
  get exports() {
    return exports44;
  },
  set exports(value) {
    exports44 = value;
  }
};
var { MAX_SAFE_COMPONENT_LENGTH: MAX_SAFE_COMPONENT_LENGTH2 } = $$cjs_default$$23(typeof constants_exports !== "undefined" ? constants_exports : {});
var debug2 = $$cjs_default$$23(typeof debug_exports !== "undefined" ? debug_exports : {});
exports44 = module45.exports = {};
var re = exports44.re = [];
var src = exports44.src = [];
var t = exports44.t = {};
var R = 0;
var createToken = (name, value, isGlobal) => {
  const index = R++;
  debug2(index, value);
  t[name] = index;
  src[index] = value;
  re[index] = new RegExp(value, isGlobal ? "g" : void 0);
};
createToken("NUMERICIDENTIFIER", "0|[1-9]\\d*");
createToken("NUMERICIDENTIFIERLOOSE", "[0-9]+");
createToken("NONNUMERICIDENTIFIER", "\\d*[a-zA-Z-][a-zA-Z0-9-]*");
createToken("MAINVERSION", `(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})\\.(${src[t.NUMERICIDENTIFIER]})`);
createToken("MAINVERSIONLOOSE", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`);
createToken("PRERELEASEIDENTIFIER", `(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);
createToken("PRERELEASEIDENTIFIERLOOSE", `(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);
createToken("PRERELEASE", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`);
createToken("PRERELEASELOOSE", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);
createToken("BUILDIDENTIFIER", "[0-9A-Za-z-]+");
createToken("BUILD", `(?:\\+(${src[t.BUILDIDENTIFIER]}(?:\\.${src[t.BUILDIDENTIFIER]})*))`);
createToken("FULLPLAIN", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);
createToken("FULL", `^${src[t.FULLPLAIN]}$`);
createToken("LOOSEPLAIN", `[v=\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);
createToken("LOOSE", `^${src[t.LOOSEPLAIN]}$`);
createToken("GTLT", "((?:<|>)?=?)");
createToken("XRANGEIDENTIFIERLOOSE", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`);
createToken("XRANGEIDENTIFIER", `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`);
createToken("XRANGEPLAIN", `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`);
createToken("XRANGEPLAINLOOSE", `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`);
createToken("XRANGE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`);
createToken("XRANGELOOSE", `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`);
createToken("COERCE", `${"(^|[^\\d])(\\d{1,"}${MAX_SAFE_COMPONENT_LENGTH2}})(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH2}}))?(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH2}}))?(?:$|[^\\d])`);
createToken("COERCERTL", src[t.COERCE], true);
createToken("LONETILDE", "(?:~>?)");
createToken("TILDETRIM", `(\\s*)${src[t.LONETILDE]}\\s+`, true);
exports44.tildeTrimReplace = "$1~";
createToken("TILDE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);
createToken("TILDELOOSE", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);
createToken("LONECARET", "(?:\\^)");
createToken("CARETTRIM", `(\\s*)${src[t.LONECARET]}\\s+`, true);
exports44.caretTrimReplace = "$1^";
createToken("CARET", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);
createToken("CARETLOOSE", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);
createToken("COMPARATORLOOSE", `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`);
createToken("COMPARATOR", `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`);
createToken("COMPARATORTRIM", `(\\s*)${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);
exports44.comparatorTrimReplace = "$1$2$3";
createToken("HYPHENRANGE", `^\\s*(${src[t.XRANGEPLAIN]})\\s+-\\s+(${src[t.XRANGEPLAIN]})\\s*$`);
createToken("HYPHENRANGELOOSE", `^\\s*(${src[t.XRANGEPLAINLOOSE]})\\s+-\\s+(${src[t.XRANGEPLAINLOOSE]})\\s*$`);
createToken("STAR", "(<|>)?=?\\s*\\*");
createToken("GTE0", "^\\s*>=\\s*0.0.0\\s*$");
createToken("GTE0PRE", "^\\s*>=\\s*0.0.0-0\\s*$");
var __export013;
var __export18;
var __export25;
var __export34;
var __export43;
var __export52;
if (Object.isExtensible(module45.exports) && Object.keys(module45.exports).length === 6) {
  __export013 = module45.exports["re"];
  __export18 = module45.exports["src"];
  __export25 = module45.exports["t"];
  __export34 = module45.exports["tildeTrimReplace"];
  __export43 = module45.exports["caretTrimReplace"];
  __export52 = module45.exports["comparatorTrimReplace"];
}
var re_default = module45.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/classes/semver.js
function $$cjs_default$$24(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global25 !== "undefined" && global25 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global25 = globalThis;
var exports45 = {};
var module46 = {
  get exports() {
    return exports45;
  },
  set exports(value) {
    exports45 = value;
  }
};
var debug3 = $$cjs_default$$24(typeof debug_exports !== "undefined" ? debug_exports : {});
var { MAX_LENGTH: MAX_LENGTH2, MAX_SAFE_INTEGER: MAX_SAFE_INTEGER4 } = $$cjs_default$$24(typeof constants_exports !== "undefined" ? constants_exports : {});
var { re: re2, t: t2 } = $$cjs_default$$24(typeof re_exports !== "undefined" ? re_exports : {});
var parseOptions2 = $$cjs_default$$24(typeof parse_options_exports !== "undefined" ? parse_options_exports : {});
var { compareIdentifiers: compareIdentifiers2 } = $$cjs_default$$24(typeof identifiers_exports !== "undefined" ? identifiers_exports : {});
var SemVer = class {
  constructor(version, options) {
    options = parseOptions2(options);
    if (version instanceof SemVer) {
      if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {
        return version;
      } else {
        version = version.version;
      }
    } else if (typeof version !== "string") {
      throw new TypeError(`Invalid Version: ${version}`);
    }
    if (version.length > MAX_LENGTH2) {
      throw new TypeError(`version is longer than ${MAX_LENGTH2} characters`);
    }
    debug3("SemVer", version, options);
    this.options = options;
    this.loose = !!options.loose;
    this.includePrerelease = !!options.includePrerelease;
    const m = version.trim().match(options.loose ? re2[t2.LOOSE] : re2[t2.FULL]);
    if (!m) {
      throw new TypeError(`Invalid Version: ${version}`);
    }
    this.raw = version;
    this.major = +m[1];
    this.minor = +m[2];
    this.patch = +m[3];
    if (this.major > MAX_SAFE_INTEGER4 || this.major < 0) {
      throw new TypeError("Invalid major version");
    }
    if (this.minor > MAX_SAFE_INTEGER4 || this.minor < 0) {
      throw new TypeError("Invalid minor version");
    }
    if (this.patch > MAX_SAFE_INTEGER4 || this.patch < 0) {
      throw new TypeError("Invalid patch version");
    }
    if (!m[4]) {
      this.prerelease = [];
    } else {
      this.prerelease = m[4].split(".").map((id) => {
        if (/^[0-9]+$/.test(id)) {
          const num = +id;
          if (num >= 0 && num < MAX_SAFE_INTEGER4) {
            return num;
          }
        }
        return id;
      });
    }
    this.build = m[5] ? m[5].split(".") : [];
    this.format();
  }
  format() {
    this.version = `${this.major}.${this.minor}.${this.patch}`;
    if (this.prerelease.length) {
      this.version += `-${this.prerelease.join(".")}`;
    }
    return this.version;
  }
  toString() {
    return this.version;
  }
  compare(other) {
    debug3("SemVer.compare", this.version, this.options, other);
    if (!(other instanceof SemVer)) {
      if (typeof other === "string" && other === this.version) {
        return 0;
      }
      other = new SemVer(other, this.options);
    }
    if (other.version === this.version) {
      return 0;
    }
    return this.compareMain(other) || this.comparePre(other);
  }
  compareMain(other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options);
    }
    return compareIdentifiers2(this.major, other.major) || compareIdentifiers2(this.minor, other.minor) || compareIdentifiers2(this.patch, other.patch);
  }
  comparePre(other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options);
    }
    if (this.prerelease.length && !other.prerelease.length) {
      return -1;
    } else if (!this.prerelease.length && other.prerelease.length) {
      return 1;
    } else if (!this.prerelease.length && !other.prerelease.length) {
      return 0;
    }
    let i = 0;
    do {
      const a = this.prerelease[i];
      const b = other.prerelease[i];
      debug3("prerelease compare", i, a, b);
      if (a === void 0 && b === void 0) {
        return 0;
      } else if (b === void 0) {
        return 1;
      } else if (a === void 0) {
        return -1;
      } else if (a === b) {
        continue;
      } else {
        return compareIdentifiers2(a, b);
      }
    } while (++i);
  }
  compareBuild(other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options);
    }
    let i = 0;
    do {
      const a = this.build[i];
      const b = other.build[i];
      debug3("prerelease compare", i, a, b);
      if (a === void 0 && b === void 0) {
        return 0;
      } else if (b === void 0) {
        return 1;
      } else if (a === void 0) {
        return -1;
      } else if (a === b) {
        continue;
      } else {
        return compareIdentifiers2(a, b);
      }
    } while (++i);
  }
  inc(release, identifier) {
    switch (release) {
      case "premajor":
        this.prerelease.length = 0;
        this.patch = 0;
        this.minor = 0;
        this.major++;
        this.inc("pre", identifier);
        break;
      case "preminor":
        this.prerelease.length = 0;
        this.patch = 0;
        this.minor++;
        this.inc("pre", identifier);
        break;
      case "prepatch":
        this.prerelease.length = 0;
        this.inc("patch", identifier);
        this.inc("pre", identifier);
        break;
      case "prerelease":
        if (this.prerelease.length === 0) {
          this.inc("patch", identifier);
        }
        this.inc("pre", identifier);
        break;
      case "major":
        if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {
          this.major++;
        }
        this.minor = 0;
        this.patch = 0;
        this.prerelease = [];
        break;
      case "minor":
        if (this.patch !== 0 || this.prerelease.length === 0) {
          this.minor++;
        }
        this.patch = 0;
        this.prerelease = [];
        break;
      case "patch":
        if (this.prerelease.length === 0) {
          this.patch++;
        }
        this.prerelease = [];
        break;
      case "pre":
        if (this.prerelease.length === 0) {
          this.prerelease = [0];
        } else {
          let i = this.prerelease.length;
          while (--i >= 0) {
            if (typeof this.prerelease[i] === "number") {
              this.prerelease[i]++;
              i = -2;
            }
          }
          if (i === -1) {
            this.prerelease.push(0);
          }
        }
        if (identifier) {
          if (this.prerelease[0] === identifier) {
            if (isNaN(this.prerelease[1])) {
              this.prerelease = [identifier, 0];
            }
          } else {
            this.prerelease = [identifier, 0];
          }
        }
        break;
      default:
        throw new Error(`invalid increment argument: ${release}`);
    }
    this.format();
    this.raw = this.version;
    return this;
  }
};
module46.exports = SemVer;
var semver_default = module46.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/functions/parse.js
function $$cjs_default$$25(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global26 !== "undefined" && global26 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global26 = globalThis;
var exports46 = {};
var module47 = {
  get exports() {
    return exports46;
  },
  set exports(value) {
    exports46 = value;
  }
};
var { MAX_LENGTH: MAX_LENGTH3 } = $$cjs_default$$25(typeof constants_exports !== "undefined" ? constants_exports : {});
var { re: re3, t: t3 } = $$cjs_default$$25(typeof re_exports !== "undefined" ? re_exports : {});
var SemVer2 = $$cjs_default$$25(typeof semver_exports !== "undefined" ? semver_exports : {});
var parseOptions3 = $$cjs_default$$25(typeof parse_options_exports !== "undefined" ? parse_options_exports : {});
var parse4 = (version, options) => {
  options = parseOptions3(options);
  if (version instanceof SemVer2) {
    return version;
  }
  if (typeof version !== "string") {
    return null;
  }
  if (version.length > MAX_LENGTH3) {
    return null;
  }
  const r = options.loose ? re3[t3.LOOSE] : re3[t3.FULL];
  if (!r.test(version)) {
    return null;
  }
  try {
    return new SemVer2(version, options);
  } catch (er) {
    return null;
  }
};
module47.exports = parse4;
var parse_default2 = module47.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/functions/clean.js
function $$cjs_default$$26(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global27 !== "undefined" && global27 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global27 = globalThis;
var exports47 = {};
var module48 = {
  get exports() {
    return exports47;
  },
  set exports(value) {
    exports47 = value;
  }
};
var parse5 = $$cjs_default$$26(typeof parse_exports2 !== "undefined" ? parse_exports2 : {});
var clean = (version, options) => {
  const s = parse5(version.trim().replace(/^[=v]+/, ""), options);
  return s ? s.version : null;
};
module48.exports = clean;
var clean_default = module48.exports;

// node_modules/.pnpm/semver@7.3.5/node_modules/semver/functions/valid.js
var valid_exports = {};
__export(valid_exports, {
  default: () => valid_default
});
init_esm_shims();
function $$cjs_default$$27(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global28 !== "undefined" && global28 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global28 = globalThis;
var exports48 = {};
var module49 = {
  get exports() {
    return exports48;
  },
  set exports(value) {
    exports48 = value;
  }
};
var parse6 = $$cjs_default$$27(typeof parse_exports2 !== "undefined" ? parse_exports2 : {});
var valid2 = (version, options) => {
  const v = parse6(version, options);
  return v ? v.version : null;
};
module49.exports = valid2;
var valid_default = module49.exports;

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/fixer.js
function $$cjs_default$$28(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global29 !== "undefined" && global29 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global29 = globalThis;
var exports49 = {};
var module50 = {
  get exports() {
    return exports49;
  },
  set exports(value) {
    exports49 = value;
  }
};
var isValidSemver = $$cjs_default$$28(typeof valid_exports !== "undefined" ? valid_exports : {});
var cleanSemver = $$cjs_default$$28(typeof clean_exports !== "undefined" ? clean_exports : {});
var validateLicense = $$cjs_default$$28(typeof validate_npm_package_license_exports !== "undefined" ? validate_npm_package_license_exports : {});
var hostedGitInfo = $$cjs_default$$28(typeof hosted_git_info_exports !== "undefined" ? hosted_git_info_exports : {});
var isBuiltinModule = $$cjs_default$$28(typeof is_core_module_exports !== "undefined" ? is_core_module_exports : {});
var depTypes = ["dependencies", "devDependencies", "optionalDependencies"];
var extractDescription2 = $$cjs_default$$28(typeof extract_description_exports !== "undefined" ? extract_description_exports : {});
var url3 = $$cjs_default$$28(typeof $cjs$url2 !== "undefined" ? $cjs$url2 : {});
var typos = $$cjs_default$$28(typeof typos_exports !== "undefined" ? typos_exports : {});
module50.exports = {
  warn: function() {
  },
  fixRepositoryField: function(data2) {
    if (data2.repositories) {
      this.warn("repositories");
      data2.repository = data2.repositories[0];
    }
    if (!data2.repository) {
      return this.warn("missingRepository");
    }
    if (typeof data2.repository === "string") {
      data2.repository = {
        type: "git",
        url: data2.repository
      };
    }
    var r = data2.repository.url || "";
    if (r) {
      var hosted = hostedGitInfo.fromUrl(r);
      if (hosted) {
        r = data2.repository.url = hosted.getDefaultRepresentation() === "shortcut" ? hosted.https() : hosted.toString();
      }
    }
    if (r.match(/github.com\/[^/]+\/[^/]+\.git\.git$/)) {
      this.warn("brokenGitUrl", r);
    }
  },
  fixTypos: function(data2) {
    Object.keys(typos.topLevel).forEach(function(d) {
      if (Object.prototype.hasOwnProperty.call(data2, d)) {
        this.warn("typo", d, typos.topLevel[d]);
      }
    }, this);
  },
  fixScriptsField: function(data2) {
    if (!data2.scripts) {
      return;
    }
    if (typeof data2.scripts !== "object") {
      this.warn("nonObjectScripts");
      delete data2.scripts;
      return;
    }
    Object.keys(data2.scripts).forEach(function(k) {
      if (typeof data2.scripts[k] !== "string") {
        this.warn("nonStringScript");
        delete data2.scripts[k];
      } else if (typos.script[k] && !data2.scripts[typos.script[k]]) {
        this.warn("typo", k, typos.script[k], "scripts");
      }
    }, this);
  },
  fixFilesField: function(data2) {
    var files = data2.files;
    if (files && !Array.isArray(files)) {
      this.warn("nonArrayFiles");
      delete data2.files;
    } else if (data2.files) {
      data2.files = data2.files.filter(function(file) {
        if (!file || typeof file !== "string") {
          this.warn("invalidFilename", file);
          return false;
        } else {
          return true;
        }
      }, this);
    }
  },
  fixBinField: function(data2) {
    if (!data2.bin) {
      return;
    }
    if (typeof data2.bin === "string") {
      var b = {};
      var match;
      if (match = data2.name.match(/^@[^/]+[/](.*)$/)) {
        b[match[1]] = data2.bin;
      } else {
        b[data2.name] = data2.bin;
      }
      data2.bin = b;
    }
  },
  fixManField: function(data2) {
    if (!data2.man) {
      return;
    }
    if (typeof data2.man === "string") {
      data2.man = [data2.man];
    }
  },
  fixBundleDependenciesField: function(data2) {
    var bdd = "bundledDependencies";
    var bd = "bundleDependencies";
    if (data2[bdd] && !data2[bd]) {
      data2[bd] = data2[bdd];
      delete data2[bdd];
    }
    if (data2[bd] && !Array.isArray(data2[bd])) {
      this.warn("nonArrayBundleDependencies");
      delete data2[bd];
    } else if (data2[bd]) {
      data2[bd] = data2[bd].filter(function(bd2) {
        if (!bd2 || typeof bd2 !== "string") {
          this.warn("nonStringBundleDependency", bd2);
          return false;
        } else {
          if (!data2.dependencies) {
            data2.dependencies = {};
          }
          if (Object.prototype.hasOwnProperty.call(data2.dependencies, bd2)) {
            this.warn("nonDependencyBundleDependency", bd2);
            data2.dependencies[bd2] = "*";
          }
          return true;
        }
      }, this);
    }
  },
  fixDependencies: function(data2, strict) {
    objectifyDeps(data2, this.warn);
    addOptionalDepsToDeps(data2, this.warn);
    this.fixBundleDependenciesField(data2);
    ["dependencies", "devDependencies"].forEach(function(deps) {
      if (!(deps in data2)) {
        return;
      }
      if (!data2[deps] || typeof data2[deps] !== "object") {
        this.warn("nonObjectDependencies", deps);
        delete data2[deps];
        return;
      }
      Object.keys(data2[deps]).forEach(function(d) {
        var r = data2[deps][d];
        if (typeof r !== "string") {
          this.warn("nonStringDependency", d, JSON.stringify(r));
          delete data2[deps][d];
        }
        var hosted = hostedGitInfo.fromUrl(data2[deps][d]);
        if (hosted) {
          data2[deps][d] = hosted.toString();
        }
      }, this);
    }, this);
  },
  fixModulesField: function(data2) {
    if (data2.modules) {
      this.warn("deprecatedModules");
      delete data2.modules;
    }
  },
  fixKeywordsField: function(data2) {
    if (typeof data2.keywords === "string") {
      data2.keywords = data2.keywords.split(/,\s+/);
    }
    if (data2.keywords && !Array.isArray(data2.keywords)) {
      delete data2.keywords;
      this.warn("nonArrayKeywords");
    } else if (data2.keywords) {
      data2.keywords = data2.keywords.filter(function(kw) {
        if (typeof kw !== "string" || !kw) {
          this.warn("nonStringKeyword");
          return false;
        } else {
          return true;
        }
      }, this);
    }
  },
  fixVersionField: function(data2, strict) {
    var loose = !strict;
    if (!data2.version) {
      data2.version = "";
      return true;
    }
    if (!isValidSemver(data2.version, loose)) {
      throw new Error('Invalid version: "' + data2.version + '"');
    }
    data2.version = cleanSemver(data2.version, loose);
    return true;
  },
  fixPeople: function(data2) {
    modifyPeople(data2, unParsePerson);
    modifyPeople(data2, parsePerson);
  },
  fixNameField: function(data2, options) {
    if (typeof options === "boolean") {
      options = { strict: options };
    } else if (typeof options === "undefined") {
      options = {};
    }
    var strict = options.strict;
    if (!data2.name && !strict) {
      data2.name = "";
      return;
    }
    if (typeof data2.name !== "string") {
      throw new Error("name field must be a string.");
    }
    if (!strict) {
      data2.name = data2.name.trim();
    }
    ensureValidName(data2.name, strict, options.allowLegacyCase);
    if (isBuiltinModule(data2.name)) {
      this.warn("conflictingName", data2.name);
    }
  },
  fixDescriptionField: function(data2) {
    if (data2.description && typeof data2.description !== "string") {
      this.warn("nonStringDescription");
      delete data2.description;
    }
    if (data2.readme && !data2.description) {
      data2.description = extractDescription2(data2.readme);
    }
    if (data2.description === void 0) {
      delete data2.description;
    }
    if (!data2.description) {
      this.warn("missingDescription");
    }
  },
  fixReadmeField: function(data2) {
    if (!data2.readme) {
      this.warn("missingReadme");
      data2.readme = "ERROR: No README data found!";
    }
  },
  fixBugsField: function(data2) {
    if (!data2.bugs && data2.repository && data2.repository.url) {
      var hosted = hostedGitInfo.fromUrl(data2.repository.url);
      if (hosted && hosted.bugs()) {
        data2.bugs = { url: hosted.bugs() };
      }
    } else if (data2.bugs) {
      var emailRe = /^.+@.*\..+$/;
      if (typeof data2.bugs === "string") {
        if (emailRe.test(data2.bugs)) {
          data2.bugs = { email: data2.bugs };
        } else if (url3.parse(data2.bugs).protocol) {
          data2.bugs = { url: data2.bugs };
        } else {
          this.warn("nonEmailUrlBugsString");
        }
      } else {
        bugsTypos(data2.bugs, this.warn);
        var oldBugs = data2.bugs;
        data2.bugs = {};
        if (oldBugs.url) {
          if (typeof oldBugs.url === "string" && url3.parse(oldBugs.url).protocol) {
            data2.bugs.url = oldBugs.url;
          } else {
            this.warn("nonUrlBugsUrlField");
          }
        }
        if (oldBugs.email) {
          if (typeof oldBugs.email === "string" && emailRe.test(oldBugs.email)) {
            data2.bugs.email = oldBugs.email;
          } else {
            this.warn("nonEmailBugsEmailField");
          }
        }
      }
      if (!data2.bugs.email && !data2.bugs.url) {
        delete data2.bugs;
        this.warn("emptyNormalizedBugs");
      }
    }
  },
  fixHomepageField: function(data2) {
    if (!data2.homepage && data2.repository && data2.repository.url) {
      var hosted = hostedGitInfo.fromUrl(data2.repository.url);
      if (hosted && hosted.docs()) {
        data2.homepage = hosted.docs();
      }
    }
    if (!data2.homepage) {
      return;
    }
    if (typeof data2.homepage !== "string") {
      this.warn("nonUrlHomepage");
      return delete data2.homepage;
    }
    if (!url3.parse(data2.homepage).protocol) {
      data2.homepage = "http://" + data2.homepage;
    }
  },
  fixLicenseField: function(data2) {
    const license = data2.license || data2.licence;
    if (!license) {
      return this.warn("missingLicense");
    }
    if (typeof license !== "string" || license.length < 1 || license.trim() === "") {
      return this.warn("invalidLicense");
    }
    if (!validateLicense(license).validForNewPackages) {
      return this.warn("invalidLicense");
    }
  }
};
function isValidScopedPackageName(spec) {
  if (spec.charAt(0) !== "@") {
    return false;
  }
  var rest = spec.slice(1).split("/");
  if (rest.length !== 2) {
    return false;
  }
  return rest[0] && rest[1] && rest[0] === encodeURIComponent(rest[0]) && rest[1] === encodeURIComponent(rest[1]);
}
function isCorrectlyEncodedName(spec) {
  return !spec.match(/[/@\s+%:]/) && spec === encodeURIComponent(spec);
}
function ensureValidName(name, strict, allowLegacyCase) {
  if (name.charAt(0) === "." || !(isValidScopedPackageName(name) || isCorrectlyEncodedName(name)) || strict && !allowLegacyCase && name !== name.toLowerCase() || name.toLowerCase() === "node_modules" || name.toLowerCase() === "favicon.ico") {
    throw new Error("Invalid name: " + JSON.stringify(name));
  }
}
function modifyPeople(data2, fn) {
  if (data2.author) {
    data2.author = fn(data2.author);
  }
  ["maintainers", "contributors"].forEach(function(set) {
    if (!Array.isArray(data2[set])) {
      return;
    }
    data2[set] = data2[set].map(fn);
  });
  return data2;
}
function unParsePerson(person) {
  if (typeof person === "string") {
    return person;
  }
  var name = person.name || "";
  var u = person.url || person.web;
  var url4 = u ? " (" + u + ")" : "";
  var e = person.email || person.mail;
  var email = e ? " <" + e + ">" : "";
  return name + email + url4;
}
function parsePerson(person) {
  if (typeof person !== "string") {
    return person;
  }
  var name = person.match(/^([^(<]+)/);
  var url4 = person.match(/\(([^)]+)\)/);
  var email = person.match(/<([^>]+)>/);
  var obj = {};
  if (name && name[0].trim()) {
    obj.name = name[0].trim();
  }
  if (email) {
    obj.email = email[1];
  }
  if (url4) {
    obj.url = url4[1];
  }
  return obj;
}
function addOptionalDepsToDeps(data2, warn) {
  var o = data2.optionalDependencies;
  if (!o) {
    return;
  }
  var d = data2.dependencies || {};
  Object.keys(o).forEach(function(k) {
    d[k] = o[k];
  });
  data2.dependencies = d;
}
function depObjectify(deps, type, warn) {
  if (!deps) {
    return {};
  }
  if (typeof deps === "string") {
    deps = deps.trim().split(/[\n\r\s\t ,]+/);
  }
  if (!Array.isArray(deps)) {
    return deps;
  }
  warn("deprecatedArrayDependencies", type);
  var o = {};
  deps.filter(function(d) {
    return typeof d === "string";
  }).forEach(function(d) {
    d = d.trim().split(/(:?[@\s><=])/);
    var dn = d.shift();
    var dv = d.join("");
    dv = dv.trim();
    dv = dv.replace(/^@/, "");
    o[dn] = dv;
  });
  return o;
}
function objectifyDeps(data2, warn) {
  depTypes.forEach(function(type) {
    if (!data2[type]) {
      return;
    }
    data2[type] = depObjectify(data2[type], type, warn);
  });
}
function bugsTypos(bugs2, warn) {
  if (!bugs2) {
    return;
  }
  Object.keys(bugs2).forEach(function(k) {
    if (typos.bugs[k]) {
      warn("typo", k, typos.bugs[k], "bugs");
      bugs2[typos.bugs[k]] = bugs2[k];
      delete bugs2[k];
    }
  });
}
var __export014;
if (Object.isExtensible(module50.exports) && Object.keys(module50.exports).length === 1) {
  __export014 = module50.exports["warn"];
}
var fixer_default = module50.exports;

// node_modules/.pnpm/normalize-package-data@3.0.3/node_modules/normalize-package-data/lib/normalize.js
function $$cjs_default$$29(requiredModule) {
  var Object2 = (typeof window !== "undefined" && window || typeof self !== "undefined" && self || typeof global30 !== "undefined" && global30 || typeof globalThis !== "undefined" && globalThis || {}).Object;
  var isEsModule = false;
  var specifiers = Object2.create(null);
  var hasNamedExports = false;
  var hasDefaultExport = false;
  Object2.defineProperty(specifiers, "__esModule", {
    value: true,
    enumerable: false,
    configurable: true
  });
  if (requiredModule) {
    var names2 = Object2.getOwnPropertyNames(requiredModule);
    ;
    names2.forEach(function(k) {
      if (k === "default") {
        hasDefaultExport = true;
      } else if (!hasNamedExports && k != "__esModule") {
        try {
          hasNamedExports = requiredModule[k] != null;
        } catch (err) {
        }
      }
      Object2.defineProperty(specifiers, k, {
        get: function() {
          return requiredModule[k];
        },
        enumerable: true,
        configurable: false
      });
    });
    if (Object2.getOwnPropertySymbols) {
      var symbols = Object2.getOwnPropertySymbols(requiredModule);
      symbols.forEach(function(k) {
        Object2.defineProperty(specifiers, k, {
          get: function() {
            return requiredModule[k];
          },
          enumerable: false,
          configurable: false
        });
      });
    }
    Object2.preventExtensions(specifiers);
    Object2.seal(specifiers);
    if (Object2.freeze) {
      Object2.freeze(specifiers);
    }
  }
  if (hasNamedExports) {
    return specifiers;
  }
  if (hasDefaultExport) {
    if (Object2.isExtensible(specifiers.default) && !("default" in specifiers.default)) {
      Object2.defineProperty(specifiers.default, "default", {
        value: specifiers.default,
        configurable: false,
        enumerable: false
      });
    }
    return specifiers.default;
  }
  return specifiers;
}
var global30 = globalThis;
var exports50 = {};
var module51 = {
  get exports() {
    return exports50;
  },
  set exports(value) {
    exports50 = value;
  }
};
module51.exports = normalize;
var fixer = $$cjs_default$$29(typeof fixer_exports !== "undefined" ? fixer_exports : {});
normalize.fixer = fixer;
var makeWarning = $$cjs_default$$29(typeof make_warning_exports !== "undefined" ? make_warning_exports : {});
var fieldsToFix = [
  "name",
  "version",
  "description",
  "repository",
  "modules",
  "scripts",
  "files",
  "bin",
  "man",
  "bugs",
  "keywords",
  "readme",
  "homepage",
  "license"
];
var otherThingsToFix = ["dependencies", "people", "typos"];
var thingsToFix = fieldsToFix.map(function(fieldName) {
  return ucFirst(fieldName) + "Field";
});
thingsToFix = thingsToFix.concat(otherThingsToFix);
function normalize(data2, warn, strict) {
  if (warn === true) {
    warn = null;
    strict = true;
  }
  if (!strict) {
    strict = false;
  }
  if (!warn || data2.private) {
    warn = function(msg) {
    };
  }
  if (data2.scripts && data2.scripts.install === "node-gyp rebuild" && !data2.scripts.preinstall) {
    data2.gypfile = true;
  }
  fixer.warn = function() {
    warn(makeWarning.apply(null, arguments));
  };
  thingsToFix.forEach(function(thingName) {
    fixer["fix" + ucFirst(thingName)](data2, strict);
  });
  data2._id = data2.name + "@" + data2.version;
}
function ucFirst(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}
var normalize_default = module51.exports;

// node_modules/.pnpm/read-pkg@7.0.0/node_modules/read-pkg/index.js
async function readPackage({ cwd = process4.cwd(), normalize: normalize2 = true } = {}) {
  const filePath = path4.resolve(cwd, "package.json");
  const json = parse_json_default(await fsPromises2.readFile(filePath, "utf8"));
  if (normalize2) {
    normalize_default(json);
  }
  return json;
}

// node_modules/.pnpm/read-pkg-up@9.0.0/node_modules/read-pkg-up/index.js
async function readPackageUp(options) {
  const filePath = await findUp("package.json", options);
  if (!filePath) {
    return;
  }
  return {
    packageJson: await readPackage(__spreadProps(__spreadValues({}, options), { cwd: path5.dirname(filePath) })),
    path: filePath
  };
}

// src/index.ts
import fs4 from "fs";
var defaultOptions = {
  banner: `/*! <%= pkg.name %> v<%= pkg.version %> | <%= pkg.license %> */`,
  thirdParty: {
    includePrivate: false,
    output: {
      file: "dependencies.txt",
      template(dependencies) {
        return dependencies.map((dependency) => `${dependency.packageJson.name}:${dependency.packageJson.version} -- ${dependency.packageJson.license}`).join("\n");
      }
    }
  }
};
function esbuildPluginLicense(options = {}) {
  const loadedPackages = /* @__PURE__ */ new Map();
  const dependencies = [];
  const getLicenseText = async (pkgJsonPath) => {
    const dir = path6.dirname(pkgJsonPath);
    const files = fs4.readdirSync(dir);
    const idx = files.findIndex((file) => {
      if (file.toLocaleLowerCase().includes("license"))
        return true;
      else
        return false;
    });
    if (idx !== -1) {
      return fs4.readFileSync(path6.join(dir, files[idx])).toString();
    }
    return "";
  };
  return {
    name: "esbuild-plugin-license",
    async setup(build2) {
      var _a;
      const pkg = await readPackageUp();
      const banner = options.banner || defaultOptions.banner;
      let userBanner = (_a = build2.initialOptions.banner) == null ? void 0 : _a.js;
      userBanner = userBanner ? userBanner + "\n" : "";
      build2.initialOptions.banner = __spreadProps(__spreadValues({}, build2.initialOptions.banner), {
        js: userBanner + template_default(banner)({ pkg: pkg == null ? void 0 : pkg.packageJson })
      });
      build2.onLoad({ filter: /.*/ }, async (args) => {
        var _a2;
        const result = await readPackageUp({
          cwd: path6.dirname(args.path)
        });
        if (result) {
          if (loadedPackages.has(result.packageJson.name)) {
            const oldVersion = (_a2 = loadedPackages.get(result.packageJson.name)) == null ? void 0 : _a2.packageJson.version;
            if (!oldVersion || oldVersion < result.packageJson.version) {
              loadedPackages.set(result.packageJson.name, result);
            }
          } else {
            loadedPackages.set(result.packageJson.name, result);
          }
        }
        return null;
      });
      build2.onEnd(async () => {
        var _a2, _b, _c, _d, _e, _f, _g;
        const includePrivate = (_b = (_a2 = options.thirdParty) == null ? void 0 : _a2.includePrivate) != null ? _b : defaultOptions.thirdParty.includePrivate;
        for await (const [name, result] of [...loadedPackages.entries()].sort((a, b) => a[0] < b[0] ? -1 : 1)) {
          if (!includePrivate && result.packageJson.private)
            continue;
          if (!name)
            continue;
          if (result.packageJson.name === (pkg == null ? void 0 : pkg.packageJson.name))
            continue;
          dependencies.push({
            packageJson: result.packageJson,
            licenseText: await getLicenseText(result.path)
          });
        }
        const output = (_d = (_c = options.thirdParty) == null ? void 0 : _c.output) != null ? _d : defaultOptions.thirdParty.output;
        let outputFile = (_e = output.file) != null ? _e : defaultOptions.thirdParty.output.file;
        const outputTemplate = (_f = output.template) != null ? _f : defaultOptions.thirdParty.output.template;
        const outdir = (_g = build2.initialOptions.outdir) != null ? _g : ".";
        if (!path6.isAbsolute(outputFile))
          outputFile = path6.join(outdir, outputFile);
        let thirdPartyLicenseResult = "";
        if (typeof outputTemplate === "string") {
          thirdPartyLicenseResult = template_default(outputTemplate)(dependencies);
        } else {
          thirdPartyLicenseResult = outputTemplate(dependencies, {
            packageJson: pkg.packageJson,
            licenseText: await getLicenseText(pkg.path)
          });
        }
        fs4.writeFileSync(outputFile, thirdPartyLicenseResult, {
          encoding: "utf-8"
        });
      });
    }
  };
}
export {
  esbuildPluginLicense as default,
  defaultOptions
};
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
//# sourceMappingURL=index.mjs.map